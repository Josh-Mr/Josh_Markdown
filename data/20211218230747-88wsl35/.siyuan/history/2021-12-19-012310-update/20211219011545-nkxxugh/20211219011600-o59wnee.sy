{
	"ID": "20211219011600-o59wnee",
	"Type": "NodeDocument",
	"Properties": {
		"icon": "1f4dd",
		"id": "20211219011600-o59wnee",
		"title": "XML简介",
		"updated": "20211219012237"
	},
	"Children": [
		{
			"ID": "20211219012048-2b63gna",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20211219012048-2b63gna",
				"updated": "20211219012237"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、基本概念"
				}
			]
		},
		{
			"ID": "20211219011614-dei3o51",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211219011614-dei3o51",
				"updated": "20211219011614"
			},
			"Children": [
				{
					"ID": "20211219011614-hcq4csv",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20211219011614-hcq4csv"
					},
					"Children": [
						{
							"ID": "20211219011614-7nctz87",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-7nctz87",
								"updated": "20211219012106"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "eXtensible Markup Language （可扩展的标记语言）。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-oq5k88b",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20211219011614-oq5k88b"
					},
					"Children": [
						{
							"ID": "20211219011614-gh2j2il",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-gh2j2il"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Document Type Definition （DTD，文档类型定义）用于校验XML是否正确。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-51ud7ns",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20211219011614-51ud7ns"
					},
					"Children": [
						{
							"ID": "20211219011614-3qb2utx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-3qb2utx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "XML 中的每个元素都是成对出现的（有开始，有结束），\u003cstudent\u003e \u003c/student\u003e， XML 中的元素嵌套关系要保持正确性，即先开始的标记要先结束，后开始的 标记要后结束。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-cvstwlp",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20211219011614-cvstwlp"
					},
					"Children": [
						{
							"ID": "20211219011614-e7fba4i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-e7fba4i"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "每一个 XML 文档都有且只有一个根元素（Root Element）。 所谓根元素，就是 唯一一个包含了其他所有元素的元素。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-hcji5ap",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20211219011614-hcji5ap"
					},
					"Children": [
						{
							"ID": "20211219011614-6ozihz4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-6ozihz4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "XML 描述的是文档的内容与语义，而不是文档应当如何显示。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-xpe0a5i",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20211219011614-xpe0a5i"
					},
					"Children": [
						{
							"ID": "20211219011614-rel3suv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-rel3suv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用 XML 可以实现异构语言、异构平台之间的交互。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-1fgp24o",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ny4=",
						"Num": 7
					},
					"Properties": {
						"id": "20211219011614-1fgp24o"
					},
					"Children": [
						{
							"ID": "20211219011614-y9c8uj7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-y9c8uj7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于 XML 文档来说，\u003c?处理指令必须要顶格写，前面不能有任何的空白。 8. XML 元素可以具有属性，属性的形式为： 属性名=”属性值”，比如 gender=”male” 属性值需要使用单引号或双引号括起来。多个属性之间使用空格分开。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-9yuvqbp",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "OC4=",
						"Num": 8
					},
					"Properties": {
						"id": "20211219011614-9yuvqbp"
					},
					"Children": [
						{
							"ID": "20211219011614-964ezdp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-964ezdp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过样式，我们可以实现 XML 内容与展现形式的分离"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-88i8vzk",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "OS4=",
						"Num": 9
					},
					"Properties": {
						"id": "20211219011614-88i8vzk"
					},
					"Children": [
						{
							"ID": "20211219011614-gcuhpb0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-gcuhpb0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "XML 的注释：\u003c!-- comments  --\u003e ，注释不允许嵌套。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211219011614-d3th3e5",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211219011614-d3th3e5",
				"updated": "20211219011931"
			},
			"Children": [
				{
					"ID": "20211219011931-cd984z6",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MTEu",
						"Num": 11
					},
					"Properties": {
						"id": "20211219011931-cd984z6"
					},
					"Children": [
						{
							"ID": "20211219011931-nobrkjm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011931-nobrkjm"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第一行是声明和指令，如果在声明中standolone=”yes”指的是独立文档不需要DTD校验。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211219011614-sfrw2si",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211219011614-sfrw2si",
				"updated": "20211219011932"
			},
			"Children": [
				{
					"ID": "20211219011932-12ldio1",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MTIu",
						"Num": 12
					},
					"Properties": {
						"id": "20211219011932-12ldio1"
					},
					"Children": [
						{
							"ID": "20211219011932-d4i2szz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011932-d4i2szz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "encoding=”utf-8”是编码方式（utf-8支持所有的语言）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211219011614-dei3o51",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211219011614-dei3o51",
				"updated": "20211219011614"
			},
			"Children": [
				{
					"ID": "20211219011614-hcq4csv",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20211219011614-hcq4csv"
					},
					"Children": [
						{
							"ID": "20211219011614-7nctz87",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-7nctz87",
								"updated": "20211219012106"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "eXtensible Markup Language （可扩展的标记语言）。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-oq5k88b",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20211219011614-oq5k88b"
					},
					"Children": [
						{
							"ID": "20211219011614-gh2j2il",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-gh2j2il"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Document Type Definition （DTD，文档类型定义）用于校验XML是否正确。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-51ud7ns",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20211219011614-51ud7ns"
					},
					"Children": [
						{
							"ID": "20211219011614-3qb2utx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-3qb2utx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "XML 中的每个元素都是成对出现的（有开始，有结束），\u003cstudent\u003e \u003c/student\u003e， XML 中的元素嵌套关系要保持正确性，即先开始的标记要先结束，后开始的 标记要后结束。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-cvstwlp",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20211219011614-cvstwlp"
					},
					"Children": [
						{
							"ID": "20211219011614-e7fba4i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-e7fba4i"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "每一个 XML 文档都有且只有一个根元素（Root Element）。 所谓根元素，就是 唯一一个包含了其他所有元素的元素。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-hcji5ap",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20211219011614-hcji5ap"
					},
					"Children": [
						{
							"ID": "20211219011614-6ozihz4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-6ozihz4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "XML 描述的是文档的内容与语义，而不是文档应当如何显示。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-xpe0a5i",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20211219011614-xpe0a5i"
					},
					"Children": [
						{
							"ID": "20211219011614-rel3suv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-rel3suv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用 XML 可以实现异构语言、异构平台之间的交互。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-1fgp24o",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ny4=",
						"Num": 7
					},
					"Properties": {
						"id": "20211219011614-1fgp24o"
					},
					"Children": [
						{
							"ID": "20211219011614-y9c8uj7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-y9c8uj7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于 XML 文档来说，\u003c?处理指令必须要顶格写，前面不能有任何的空白。 8. XML 元素可以具有属性，属性的形式为： 属性名=”属性值”，比如 gender=”male” 属性值需要使用单引号或双引号括起来。多个属性之间使用空格分开。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-9yuvqbp",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "OC4=",
						"Num": 8
					},
					"Properties": {
						"id": "20211219011614-9yuvqbp"
					},
					"Children": [
						{
							"ID": "20211219011614-964ezdp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-964ezdp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过样式，我们可以实现 XML 内容与展现形式的分离"
								}
							]
						}
					]
				},
				{
					"ID": "20211219011614-88i8vzk",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "OS4=",
						"Num": 9
					},
					"Properties": {
						"id": "20211219011614-88i8vzk"
					},
					"Children": [
						{
							"ID": "20211219011614-gcuhpb0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219011614-gcuhpb0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "XML 的注释：\u003c!-- comments  --\u003e ，注释不允许嵌套。"
								}
							]
						}
					]
				}
			]
		}
	]
}