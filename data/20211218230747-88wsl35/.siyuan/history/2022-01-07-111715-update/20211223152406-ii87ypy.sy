{
	"ID": "20211223152406-ii87ypy",
	"Type": "NodeDocument",
	"Properties": {
		"icon": "1f4dd",
		"id": "20211223152406-ii87ypy",
		"title": "（未分类）",
		"updated": "20220107111515"
	},
	"Children": [
		{
			"ID": "20211223152508-fq9ei74",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211223152508-fq9ei74",
				"updated": "20211223152909"
			},
			"Children": [
				{
					"ID": "20211223152855-5z9baw9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20211223152855-5z9baw9",
						"updated": "20211223152909"
					},
					"Children": [
						{
							"ID": "20211223152855-gs4dipm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223152855-gs4dipm",
								"updated": "20211223152909"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "mybaties查询空字段问题"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223152525-8vpbzdh",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211223152525-8vpbzdh",
				"updated": "20211223152601"
			},
			"Children": [
				{
					"ID": "20211223152522-mla7mpk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211223152522-mla7mpk"
					},
					"Children": [
						{
							"ID": "20211223152522-2xbhwce",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223152522-2xbhwce",
								"updated": "20211223152530"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "this.queryCols(param, \"BISCOLLECT\")"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20211223152540-p9cwihk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211223152540-p9cwihk"
					},
					"Children": [
						{
							"ID": "20211223152540-9nrb099",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223152540-9nrb099",
								"updated": "20211223152541"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "BISCOLLECT如果查出来为空时，mybaties封装map为null，导致空指针。"
								}
							]
						}
					]
				},
				{
					"ID": "20211223152542-cdnb75w",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211223152542-cdnb75w",
						"updated": "20211223152601"
					},
					"Children": [
						{
							"ID": "20211223152542-5xk9z78",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223152542-5xk9z78",
								"updated": "20211223152601"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "解决办法：我们查一个字段的时候，最好加多一个主键查询。this.queryCols(param, \"BISCOLLECT\",\"id_\");\n底层用的是：  List\u003cMap\u003cString, Object\u003e\u003e selectMaps(@Param(Constants.WRAPPER) Wrapper\u003cT\u003e queryWrapper);"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223152608-zaawgw2",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211223152608-zaawgw2",
				"updated": "20211223152907"
			},
			"Children": [
				{
					"ID": "20211223152900-8fjgyol",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20211223152900-8fjgyol",
						"updated": "20211223152907"
					},
					"Children": [
						{
							"ID": "20211223152900-3lzbdbb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223152900-3lzbdbb",
								"updated": "20211223152907"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "字符串预占符号%s"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223152813-d8fr2oq",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211223152813-d8fr2oq",
				"updated": "20211223152839"
			},
			"Children": [
				{
					"ID": "20211223152818-ihxumqt",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211223152818-ihxumqt",
						"updated": "20211223152839"
					},
					"Children": [
						{
							"ID": "20211223152818-t1lqrpk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223152818-t1lqrpk",
								"updated": "20211223152839"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "处理模板数据"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223152645-shq26r0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20211223152645-shq26r0",
				"updated": "20211223152810"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "String format = \"select distinct versiondate \n\tfrom ps_sm_trade_pro_history where pk_trade='%s' \n\tand versiondate\u003e'%s' order by versiondate asc\";\n\nString bigVersiondateSql = String.format(format, pk_trade, versiondate);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20211223152845-wrz9lo1",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211223152845-wrz9lo1",
				"updated": "20211223153922"
			},
			"Children": [
				{
					"ID": "20211223152903-orifd7h",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20211223152903-orifd7h",
						"updated": "20211223153922"
					},
					"Children": [
						{
							"ID": "20211223152903-5d3x08f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223152903-5d3x08f",
								"updated": "20211223153831"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Mybatis多表连接问题"
								}
							]
						},
						{
							"ID": "20211223153833-65ldmb6",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20211223153833-65ldmb6",
								"updated": "20211223153922"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "eG1s"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "用法：\n\u003c!--扩展结果集--\u003e\n\u003cresultMap id=\"extendResultMap\" type=\"com.redxun.bill.asc.entity.PsSmTrade\" extends=\"associationResultMap\"\u003e\n        \u003ccollection property=\"psSmTradeProList\" column=\"{pk_trade.id=id_}\" ofType=\"com.redxun.bill.asc.entity.PsSmTradePro\" \n\tselect=\"com.redxun.bill.asc.mapper.PsSmTradeProMapper.queryListByEntity\" /\u003e\n\u003c/resultMap\u003e\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223153906-gj6nbvs",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211223153906-gj6nbvs",
				"updated": "20211223154209"
			},
			"Children": [
				{
					"ID": "20211223154159-0czbjdr",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20211223154159-0czbjdr",
						"updated": "20211223154209"
					},
					"Children": [
						{
							"ID": "20211223154159-dt9sdzn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223154159-dt9sdzn",
								"updated": "20211223154204"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "mysql 连接数问题\n"
								}
							]
						},
						{
							"ID": "20211223154205-rgfr4jx",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20211223154205-rgfr4jx",
								"updated": "20211223154209"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "c3Fs"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "--查看连接数\nshow variables like '%max_connect_errors%'\n--设置连接数\nset global max_connect_errors=300;\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223154210-1mby3qw",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211223154210-1mby3qw",
				"updated": "20211223154307"
			},
			"Children": [
				{
					"ID": "20211223154238-c50vgyh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20211223154238-c50vgyh",
						"updated": "20211223154307"
					},
					"Children": [
						{
							"ID": "20211223154238-wd8mcsp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223154238-wd8mcsp",
								"updated": "20211223154300"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "原生js获取当前时间字符串"
								}
							]
						},
						{
							"ID": "20211223154304-4w9dnzf",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20211223154304-4w9dnzf",
								"updated": "20211223154307"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "anM="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "    //获取当前时间\n    getCurrentTime() {\n      let today = new Date();\n      let year = today.getFullYear();\n      let month = (today.getMonth() + 1) \u003e 9 ? (today.getMonth() + 1) : (\"0\"+(today.getMonth() + 1));\n      let day = today.getDate() \u003e 9 ? today.getDate() : (\"0\"+today.getDate());\n      let hours = today.getHours() \u003e 9 ? today.getHours() : (\"0\"+today.getHours());\n      let minutes = today.getMinutes() \u003e 9 ? today.getMinutes() : (\"0\"+today.getMinutes());\n      let seconds = today.getSeconds() \u003e 9 ? today.getSeconds() : (\"0\"+today.getSeconds());\n      let timeString = year + \"-\" + month + \"-\" + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\n      return timeString;\n    },\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223154310-6ciu649",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211223154310-6ciu649",
				"updated": "20211223154657"
			},
			"Children": [
				{
					"ID": "20211223154611-y5hkgoy",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20211223154611-y5hkgoy",
						"updated": "20211223154657"
					},
					"Children": [
						{
							"ID": "20211223154611-vs807pb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223154611-vs807pb",
								"updated": "20211223154657"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "mybaties-plus ："
								}
							]
						},
						{
							"ID": "20211223154620-ec9ujng",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20211223154620-ec9ujng",
								"updated": "20211223154648"
							},
							"Children": [
								{
									"ID": "20211223154622-tdnsuki",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20211223154622-tdnsuki",
										"updated": "20211223154648"
									},
									"Children": [
										{
											"ID": "20211223154622-0rcxk6o",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211223154622-0rcxk6o",
												"updated": "20211223154648"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "批量保存和更新默认是1000执行一次"
												}
											]
										}
									]
								},
								{
									"ID": "20211223154629-hmnizcb",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20211223154629-hmnizcb"
									},
									"Children": [
										{
											"ID": "20211223154629-h4b2skm",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211223154629-h4b2skm"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "执行完了再提交"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223154650-vshet8g",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211223154650-vshet8g",
				"updated": "20211223155617"
			},
			"Children": [
				{
					"ID": "20211223154701-lnnnv79",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ny4=",
						"Num": 7
					},
					"Properties": {
						"id": "20211223154701-lnnnv79",
						"updated": "20211223155617"
					},
					"Children": [
						{
							"ID": "20211223154701-rj2p53t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223154701-rj2p53t",
								"updated": "20211223155449"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手动回滚事务"
								}
							]
						},
						{
							"ID": "20211223155450-4iss7u8",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20211223155450-4iss7u8",
								"updated": "20211223155617"
							},
							"Children": [
								{
									"ID": "20211223155457-zen6knh",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20211223155457-zen6knh",
										"updated": "20211223155617"
									},
									"Children": [
										{
											"ID": "20211223155457-2xy5nwo",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211223155457-2xy5nwo",
												"updated": "20211223155457"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "我们都喜欢在方法上面加上 @Transactional 注解的方式来实现事务，但是事物回滚是当代码发生异常并抛出来的时候，才会主动触发事物回滚，但是有的时候，我们希望满足某个条件就触发事物的回滚操作（如：某一张表数据更新未能成功更新），这种情况下要如何做？这里记录两种方案："
												}
											]
										},
										{
											"ID": "20211223155457-acql3n0",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211223155457-acql3n0",
												"updated": "20211223155614"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "前提：在方法上面加上："
												},
												{
													"Type": "NodeCodeSpan",
													"Data": "code",
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "@Transactional"
														},
														{
															"Type": "NodeCodeSpanCloseMarker"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": " 注解"
												}
											]
										},
										{
											"ID": "20211223155457-na4mg3d",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211223155457-na4mg3d",
												"updated": "20211223155611"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "1、手动抛出一个异常："
												},
												{
													"Type": "NodeCodeSpan",
													"Data": "code",
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "throw new RuntimeException();"
														},
														{
															"Type": "NodeCodeSpanCloseMarker"
														}
													]
												}
											]
										},
										{
											"ID": "20211223155457-eckz90w",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211223155457-eckz90w",
												"updated": "20211223155617"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "2、通过方法回滚："
												},
												{
													"Type": "NodeCodeSpan",
													"Data": "code",
													"Children": [
														{
															"Type": "NodeCodeSpanOpenMarker"
														},
														{
															"Type": "NodeCodeSpanContent",
															"Data": "TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();"
														},
														{
															"Type": "NodeCodeSpanCloseMarker"
														}
													]
												}
											]
										},
										{
											"ID": "20211223155457-usa0xvq",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211223155457-usa0xvq",
												"updated": "20211223155457"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "特别说明：当在方法内部如果加了 try {} catch() {} 时，是不会主动触发事务，这个时候就需要再catch 代码块中主动回滚事务或者继续抛出一个异常。如以下代码："
												}
											]
										},
										{
											"ID": "20211223155457-xs1jqdk",
											"Type": "NodeThematicBreak",
											"Properties": {
												"id": "20211223155457-xs1jqdk",
												"updated": "20211223155457"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223155526-ybvw3dv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20211223155526-ybvw3dv",
				"updated": "20211223155530"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Transaction\npublic String methodName() {\n    try {\n        // 逻辑代码\n    } catch(Exception e) {\n        // 当上面的方法发生异常时\n        TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();\n        e.printStackTrace();\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20211223155701-c9e7c05",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211223155701-c9e7c05",
				"updated": "20211223155728"
			},
			"Children": [
				{
					"ID": "20211223155705-vwlesd9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "OC4=",
						"Num": 8
					},
					"Properties": {
						"id": "20211223155705-vwlesd9",
						"updated": "20211223155728"
					},
					"Children": [
						{
							"ID": "20211223155705-4386pry",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223155705-4386pry",
								"updated": "20211223155718"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "手动开启事务多次提交"
								}
							]
						},
						{
							"ID": "20211223155719-3n4a44d",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20211223155719-3n4a44d",
								"updated": "20211223155728"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "手动开启事务多次提交：\n@Autowired\nDataSourceTransactionManager dataSourceTransactionManager;\n@Autowired\nTransactionDefinition transactionDefinition;\n\n//手动开启事务！\nTransactionStatus transactionStatus = dataSourceTransactionManager.getTransaction(transactionDefinition);\n/**/业务代码\n//提交\ntransactionManager.commit(transactionStatus);\n//最好是放在catch 里面,防止程序异常而事务一直卡在哪里未提交\ntransactionManager.rollback(transactionStatus);\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223155729-c158bwn",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211223155729-c158bwn",
				"updated": "20211223163832"
			},
			"Children": [
				{
					"ID": "20211223163824-o59q5u9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "OS4=",
						"Num": 9
					},
					"Properties": {
						"id": "20211223163824-o59q5u9",
						"updated": "20211223163832"
					},
					"Children": [
						{
							"ID": "20211223163824-cfv277o",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223163824-cfv277o",
								"updated": "20211223163825"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "nginx集群检查nginx 是否宕机"
								}
							]
						},
						{
							"ID": "20211223163827-ipdjm5f",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20211223163827-ipdjm5f",
								"updated": "20211223163832"
							},
							"Children": [
								{
									"ID": "20211223163827-v951uir",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20211223163827-v951uir",
										"updated": "20211223163832"
									},
									"Children": [
										{
											"ID": "20211223163827-gospsuc",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211223163827-gospsuc",
												"updated": "20211223163832"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Keepalived是一个基于VRRP协议来实现的服务高可用方案，可以利用其来避免IP单点故障，类似的工具还有heartbeat、corosync、pacemaker。但是它一般不会单独出现，而是与其它负载均衡技术（如lvs、haproxy、nginx）一起工作来达到集群的高可用。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223163833-s7tt858",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211223163833-s7tt858",
				"updated": "20211223171921"
			},
			"Children": [
				{
					"ID": "20211223171820-x0pofrc",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MTAu",
						"Num": 10
					},
					"Properties": {
						"id": "20211223171820-x0pofrc",
						"updated": "20211223171921"
					},
					"Children": [
						{
							"ID": "20211223171820-gh4eldi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223171820-gh4eldi",
								"updated": "20211223171832"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "nginx配置静态资源访问"
								}
							]
						},
						{
							"ID": "20211223171833-4i8jn0o",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20211223171833-4i8jn0o",
								"updated": "20211223171921"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "cHJvcGVydGllcw=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "server {\n      #这里是我自己配置服务端口\n      listen       888;\n      server_name resouce;\n      root  D:/DataStorages;  #访问文件根目录\n      autoindex on;  #是否浏览文件下的列表\n      location / {  #是否允许跨域\n          add_header Access-Control-Allow-Origin *;\n      }\n      add_header Cache-Control \"no-cache,must-revalidate\";# 是否缓存\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223172404-3y39tm5",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211223172404-3y39tm5",
				"updated": "20211223172427"
			},
			"Children": [
				{
					"ID": "20211223172411-1gvld1e",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211223172411-1gvld1e",
						"updated": "20211223172427"
					},
					"Children": [
						{
							"ID": "20211223172411-aeaake5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223172411-aeaake5",
								"updated": "20211223172423"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "数据库分页SQL"
								}
							]
						},
						{
							"ID": "20211223172423-3yc18ol",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20211223172423-3yc18ol",
								"updated": "20211223172427"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "c3Fs"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "--Oracle 分页：\n  select temp2.*\n  from (select temp1.*, rownum rn\n          from (select main.*\n                  from ps_transfer_h main\n                 where 1 = 1\n                   and main.dr = 0\n                -- and main.table_name like '%认购%'\n                ) temp1\n         where rownum \u003c= 5 --#{endPage,jdbcType=INTEGER}\n        ) temp2\n where rn \u003e 2 --#{startPage,jdbcType=INTEGER}\n --Mysql分页\n select * from sys_menu limit 4,10\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223172440-j3cmpsq",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211223172440-j3cmpsq",
				"updated": "20211223221040"
			},
			"Children": [
				{
					"ID": "20211223172441-j0smu69",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211223172441-j0smu69",
						"updated": "20211223221040"
					},
					"Children": [
						{
							"ID": "20211223172441-nfq671b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223172441-nfq671b",
								"updated": "20211223172446"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "java断言"
								}
							]
						},
						{
							"ID": "20211223172521-ye91gqc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223172521-ye91gqc",
								"updated": "20211223221040"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Assert.notNull(typeEnumsPackageArray, \"not find typeEnumsPackage:\" + typeEnumsPackage);"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223172528-hthzmzd",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211223172528-hthzmzd",
				"updated": "20211223221032"
			},
			"Children": [
				{
					"ID": "20211223173130-2cc2l1l",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211223173130-2cc2l1l",
						"updated": "20211223221032"
					},
					"Children": [
						{
							"ID": "20211223173132-12ukjer",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223173132-12ukjer",
								"updated": "20211223173153"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "nacos配置实时刷新"
								}
							]
						},
						{
							"ID": "20211223173153-tndjymo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223173153-tndjymo",
								"updated": "20211223221030"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "@Autowired --nacos配置实时刷新生效"
								}
							]
						},
						{
							"ID": "20211223173156-9nej9f6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223173156-9nej9f6",
								"updated": "20211223221032"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "@Resource   --nacos配置实时刷新不生效"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211223231314-6hxa0ck",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211223231314-6hxa0ck",
				"updated": "20211223231745"
			},
			"Children": [
				{
					"ID": "20211223231317-4m09em1",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211223231317-4m09em1",
						"updated": "20211223231745"
					},
					"Children": [
						{
							"ID": "20211223231317-6nmjhw8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223231317-6nmjhw8",
								"updated": "20211223231415"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "like语法可能存在SQL注入问题，解决如下："
								}
							]
						},
						{
							"ID": "20211223231444-qke6oy9",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20211223231444-qke6oy9",
								"updated": "20211223231717"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "c3Fs"
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "MySQL例子:select * from t_user where name like concat('%', #{name}, '%')\nOracle例子1:select * from t_user where name like '%' || #{name} || '%' \nOracle例子2:select * from t_user where code like CONCAT(CONCAT('%', #{code,jdbcType=VARCHAR}), '%')\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						},
						{
							"ID": "20211223231501-hh99ec6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211223231501-hh99ec6",
								"updated": "20211223231745"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "但涉及到动态表名和列名时，只能使用“${xxx}”这样的参数格式。所以，这样的参数需要我们在代码中手工进行处理来防止注入。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220104150012-h0ljsyd",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220104150012-h0ljsyd",
				"updated": "20220104150013"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "前端鉴权必须了解的 5 个兄弟：cookie、session、token、jwt、单点登录："
				}
			]
		},
		{
			"ID": "20220104145956-sgqwu34",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220104145956-sgqwu34",
				"updated": "20220104150004"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "https://mp.weixin.qq.com/s/ILV7qW8B23gI3tLlJkc0EQ"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://mp.weixin.qq.com/s/ILV7qW8B23gI3tLlJkc0EQ"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220104221644-usx7xpi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220104221644-usx7xpi",
				"updated": "20220104221644"
			}
		},
		{
			"ID": "20220105212242-66fhieu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220105212242-66fhieu",
				"updated": "20220105212232"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "秒杀系统："
				}
			]
		},
		{
			"ID": "20220105212242-kniow7b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220105212242-kniow7b",
				"updated": "20220105212222"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "https://github.com/qiurunze123/miaosha"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://github.com/qiurunze123/miaosha"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220107111504-kfugt48",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220107111504-kfugt48",
				"updated": "20220107111512"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输入网址后："
				}
			]
		},
		{
			"ID": "20220107111512-hmbip3s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220107111512-hmbip3s",
				"updated": "20220107111515"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "https://mp.weixin.qq.com/s/lybA0mZmD4SQJug9-AZXGw"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://mp.weixin.qq.com/s/lybA0mZmD4SQJug9-AZXGw"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220107111515-prcs5b2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220107111515-prcs5b2",
				"updated": "20220107111515"
			}
		}
	]
}