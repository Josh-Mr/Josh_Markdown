{
	"ID": "20220120145447-xyqa9nq",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220120145447-xyqa9nq",
		"title": "WS_Axis调用WS接口开发",
		"updated": "20220120145859"
	},
	"Children": [
		{
			"ID": "20220120145447-xkiixlu",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220120145447-xkiixlu",
				"updated": "20220120145751"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、pom文件："
				}
			]
		},
		{
			"ID": "20220120145735-lgmnkhg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220120145735-lgmnkhg",
				"updated": "20220120145809"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003c!-- https://mvnrepository.com/artifact/org.apache.axis/axis --\u003e\n        \u003cdependency\u003e\n            \u003cgroupId\u003eorg.apache.axis\u003c/groupId\u003e\n            \u003cartifactId\u003eaxis\u003c/artifactId\u003e\n            \u003cversion\u003e1.4\u003c/version\u003e\n        \u003c/dependency\u003e\n        \u003c!-- https://mvnrepository.com/artifact/axis/axis --\u003e\n        \u003cdependency\u003e\n            \u003cgroupId\u003eaxis\u003c/groupId\u003e\n            \u003cartifactId\u003eaxis\u003c/artifactId\u003e\n            \u003cversion\u003e1.0\u003c/version\u003e\n        \u003c/dependency\u003e\n        \u003c!-- https://mvnrepository.com/artifact/wsdl4j/wsdl4j --\u003e\n        \u003cdependency\u003e\n            \u003cgroupId\u003ewsdl4j\u003c/groupId\u003e\n            \u003cartifactId\u003ewsdl4j\u003c/artifactId\u003e\n            \u003cversion\u003e1.5.1\u003c/version\u003e\n        \u003c/dependency\u003e\n        \u003c!-- https://mvnrepository.com/artifact/javax.xml.rpc/javax.xml.rpc-api --\u003e\n        \u003cdependency\u003e\n            \u003cgroupId\u003ejavax.xml.rpc\u003c/groupId\u003e\n            \u003cartifactId\u003ejavax.xml.rpc-api\u003c/artifactId\u003e\n            \u003cversion\u003e1.1.2\u003c/version\u003e\n        \u003c/dependency\u003e\n        \u003c!-- https://mvnrepository.com/artifact/commons-logging/commons-logging --\u003e\n        \u003cdependency\u003e\n            \u003cgroupId\u003ecommons-logging\u003c/groupId\u003e\n            \u003cartifactId\u003ecommons-logging\u003c/artifactId\u003e\n            \u003cversion\u003e1.2\u003c/version\u003e\n        \u003c/dependency\u003e\n        \u003cdependency\u003e\n            \u003cgroupId\u003ecommons-discovery\u003c/groupId\u003e\n            \u003cartifactId\u003ecommons-discovery\u003c/artifactId\u003e\n            \u003cversion\u003e0.2\u003c/version\u003e\n        \u003c/dependency\u003e\n        \u003c!-- https://mvnrepository.com/artifact/javax.mail/mail --\u003e\n        \u003cdependency\u003e\n            \u003cgroupId\u003ejavax.mail\u003c/groupId\u003e\n            \u003cartifactId\u003email\u003c/artifactId\u003e\n            \u003cversion\u003e1.4\u003c/version\u003e\n        \u003c/dependency\u003e\n        \u003c!-- https://mvnrepository.com/artifact/javax.activation/activation --\u003e\n        \u003cdependency\u003e\n            \u003cgroupId\u003ejavax.activation\u003c/groupId\u003e\n            \u003cartifactId\u003eactivation\u003c/artifactId\u003e\n            \u003cversion\u003e1.1.1\u003c/version\u003e\n        \u003c/dependency\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220120145811-qr4kgzg",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220120145811-qr4kgzg",
				"updated": "20220120145821"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二、测试代码"
				}
			]
		},
		{
			"ID": "20220120145819-e4bxmox",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220120145819-e4bxmox",
				"updated": "20220120145833"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class webServiceTest {\n    public static void main(String[] args) {\n        try {\n            String endpoint = \"http://localhost:888/webservice?wsdl\";\n            //直接引用远程的wsdl文件\n            //以下都是套路\n            Service service = new Service();\n            Call call = (Call) service.createCall();\n            // 远程调用路径\n            call.setTargetEndpointAddress(endpoint);\n            //WSDL里面描述的接口名称+方法\n            call.setOperationName(new QName(\"http://josh.com/\", \"show\"));\n            call.addParameter(\"name\", XMLType.XSD_STRING,\n                    javax.xml.rpc.ParameterMode.IN);//接口的参数\n            call.addParameter(\"age\", XMLType.XSD_INT,\n                    javax.xml.rpc.ParameterMode.IN);//接口的参数\n            call.addParameter(\"date\", XMLType.XSD_DATE,\n                    javax.xml.rpc.ParameterMode.IN);//接口的参数\n            call.setReturnType(XMLType.XSD_STRING);//设置返回类型\n            /**\n             *注意这里，要设置Namespace\n             */\n            call.setEncodingStyle(\"utf-8\");//不设置有可能date，int类型用不了\n           Object[] o =  new Object[3];//Object是用来存储方法的参数\n           o[0]=\"测试人员\";\n           o[1] = 23;\n           o[2] = new Date();\n            String result = (String)call.invoke(o);\n            //给方法传递参数，并且调用方法\n            System.out.println(\"result is \"+result);\n        }\n        catch (Exception e) {\n            System.err.println(e.toString());\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}