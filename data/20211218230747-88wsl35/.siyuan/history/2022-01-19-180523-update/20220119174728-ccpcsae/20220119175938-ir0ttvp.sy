{
	"ID": "20220119175938-ir0ttvp",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220119175938-ir0ttvp",
		"title": "Nginx_负载均衡\u0026amp;Session复制共享配置",
		"updated": "20220119180520"
	},
	"Children": [
		{
			"ID": "20220119175938-gf9551s",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220119175938-gf9551s",
				"updated": "20220119180010"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、负载均衡配置"
				}
			]
		},
		{
			"ID": "20220119180011-f0xf9dj",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220119180011-f0xf9dj",
				"updated": "20220119180129"
			},
			"Children": [
				{
					"ID": "20220119180016-gy76kbz",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220119180016-gy76kbz",
						"updated": "20220119180129"
					},
					"Children": [
						{
							"ID": "20220119180016-8g5bc3p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220119180016-8g5bc3p",
								"updated": "20220119180017"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在nginx.xml增加下面信息"
								}
							]
						},
						{
							"ID": "20220119180021-8b6b91k",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20220119180021-8b6b91k",
								"updated": "20220119180129"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "eWFtbA=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "#配置负载均衡\n    upstream test.com{\n        server 192.168.234.66:88;\n        server 192.168.234.67:88;\n    }\n    server {\n        listen       80;\n        server_name  test.com;\n        location / {\n            #root   html;\n            #index  index.html index.htm;\n            proxy_set_header Host $host;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header   X-Real-IP        $remote_addr;\n            #设置响应头携带真实服务器Ip\n            add_header backendIP $upstream_addr;\n            add_header backendCode $upstream_status;\n            proxy_pass http://test.com;\n        }\n        #映射打印平台配置\n        location /sale-print {\n            proxy_set_header Host $host;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header   X-Real-IP        $remote_addr;\n            proxy_pass http://192.168.234.63:88/sale-print;\n        }\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220119180201-yies0dx",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220119180201-yies0dx",
				"updated": "20220119180203"
			},
			"Children": [
				{
					"ID": "20220119180203-ohf6abl",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220119180203-ohf6abl"
					},
					"Children": [
						{
							"ID": "20220119180214-jc1324e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220119180214-jc1324e",
								"updated": "20220119180218"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "localhost指令说明"
								}
							]
						},
						{
							"ID": "20220119180203-xckq8b6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220119180203-xckq8b6"
							},
							"Children": [
								{
									"Type": "NodeImage",
									"Data": "span",
									"Properties": {
										"parent-style": "max-width: 269px;",
										"style": "width: 259px;"
									},
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/Image(178)-20220119180203-zetcb2z.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"width: 259px;\" parent-style=\"max-width: 269px;\"}"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								}
							]
						},
						{
							"ID": "20220119180203-8wz9e76",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220119180203-8wz9e76"
							},
							"Children": [
								{
									"Type": "NodeImage",
									"Data": "span",
									"Properties": {
										"parent-style": "max-width: 582px;",
										"style": "width: 572px;"
									},
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/Image(179)-20220119180203-7th79xd.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"width: 572px;\" parent-style=\"max-width: 582px;\"}"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220119180240-m7e32aa",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220119180240-m7e32aa",
				"updated": "20220119180246"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二、Tomcat配置Session共享(三部曲)"
				}
			]
		},
		{
			"ID": "20220119180248-x4red5i",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220119180248-x4red5i",
				"updated": "20220119180310"
			},
			"Children": [
				{
					"ID": "20220119180250-2t7lkaz",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220119180250-2t7lkaz",
						"updated": "20220119180310"
					},
					"Children": [
						{
							"ID": "20220119180250-c1o37o4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220119180250-c1o37o4",
								"updated": "20220119180310"
							},
							"Children": [
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "Tomcat中../bin/server.xml配置"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20220119180256-y6hmr4f",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220119180256-y6hmr4f",
						"updated": "20220119180309"
					},
					"Children": [
						{
							"ID": "20220119180256-oginvjm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220119180256-oginvjm",
								"updated": "20220119180309"
							},
							"Children": [
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "具体项目的WEB-INF下的web.xml配置"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20220119180301-qc3q2hj",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20220119180301-qc3q2hj",
						"updated": "20220119180308"
					},
					"Children": [
						{
							"ID": "20220119180301-tz2gmlg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220119180301-tz2gmlg",
								"updated": "20220119180308"
							},
							"Children": [
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "测试页面进行测试"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220119180313-m08qd0v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220119180313-m08qd0v",
				"updated": "20220119180327"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例子："
				}
			]
		},
		{
			"ID": "20220119180333-jgzbme5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220119180333-jgzbme5",
				"updated": "20220119180409"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "1、在server.xml的【\u003cEngine defaultHost=\"localhost\" name=\"Catalina\"\u003e】下加上如下配置：\n        \u003c!--\n        Cluster(集群,族) 节点,如果你要配置tomcat集群,则需要使用此节点.\n        className 表示tomcat集群时,之间相互传递信息使用那个类来实现信息之间的传递.\n        channelSendOptions可以设置为2、4、8、10，每个数字代表一种方式\n        2 = Channel.SEND_OPTIONS_USE_ACK(确认发送)\n        4 = Channel.SEND_OPTIONS_SYNCHRONIZED_ACK(同步发送)\n        8 = Channel.SEND_OPTIONS_ASYNCHRONOUS(异步发送)\n        在异步模式下，可以通过加上确认发送(Acknowledge)来提高可靠性，此时channelSendOptions设为10\n        --\u003e\n        \u003cCluster className=\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"\n            channelSendOptions=\"8\"\u003e\n        \u003c!--\n        Manager决定如何管理集群的Session信息。Tomcat提供了两种Manager：BackupManager和DeltaManager\n        BackupManager－集群下的所有Session，将放到一个备份节点。集群下的所有节点都可以访问此备份节点\n        DeltaManager－集群下某一节点生成、改动的Session，将复制到其他节点。\n        DeltaManager是Tomcat默认的集群Manager，能满足一般的开发需求\n        使用DeltaManager，每个节点部署的应用要一样；使用BackupManager，每个节点部署的应用可以不一样.\n        className－指定实现org.apache.catalina.ha.ClusterManager接口的类,信息之间的管理.\n        expireSessionsOnShutdown－设置为true时，一个节点关闭，将导致集群下的所有Session失效\n        notifyListenersOnReplication－集群下节点间的Session复制、删除操作，是否通知session listeners\n        maxInactiveInterval－集群下Session的有效时间(单位:s)。\n        maxInactiveInterval内未活动的Session，将被Tomcat回收。默认值为1800(30min)\n        --\u003e\n        \u003cManager className=\"org.apache.catalina.ha.session.DeltaManager\"\n            expireSessionsOnShutdown=\"false\"\n            notifyListenersOnReplication=\"true\"/\u003e\n\n\n        \u003c!--\n        Channel是Tomcat节点之间进行通讯的工具。\n        Channel包括5个组件：Membership、Receiver、Sender、Transport、Interceptor\n        --\u003e\n        \u003cChannel className=\"org.apache.catalina.tribes.group.GroupChannel\"\u003e\n    \n        \u003c!--\n            Membership维护集群的可用节点列表。它可以检查到新增的节点，也可以检查到没有心跳的节点\n            className－指定Membership使用的类\n            address－组播地址\n            port－组播端口\n            frequency－发送心跳(向组播地址发送UDP数据包)的时间间隔(单位:ms)。默认值为500\n            dropTime－Membership在dropTime(单位:ms)内未收到某一节点的心跳，则将该节点从可用节点列表删除。默认值为3000\n            注: 组播（Multicast）：一个发送者和多个接收者之间实现一对多的网络连接。\n                一个发送者同时给多个接收者传输相同的数据，只需复制一份相同的数据包。\n                它提高了数据传送效率，减少了骨干网络出现拥塞的可能性\n                相同组播地址、端口的Tomcat节点，可以组成集群下的子集群\n         --\u003e\n        \u003cMembership className=\"org.apache.catalina.tribes.membership.McastService\"\n            address=\"228.0.0.5\"\n            port=\"45564\"\n            frequency=\"500\"\n            dropTime=\"3000\"/\u003e\n        \u003c!--\n            Receiver : 接收器，负责接收消息\n            接收器分为两种：BioReceiver(阻塞式)、NioReceiver(非阻塞式)\n            className－指定Receiver使用的类\n            address－接收消息的地址--本地ip\n            port－接收消息的端口\n            autoBind－端口的变化区间\n            如果port为4000，autoBind为100，接收器将在4000-4099间取一个端口，进行监听\n            selectorTimeout－NioReceiver内轮询的超时时间\n            maxThreads－线程池的最大线程数\n        --\u003e\n        \u003cReceiver className=\"org.apache.catalina.tribes.transport.nio.NioReceiver\"\n            address=\"192.168.234.66\"\n            port=\"4000\"\n            autoBind=\"100\"\n            selectorTimeout=\"5000\"\n            maxThreads=\"6\"/\u003e\n        \u003c!--\n            Sender : 发送器，负责发送消息\n            Sender内嵌了Transport组件，Transport真正负责发送消息\n        --\u003e\n        \u003cSender className=\"org.apache.catalina.tribes.transport.ReplicationTransmitter\"\u003e\n            \u003c!--\n                    Transport分为两种：bio.PooledMultiSender(阻塞式)、nio.PooledParallelSender(非阻塞式)\n            --\u003e\n            \u003cTransport className=\"org.apache.catalina.tribes.transport.nio.PooledParallelSender\"/\u003e\n        \u003c/Sender\u003e\n        \u003c!--\n            Interceptor : Cluster的拦截器\n            TcpFailureDetector－网络、系统比较繁忙时，Membership可能无法及时更新可用节点列表，\n            此时TcpFailureDetector可以拦截到某个节点关闭的信息，\n            并尝试通过TCP连接到此节点，以确保此节点真正关闭，从而更新集群可以用节点列表             \n        --\u003e\n        \u003cInterceptor className=\"org.apache.catalina.tribes.group.interceptors.TcpFailureDetector\"/\u003e\n        \u003c!--\n            MessageDispatch15Interceptor－查看Cluster组件发送消息的方式是否设置为\n            Channel.SEND_OPTIONS_ASYNCHRONOUS(Cluster标签下的channelSendOptions为8时)。\n            设置为Channel.SEND_OPTIONS_ASYNCHRONOUS时，\n            MessageDispatch15Interceptor先将等待发送的消息进行排队，然后将排好队的消息转给Sender\n        --\u003e\n        \u003cInterceptor className=\"org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor\"/\u003e\n        \u003c/Channel\u003e\n    \n        \u003c!--\n        Valve : 可以理解为Tomcat的拦截器\n        ReplicationValve－在处理请求前后打日志；过滤不涉及Session变化的请求               \n        vmRouteBinderValve－Apache的mod_jk发生错误时，保证同一客户端的请求发送到集群的同一个节点\n        --\u003e\n        \u003cValve className=\"org.apache.catalina.ha.tcp.ReplicationValve\" filter=\"\"/\u003e\n        \u003cValve className=\"org.apache.catalina.ha.session.JvmRouteBinderValve\"/\u003e\n    \n        \u003c!--\n            ClusterListener : 监听器，监听Cluster组件接收的消息\n            使用DeltaManager时，Cluster接收的信息通过ClusterSessionListener传递给DeltaManager\n        --\u003e\n        \u003cClusterListener className=\"org.apache.catalina.ha.session.ClusterSessionListener\"/\u003e\n        \u003c/Cluster\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220119180423-cpp87g8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220119180423-cpp87g8",
				"updated": "20220119180431"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "2、在应用上的web.xml的web-app里面配置\n\u003cweb-app\u003e\n    \u003cdistributable/\u003e\n\u003c/web-app\u003e  \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220119180433-jzfk9gn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220119180433-jzfk9gn",
				"updated": "20220119180511"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "aHRtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "3、编写一下jsp页面测试（直接复制替换index.jsp）\n\u003c%@page contentType=\"text/html;charset=UTF-8\" %\u003e\n\u003c%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%\u003e\n\u003chtml\u003e  \n\u003chead\u003e   \n\u003ctitle\u003e负载均衡搭建~test\u003c/title\u003e  \n\u003c/head\u003e  \n\u003cbody\u003e  \n\u003cdiv id=\"div1\" style=\"color:red;font-size:35px\"\u003e\n\u003c/div\u003e  \n\u003cbr/\u003e  \n\u003cscript\u003e    \nvar str = '\u003c%=\"http://\"+request.getLocalAddr()+\":\"+request.getLocalPort()+\"\" %\u003e';    \nvar port = '\u003c%=request.getLocalPort()%\u003e';        \ndocument.getElementById('div1').innerHTML = '当前服务：   '+str;        \ndocument.title = 'Luxd负载均衡搭建 - ' + port;    \n\u003c/script\u003e  \n\u003c% session.setAttribute(\"Luxd\",\"Luxd\"); %\u003e\n\u003c% out.println(\"\u003cfont size='4'\u003esessionid is\u003cfont\u003e\"); %\u003e  \n\u003c%=session.getId() %\u003e\u003cbr/\u003e        \u003c% out.println(\"sessiontime is\"); %\u003e  \n\u003c%=session.getCreationTime() %\u003e  \n\u003c/body\u003e\u003c/html\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220119180513-dkffsbu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220119180513-dkffsbu",
				"updated": "20220119180520"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "tomcat的session复制.rar"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/tomcat的session复制-20220119180520-dbjo8wi.rar"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		}
	]
}