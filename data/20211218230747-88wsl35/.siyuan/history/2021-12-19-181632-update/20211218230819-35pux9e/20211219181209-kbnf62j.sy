{
	"ID": "20211219181209-kbnf62j",
	"Type": "NodeDocument",
	"Properties": {
		"icon": "1f4dd",
		"id": "20211219181209-kbnf62j",
		"title": "Mybatis_记录",
		"updated": "20211219181232"
	},
	"Children": [
		{
			"ID": "20211219181210-o13ohu2",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211219181210-o13ohu2",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"ID": "20211219181210-gyayr4j",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181210-gyayr4j"
					},
					"Children": [
						{
							"ID": "20211219181210-49g987z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181210-49g987z"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "mybatis 面试题（精）："
								}
							]
						},
						{
							"ID": "20211219181210-wmk0mga",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20211219181210-wmk0mga"
							},
							"Children": [
								{
									"ID": "20211219181210-002hacs",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20211219181210-002hacs"
									},
									"Children": [
										{
											"ID": "20211219181210-8cwrjeh",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211219181210-8cwrjeh"
											},
											"Children": [
												{
													"Type": "NodeLink",
													"Data": "span",
													"Children": [
														{
															"Type": "NodeOpenBracket"
														},
														{
															"Type": "NodeLinkText",
															"Data": "https://juejin.im/post/5e1492d9e51d45410d27e9e2"
														},
														{
															"Type": "NodeCloseBracket"
														},
														{
															"Type": "NodeOpenParen"
														},
														{
															"Type": "NodeLinkDest",
															"Data": "https://juejin.im/post/5e1492d9e51d45410d27e9e2"
														},
														{
															"Type": "NodeCloseParen"
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20211219181210-dzon9xz",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20211219181210-dzon9xz"
									},
									"Children": [
										{
											"ID": "20211219181210-wco839d",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211219181210-wco839d"
											},
											"Children": [
												{
													"Type": "NodeLink",
													"Data": "span",
													"Children": [
														{
															"Type": "NodeOpenBracket"
														},
														{
															"Type": "NodeLinkText",
															"Data": "https://www.cnblogs.com/huajiezh/p/6415388.html"
														},
														{
															"Type": "NodeCloseBracket"
														},
														{
															"Type": "NodeOpenParen"
														},
														{
															"Type": "NodeLinkDest",
															"Data": "https://www.cnblogs.com/huajiezh/p/6415388.html"
														},
														{
															"Type": "NodeCloseParen"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211219181210-n1efm2a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-n1efm2a",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、mybatis批量执行多行语句"
				}
			]
		},
		{
			"ID": "20211219181210-1r74ynp",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211219181210-1r74ynp",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"ID": "20211219181210-speo63k",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181210-speo63k"
					},
					"Children": [
						{
							"ID": "20211219181210-1jz8nbc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181210-1jz8nbc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "jdbc 默认不支持执行多行语句需要手动开启"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211219181210-u6rp34n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-u6rp34n",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们的 update map中需要 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "执行多个 update语句"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 。最后加上参数 \""
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "allowMultiQueries\" 设置为true"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20211219181210-vcqm96l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-vcqm96l",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\u003cproperty"
				}
			]
		},
		{
			"ID": "20211219181210-5t4o876",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-5t4o876",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    name=\"jdbcUrl\""
				}
			]
		},
		{
			"ID": "20211219181210-cynhsve",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-cynhsve",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    value=\"jdbc:mysql://localhost:3306/test?useUnicode=true"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "\u0026characterEncoding=utf-8\u0026amp;\u0026characterEncoding=utf-8\u0026"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "allowMultiQueries=true\""
				}
			]
		},
		{
			"ID": "20211219181210-1lj4ee3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-1lj4ee3",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "/\u003e"
				}
			]
		},
		{
			"ID": "20211219181210-couwusm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-couwusm",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、cdata的使用"
				}
			]
		},
		{
			"ID": "20211219181210-qjpeh2p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-qjpeh2p",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "术语 CDATA 指的是不应由 XML 解析器进行解析的文本数据（Unparsed Character Data）。"
				}
			]
		},
		{
			"ID": "20211219181210-vk6wtag",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-vk6wtag",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 XML 元素中，\"\u003c\" 和 \"\u0026\" 是非法的。"
				}
			]
		},
		{
			"ID": "20211219181210-oo5rtpt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-oo5rtpt",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\"\u003c\" 会产生错误，因为解析器会把该字符解释为新元素的开始。"
				}
			]
		},
		{
			"ID": "20211219181210-71xj9th",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-71xj9th",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\"\u0026\" 也会产生错误，因为解析器会把该字符解释为字符实体的开始。"
				}
			]
		},
		{
			"ID": "20211219181210-8nod56g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-8nod56g",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "某些文本，比如 JavaScript 代码，包含大量 \"\u003c\" 或 \"\u0026\" 字符。为了避免错误，可以将脚本代码定义为 CDATA。"
				}
			]
		},
		{
			"ID": "20211219181210-ru9d0xv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-ru9d0xv",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "CDATA 部分中的所有内容都会被解析器忽略。"
				}
			]
		},
		{
			"ID": "20211219181210-301dirf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-301dirf",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "CDATA 部分由 \"\u003c![CDATA[\" 开始，由 \"]]\u003e\" 结束："
				}
			]
		},
		{
			"ID": "20211219181210-aptlkzh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-aptlkzh",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\u003c![CDATA[ function matchwo(a,b) { if (a \u003c b \u0026\u0026 a \u003c 0) then { return 1; } else { return 0; } } ]]\u003e"
				}
			]
		},
		{
			"ID": "20211219181210-a1ylx5y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-a1ylx5y",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在mapper文件中写sql语句时，遇到特殊字符时，如：\u003c 等，建议使用\u003c![CDATA[ sql 语句 ]]\u003e标记，将sql语句包裹住，不被解析器解析"
				}
			]
		},
		{
			"ID": "20211219181210-i8inlqr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-i8inlqr",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不等于\u003c\u003e，在mybatis中需要转义 用\u003c![CDATA[\u003c]]\u003e 分别对大于和小于转义"
				}
			]
		},
		{
			"ID": "20211219181210-5sunv4b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-5sunv4b",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\u003ctrim prefix=\"\" suffix=\"\" suffixOverrides=\"\" prefixOverrides=\"\"\u003e"
				}
			]
		},
		{
			"ID": "20211219181210-9kpxx0r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-9kpxx0r",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "..."
				}
			]
		},
		{
			"ID": "20211219181210-9i8b8dr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-9i8b8dr",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\u003c/trim\u003e"
				}
			]
		},
		{
			"ID": "20211219181210-gbzsjoe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-gbzsjoe",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "prefix:在trim标签内sql语句加上前缀。"
				}
			]
		},
		{
			"ID": "20211219181210-ul0o6ep",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-ul0o6ep",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "suffix:在trim标签内sql语句加上后缀。"
				}
			]
		},
		{
			"ID": "20211219181210-612or02",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-612or02",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "suffixOverrides:指定去除多余的后缀内容，如：suffixOverrides=\",\"，去除trim标签内sql语句多余的后缀\",\"。"
				}
			]
		},
		{
			"ID": "20211219181210-u4eda73",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-u4eda73",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "prefixOverrides:指定去除多余的前缀内容"
				}
			]
		},
		{
			"ID": "20211219181210-5127qkl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-5127qkl",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、常用的几种数据源的比较"
				}
			]
		},
		{
			"ID": "20211219181210-fa2aglt",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211219181210-fa2aglt",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"ID": "20211219181210-q91gbo5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181210-q91gbo5"
					},
					"Children": [
						{
							"ID": "20211219181210-y5qrdnq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181210-y5qrdnq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "druid"
								}
							]
						}
					]
				},
				{
					"ID": "20211219181210-swxupcy",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181210-swxupcy"
					},
					"Children": [
						{
							"ID": "20211219181210-dlsz5rp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181210-dlsz5rp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "c3p0"
								}
							]
						}
					]
				},
				{
					"ID": "20211219181210-ob217ci",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181210-ob217ci"
					},
					"Children": [
						{
							"ID": "20211219181210-upa8oyw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181210-upa8oyw"
							}
						}
					]
				}
			]
		},
		{
			"ID": "20211219181210-btlhdum",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-btlhdum",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "mybatis转义字符"
				}
			]
		},
		{
			"ID": "20211219181210-kbap3ma",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0
			],
			"Properties": {
				"id": "20211219181210-kbap3ma",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellContentWidth": 6,
									"TableCellContentMaxWidth": 10,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "符号"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellContentWidth": 6,
									"TableCellContentMaxWidth": 11,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "小于"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellContentWidth": 10,
									"TableCellContentMaxWidth": 12,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "小于等于"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellContentWidth": 6,
									"TableCellContentMaxWidth": 11,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "大于"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellContentWidth": 10,
									"TableCellContentMaxWidth": 12,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "大于等于"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellContentWidth": 4,
									"TableCellContentMaxWidth": 12,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "和"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellContentWidth": 8,
									"TableCellContentMaxWidth": 13,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "单引号"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellContentWidth": 8,
									"TableCellContentMaxWidth": 13,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "双引号"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 8,
							"TableCellContentMaxWidth": 10,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "原符号"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 3,
							"TableCellContentMaxWidth": 11,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "\u003c"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 4,
							"TableCellContentMaxWidth": 12,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "\u003c="
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 3,
							"TableCellContentMaxWidth": 11,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "\u003e"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 4,
							"TableCellContentMaxWidth": 12,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "\u003e="
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 3,
							"TableCellContentMaxWidth": 12,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "\u0026"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 4,
							"TableCellContentMaxWidth": 13,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "’"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 3,
							"TableCellContentMaxWidth": 13,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "\""
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 10,
							"TableCellContentMaxWidth": 10,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "替换符号"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 11,
							"TableCellContentMaxWidth": 11,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "\u0026lt;\u003c"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 12,
							"TableCellContentMaxWidth": 12,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "\u0026lt;\u003c"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "="
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 11,
							"TableCellContentMaxWidth": 11,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "\u0026gt;\u003e"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 12,
							"TableCellContentMaxWidth": 12,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "\u0026gt;\u003e"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "="
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 12,
							"TableCellContentMaxWidth": 12,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "\u0026amp;\u0026"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 13,
							"TableCellContentMaxWidth": 13,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "\u0026apos;'"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 13,
							"TableCellContentMaxWidth": 13,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "\u0026quot;\""
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211219181210-6djx02r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-6djx02r",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Mybatis的OGNL语法， 会把 'Y' 或 'N' 认为成char类型"
				}
			]
		},
		{
			"ID": "20211219181210-0pqqltw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-0pqqltw",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "修改语句："
				}
			]
		},
		{
			"ID": "20211219181210-ho11pl7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-ho11pl7",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1：将代码改为test=\"param eq 'Y'.toString()\""
				}
			]
		},
		{
			"ID": "20211219181210-hn4a8ja",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-hn4a8ja",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2：将代码改为test=\"param == "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "\u0026quot;\""
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "Y"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "\u0026quot;\""
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\""
				}
			]
		},
		{
			"ID": "20211219181210-drnflsp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-drnflsp",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3：将代码改为test='param == \"Y\" '"
				}
			]
		},
		{
			"ID": "20211219181210-cg5ut7s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-cg5ut7s",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第三种是最简单的方法，被双引号修饰的都会被看成String类型"
				}
			]
		},
		{
			"ID": "20211219181210-egmq3w9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-egmq3w9",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "返回的是类型"
				}
			]
		},
		{
			"ID": "20211219181210-zai5uqf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-zai5uqf",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "resultType=\"java.lang.String'"
				}
			]
		},
		{
			"ID": "20211219181210-3a9lbju",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181210-3a9lbju",
				"updated": "20211219181210"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "mapper 配置的是List\u003cString\u003e"
				}
			]
		}
	]
}