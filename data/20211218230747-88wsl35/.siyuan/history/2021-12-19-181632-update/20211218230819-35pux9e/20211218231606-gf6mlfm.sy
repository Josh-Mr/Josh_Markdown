{
	"ID": "20211218231606-gf6mlfm",
	"Type": "NodeDocument",
	"Properties": {
		"icon": "1f4dd",
		"id": "20211218231606-gf6mlfm",
		"title": "Mybaits_简介\u0026amp;入门",
		"updated": "20211219181330"
	},
	"Children": [
		{
			"ID": "20211219010136-y2br31g",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20211219010136-y2br31g",
				"updated": "20211219010242"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、简介"
				}
			]
		},
		{
			"ID": "20211219010328-zeho7dt",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211219010328-zeho7dt",
				"updated": "20211219010351"
			},
			"Children": [
				{
					"ID": "20211219010341-pqr8nqy",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219010341-pqr8nqy",
						"updated": "20211219010351"
					},
					"Children": [
						{
							"ID": "20211219010341-be2y70c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219010341-be2y70c",
								"updated": "20211219010349"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "什么是mybatis？"
								}
							]
						},
						{
							"ID": "20211219010350-490hsfl",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20211219010350-490hsfl",
								"updated": "20211219010351"
							},
							"Children": [
								{
									"ID": "20211219010350-vo73864",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20211219010350-vo73864",
										"updated": "20211219010351"
									},
									"Children": [
										{
											"ID": "20211219010350-uwqcy8o",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211219010350-uwqcy8o",
												"updated": "20211219010351"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211219010357-dt1xzve",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219010357-dt1xzve",
				"updated": "20211219010357"
			}
		},
		{
			"ID": "20211219181141-v9vm8l8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181141-v9vm8l8",
				"updated": "20211219181141"
			}
		},
		{
			"ID": "20211219181141-q14ao7z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181141-q14ao7z",
				"updated": "20211219181141"
			}
		},
		{
			"ID": "20211219181138-npivap5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181138-npivap5",
				"updated": "20211219181138"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、Mybatis的优点和缺点"
				}
			]
		},
		{
			"ID": "20211219181138-g04ouev",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211219181138-g04ouev",
				"updated": "20211219181138"
			},
			"Children": [
				{
					"ID": "20211219181138-vz6s93v",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181138-vz6s93v"
					},
					"Children": [
						{
							"ID": "20211219181138-j43unth",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181138-j43unth"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "优点"
								}
							]
						},
						{
							"ID": "20211219181138-mz4xspy",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20211219181138-mz4xspy"
							},
							"Children": [
								{
									"ID": "20211219181138-qcnvs79",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20211219181138-qcnvs79"
									},
									"Children": [
										{
											"ID": "20211219181138-iojh3z5",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211219181138-iojh3z5"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "基于SQL编程，灵活性好。"
												}
											]
										}
									]
								},
								{
									"ID": "20211219181138-arwc8x3",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20211219181138-arwc8x3"
									},
									"Children": [
										{
											"ID": "20211219181138-vfaqcqx",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211219181138-vfaqcqx"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "程序代码和SQL语句解耦，统一管理。"
												}
											]
										}
									]
								},
								{
									"ID": "20211219181138-kh60kap",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20211219181138-kh60kap"
									},
									"Children": [
										{
											"ID": "20211219181138-ceue7tp",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211219181138-ceue7tp"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "与JDBC相比减少大量的代码。"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20211219181138-1d5l3ni",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181138-1d5l3ni"
					},
					"Children": [
						{
							"ID": "20211219181138-r6ad3f5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181138-r6ad3f5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "缺点"
								}
							]
						}
					]
				},
				{
					"ID": "20211219181138-98qdkuz",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181138-98qdkuz"
					},
					"Children": [
						{
							"ID": "20211219181138-awubuwk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181138-awubuwk"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "语句的编写工作量大，字段多、和关联表多时。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219181138-al63hcy",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181138-al63hcy"
					},
					"Children": [
						{
							"ID": "20211219181138-ltyxz7r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181138-ltyxz7r"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "因为基于SQL编程，数据库移植性差。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211219181138-1mtzk6c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181138-1mtzk6c",
				"updated": "20211219181138"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、Mybatis 和 Hibernate 区别？"
				}
			]
		},
		{
			"ID": "20211219181138-bu8f6su",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211219181138-bu8f6su",
				"updated": "20211219181138"
			},
			"Children": [
				{
					"ID": "20211219181138-xmkq2vm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181138-xmkq2vm"
					},
					"Children": [
						{
							"ID": "20211219181138-3czs614",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181138-3czs614"
							}
						}
					]
				},
				{
					"ID": "20211219181138-kf0q4qb",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181138-kf0q4qb"
					},
					"Children": [
						{
							"ID": "20211219181138-q4aq3og",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181138-q4aq3og"
							}
						}
					]
				}
			]
		},
		{
			"ID": "20211219181138-ofk4zag",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181138-ofk4zag",
				"updated": "20211219181138"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、#{} 和 ${} 区别？"
				}
			]
		},
		{
			"ID": "20211219181138-e08ryck",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211219181138-e08ryck",
				"updated": "20211219181138"
			},
			"Children": [
				{
					"ID": "20211219181138-crrhyh4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181138-crrhyh4"
					},
					"Children": [
						{
							"ID": "20211219181138-uuy2gtj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181138-uuy2gtj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "#{} ：预编译处理"
								}
							]
						},
						{
							"ID": "20211219181138-xa8nnj2",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20211219181138-xa8nnj2"
							},
							"Children": [
								{
									"ID": "20211219181138-93vfut6",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20211219181138-93vfut6"
									},
									"Children": [
										{
											"ID": "20211219181138-hra74sj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211219181138-hra74sj"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Mybatis处理时，会把#{} 直接替换 ？，调用 preparedStatement的set方法来赋值。"
												}
											]
										}
									]
								},
								{
									"ID": "20211219181138-8tr856m",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20211219181138-8tr856m"
									},
									"Children": [
										{
											"ID": "20211219181138-4ulwg2m",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211219181138-4ulwg2m"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使用这个可以有效的防止SQL注入问题，提高系统性能。"
												}
											]
										},
										{
											"ID": "20211219181138-xr7ub4l",
											"Type": "NodeList",
											"ListData": {},
											"Properties": {
												"id": "20211219181138-xr7ub4l"
											},
											"Children": [
												{
													"ID": "20211219181138-np2o6zw",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20211219181138-np2o6zw"
													},
													"Children": [
														{
															"ID": "20211219181138-xoh60kp",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20211219181138-xoh60kp"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "1.（简单又有效的方法）PreparedStatement"
																}
															]
														}
													]
												},
												{
													"ID": "20211219181138-3hhzoyf",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20211219181138-3hhzoyf"
													},
													"Children": [
														{
															"ID": "20211219181138-58ftule",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20211219181138-58ftule"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "采用预编译语句集，它内置了处理SQL注入的能力，只要使用它的setXXX方法传值即可。"
																}
															]
														}
													]
												},
												{
													"ID": "20211219181138-dmze6iv",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20211219181138-dmze6iv"
													},
													"Children": [
														{
															"ID": "20211219181138-cqwi6r8",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20211219181138-cqwi6r8"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "使用好处："
																}
															]
														}
													]
												},
												{
													"ID": "20211219181138-xklmvaq",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20211219181138-xklmvaq"
													},
													"Children": [
														{
															"ID": "20211219181138-i6fk4j1",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20211219181138-i6fk4j1"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "(1).代码的可读性和可维护性."
																}
															]
														}
													]
												},
												{
													"ID": "20211219181138-1untzuj",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20211219181138-1untzuj"
													},
													"Children": [
														{
															"ID": "20211219181138-oo1zxoa",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20211219181138-oo1zxoa"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "(2).PreparedStatement尽最大可能提高性能."
																}
															]
														}
													]
												},
												{
													"ID": "20211219181138-dl7r8q7",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20211219181138-dl7r8q7"
													},
													"Children": [
														{
															"ID": "20211219181138-9x7rx1q",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20211219181138-9x7rx1q"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "(3).最重要的一点是极大地提高了安全性."
																}
															]
														}
													]
												},
												{
													"ID": "20211219181138-jhdyazu",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20211219181138-jhdyazu"
													},
													"Children": [
														{
															"ID": "20211219181138-yb9vaux",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20211219181138-yb9vaux"
															}
														}
													]
												},
												{
													"ID": "20211219181138-pfkcm6a",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20211219181138-pfkcm6a"
													},
													"Children": [
														{
															"ID": "20211219181138-vztqonj",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20211219181138-vztqonj"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "原理："
																}
															]
														}
													]
												},
												{
													"ID": "20211219181138-1qnux4s",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20211219181138-1qnux4s"
													},
													"Children": [
														{
															"ID": "20211219181138-zomd0bj",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20211219181138-zomd0bj"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "sql注入只对sql语句的准备(编译)过程有破坏作用"
																}
															]
														}
													]
												},
												{
													"ID": "20211219181138-h4idx18",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20211219181138-h4idx18"
													},
													"Children": [
														{
															"ID": "20211219181138-epmjeoj",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20211219181138-epmjeoj"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "而PreparedStatement已经准备好了,执行阶段只是把输入串作为数据处理,"
																}
															]
														}
													]
												},
												{
													"ID": "20211219181138-gzidxdp",
													"Type": "NodeListItem",
													"ListData": {
														"BulletChar": 42,
														"Marker": "Kg=="
													},
													"Properties": {
														"id": "20211219181138-gzidxdp"
													},
													"Children": [
														{
															"ID": "20211219181138-p7kh1ah",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20211219181138-p7kh1ah"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "而不再对sql语句进行解析,准备,因此也就避免了sql注入问题."
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20211219181138-jibgzq7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181138-jibgzq7"
					},
					"Children": [
						{
							"ID": "20211219181138-aekd0vq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181138-aekd0vq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "${} ： 字符串替换"
								}
							]
						},
						{
							"ID": "20211219181138-cfz67qq",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20211219181138-cfz67qq"
							},
							"Children": [
								{
									"ID": "20211219181138-l91sryk",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20211219181138-l91sryk"
									},
									"Children": [
										{
											"ID": "20211219181138-nv0rrhn",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211219181138-nv0rrhn"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Mybatis处理时， 直接把${}替换变量值。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211219181138-ca15sm2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181138-ca15sm2",
				"updated": "20211219181138"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4、如何设置主键自增长？"
				}
			]
		},
		{
			"ID": "20211219181138-vq37n42",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181138-vq37n42",
				"updated": "20211219181138"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\u003cinsert id=”insertname”  "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "usegeneratedkeys=”true” keyproperty=” id”"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " \u003e"
				}
			]
		},
		{
			"ID": "20211219181138-c335esn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181138-c335esn",
				"updated": "20211219181138"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5、mybatis动态SQL执行原理、有哪些动态SQL？"
				}
			]
		},
		{
			"ID": "20211219181138-vcjy5at",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211219181138-vcjy5at",
				"updated": "20211219181138"
			},
			"Children": [
				{
					"ID": "20211219181138-4y61ina",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181138-4y61ina"
					},
					"Children": [
						{
							"ID": "20211219181138-q2s3vj0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181138-q2s3vj0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行原理是根据表达式的值 完成逻辑判断并动态拼接 sql 的功能。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219181138-5diroba",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181138-5diroba"
					},
					"Children": [
						{
							"ID": "20211219181138-kcf9zjc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181138-kcf9zjc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "9 种动态 sql 标签：trim | where | set | foreach | if | choose| when | otherwise | bind。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211219181138-9t7iicz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181138-9t7iicz",
				"updated": "20211219181138"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6、为什么说mybatis是半自动化ORM工具？与全自动的区别在哪里？"
				}
			]
		},
		{
			"ID": "20211219181138-tmr3hfa",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211219181138-tmr3hfa",
				"updated": "20211219181138"
			},
			"Children": [
				{
					"ID": "20211219181138-cfgevum",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181138-cfgevum"
					},
					"Children": [
						{
							"ID": "20211219181138-prn4qvk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181138-prn4qvk"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Hibernate 属于全自动 ORM 映射工具，使用 Hibernate 查询关联对象或者关联集合对象时，可以根据对象关系模型直接获取，所以它是全自动的。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219181138-ycpm4ct",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181138-ycpm4ct"
					},
					"Children": [
						{
							"ID": "20211219181138-2rint5q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181138-2rint5q"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Mybatis在查询关联对象或关联集合对象时，需要手动编写 sql 来完成，所以，称之为半自动 ORM 映射工具。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211219181201-64ks511",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181201-64ks511",
				"updated": "20211219181201"
			}
		},
		{
			"ID": "20211219181323-r96sock",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20211219181323-r96sock",
				"updated": "20211219181327"
			}
		},
		{
			"ID": "20211219181330-3edst2t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-3edst2t",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、什么是框架？"
				}
			]
		},
		{
			"ID": "20211219181330-wvnj011",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-wvnj011",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    它是我们软件开发中的一套解决方案，不同的框架解决的是不同的问题。"
				}
			]
		},
		{
			"ID": "20211219181330-3kjog24",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-3kjog24",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    使用框架的好处："
				}
			]
		},
		{
			"ID": "20211219181330-igf7dt2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-igf7dt2",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        框架封装了很多的细节，使开发者可以使用极简的方式实现功能。大大提高开发效率。"
				}
			]
		},
		{
			"ID": "20211219181330-v6yu6ij",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-v6yu6ij",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、三层架构"
				}
			]
		},
		{
			"ID": "20211219181330-4oty1qo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-4oty1qo",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    表现层："
				}
			]
		},
		{
			"ID": "20211219181330-n2witos",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-n2witos",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        是用于展示数据的"
				}
			]
		},
		{
			"ID": "20211219181330-my43lkt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-my43lkt",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    业务层："
				}
			]
		},
		{
			"ID": "20211219181330-nyizch7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-nyizch7",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        是处理业务需求"
				}
			]
		},
		{
			"ID": "20211219181330-w7p73nt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-w7p73nt",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    持久层："
				}
			]
		},
		{
			"ID": "20211219181330-3ioof9b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-3ioof9b",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        是和数据库交互的"
				}
			]
		},
		{
			"ID": "20211219181330-axdhb54",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-axdhb54",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、持久层技术解决方案"
				}
			]
		},
		{
			"ID": "20211219181330-30prndd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-30prndd",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    JDBC技术："
				}
			]
		},
		{
			"ID": "20211219181330-hl25isi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-hl25isi",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        Connection"
				}
			]
		},
		{
			"ID": "20211219181330-p9eip0u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-p9eip0u",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        PreparedStatement"
				}
			]
		},
		{
			"ID": "20211219181330-wk7he8e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-wk7he8e",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        ResultSet"
				}
			]
		},
		{
			"ID": "20211219181330-olt9cd3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-olt9cd3",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    Spring的JdbcTemplate："
				}
			]
		},
		{
			"ID": "20211219181330-9dbrjzq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-9dbrjzq",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        Spring中对jdbc的简单封装"
				}
			]
		},
		{
			"ID": "20211219181330-sfdx0km",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-sfdx0km",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    Apache的DBUtils："
				}
			]
		},
		{
			"ID": "20211219181330-3ad4q8m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-3ad4q8m",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        它和Spring的JdbcTemplate很像，也是对Jdbc的简单封装"
				}
			]
		},
		{
			"ID": "20211219181330-0d6gqy9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-0d6gqy9",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    以上这些都不是框架"
				}
			]
		},
		{
			"ID": "20211219181330-ax3fiv7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-ax3fiv7",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        JDBC是规范"
				}
			]
		},
		{
			"ID": "20211219181330-5lqe33a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-5lqe33a",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        Spring的JdbcTemplate和Apache的DBUtils都只是工具类"
				}
			]
		},
		{
			"ID": "20211219181330-znk8as2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-znk8as2",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4、mybatis的概述"
				}
			]
		},
		{
			"ID": "20211219181330-2n9ycwo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-2n9ycwo",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    mybatis是一个持久层框架，用java编写的。"
				}
			]
		},
		{
			"ID": "20211219181330-ogyt2bn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-ogyt2bn",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    它封装了jdbc操作的很多细节，使开发者只需要关注sql语句本身，而无需关注注册驱动，创建连接等繁杂过程"
				}
			]
		},
		{
			"ID": "20211219181330-hdtjqv6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-hdtjqv6",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    它使用了ORM思想实现了结果集的封装。"
				}
			]
		},
		{
			"ID": "20211219181330-omtdt8h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-omtdt8h",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    ORM："
				}
			]
		},
		{
			"ID": "20211219181330-lnuszhv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-lnuszhv",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        Object Relational Mappging 对象关系映射"
				}
			]
		},
		{
			"ID": "20211219181330-w81qvv0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-w81qvv0",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        简单的说："
				}
			]
		},
		{
			"ID": "20211219181330-n2ui3x5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-n2ui3x5",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            就是把数据库表和实体类及实体类的属性对应起来"
				}
			]
		},
		{
			"ID": "20211219181330-dds0yji",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-dds0yji",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            让我们可以操作实体类就实现操作数据库表。"
				}
			]
		},
		{
			"ID": "20211219181330-l0f1wcn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-l0f1wcn",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            user            User"
				}
			]
		},
		{
			"ID": "20211219181330-ch4mkux",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-ch4mkux",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            id            userId"
				}
			]
		},
		{
			"ID": "20211219181330-sw05h4s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-sw05h4s",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            user_name        userName"
				}
			]
		},
		{
			"ID": "20211219181330-figewae",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-figewae",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    今天我们需要做到"
				}
			]
		},
		{
			"ID": "20211219181330-mabz3nz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-mabz3nz",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        实体类中的属性和数据库表的字段名称保持一致。"
				}
			]
		},
		{
			"ID": "20211219181330-yzj96nw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-yzj96nw",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            user            User"
				}
			]
		},
		{
			"ID": "20211219181330-8j22k52",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-8j22k52",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            id            id"
				}
			]
		},
		{
			"ID": "20211219181330-wvd5ahw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-wvd5ahw",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            user_name        user_name"
				}
			]
		},
		{
			"ID": "20211219181330-vv748gf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-vv748gf",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5、mybatis的入门"
				}
			]
		},
		{
			"ID": "20211219181330-yauvets",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-yauvets",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    mybatis的环境搭建"
				}
			]
		},
		{
			"ID": "20211219181330-mf65tiq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-mf65tiq",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第一步：创建maven工程并导入坐标"
				}
			]
		},
		{
			"ID": "20211219181330-dnild0i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-dnild0i",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第二步：创建实体类和dao的接口"
				}
			]
		},
		{
			"ID": "20211219181330-xyg3y11",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-xyg3y11",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第三步：创建Mybatis的主配置文件"
				}
			]
		},
		{
			"ID": "20211219181330-beapz1t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-beapz1t",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                SqlMapConifg.xml"
				}
			]
		},
		{
			"ID": "20211219181330-160bnu5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-160bnu5",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第四步：创建映射配置文件"
				}
			]
		},
		{
			"ID": "20211219181330-g8srgx3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-g8srgx3",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                IUserDao.xml"
				}
			]
		},
		{
			"ID": "20211219181330-purmu9n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-purmu9n",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    环境搭建的注意事项："
				}
			]
		},
		{
			"ID": "20211219181330-vk680dy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-vk680dy",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第一个：创建IUserDao.xml 和 IUserDao.java时名称是为了和我们之前的知识保持一致。"
				}
			]
		},
		{
			"ID": "20211219181330-9sx6np1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-9sx6np1",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            在Mybatis中它把持久层的操作接口名称和映射文件也叫做：Mapper"
				}
			]
		},
		{
			"ID": "20211219181330-eec7lj5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-eec7lj5",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            所以：IUserDao 和 IUserMapper是一样的"
				}
			]
		},
		{
			"ID": "20211219181330-z2afq3q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-z2afq3q",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第二个：在idea中创建目录的时候，它和包是不一样的"
				}
			]
		},
		{
			"ID": "20211219181330-rfdpded",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-rfdpded",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            包在创建时：com.itheima.dao它是三级结构"
				}
			]
		},
		{
			"ID": "20211219181330-x4ysqy2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-x4ysqy2",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            目录在创建时：com.itheima.dao是一级目录"
				}
			]
		},
		{
			"ID": "20211219181330-emf9t79",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-emf9t79",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第三个：mybatis的映射配置文件位置必须和dao接口的包结构相同"
				}
			]
		},
		{
			"ID": "20211219181330-qk002x7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-qk002x7",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第四个：映射配置文件的mapper标签namespace属性的取值必须是dao接口的全限定类名"
				}
			]
		},
		{
			"ID": "20211219181330-vcxt4d7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-vcxt4d7",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第五个：映射配置文件的操作配置（select），id属性的取值必须是dao接口的方法名"
				}
			]
		},
		{
			"ID": "20211219181330-0spd7j4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-0spd7j4",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        当我们遵从了第三，四，五点之后，我们在开发中就无须再写dao的实现类。"
				}
			]
		},
		{
			"ID": "20211219181330-w8xyj22",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-w8xyj22",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    mybatis的入门案例"
				}
			]
		},
		{
			"ID": "20211219181330-xatoafs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-xatoafs",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第一步：读取配置文件"
				}
			]
		},
		{
			"ID": "20211219181330-fx8i0l1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-fx8i0l1",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第二步：创建SqlSessionFactory工厂"
				}
			]
		},
		{
			"ID": "20211219181330-2m2ltof",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-2m2ltof",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第三步：创建SqlSession"
				}
			]
		},
		{
			"ID": "20211219181330-53eq6dn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-53eq6dn",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第四步：创建Dao接口的代理对象"
				}
			]
		},
		{
			"ID": "20211219181330-gnrstr8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-gnrstr8",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第五步：执行dao中的方法"
				}
			]
		},
		{
			"ID": "20211219181330-aqqwd7h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-aqqwd7h",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        第六步：释放资源"
				}
			]
		},
		{
			"ID": "20211219181330-y8bcris",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-y8bcris",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        注意事项："
				}
			]
		},
		{
			"ID": "20211219181330-9auhfml",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-9auhfml",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            不要忘记在映射配置中告知mybatis要封装到哪个实体类中"
				}
			]
		},
		{
			"ID": "20211219181330-6wezlz6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-6wezlz6",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            配置的方式：指定实体类的全限定类名"
				}
			]
		},
		{
			"ID": "20211219181330-7espcze",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-7espcze",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        mybatis基于注解的入门案例："
				}
			]
		},
		{
			"ID": "20211219181330-hr4jh74",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-hr4jh74",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            把IUserDao.xml移除，在dao接口的方法上使用@Select注解，并且指定SQL语句"
				}
			]
		},
		{
			"ID": "20211219181330-svsahpu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-svsahpu",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            同时需要在SqlMapConfig.xml中的mapper配置时，使用class属性指定dao接口的全限定类名。"
				}
			]
		},
		{
			"ID": "20211219181330-tiej4tt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-tiej4tt",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    明确："
				}
			]
		},
		{
			"ID": "20211219181330-8svegzf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-8svegzf",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        我们在实际开发中，都是越简便越好，所以都是采用不写dao实现类的方式。"
				}
			]
		},
		{
			"ID": "20211219181330-ng5zcy0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-ng5zcy0",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        不管使用XML还是注解配置。"
				}
			]
		},
		{
			"ID": "20211219181330-0j3vse5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-0j3vse5",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        但是Mybatis它是支持写dao实现类的。"
				}
			]
		},
		{
			"ID": "20211219181330-2z59pa8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-2z59pa8",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6、自定义Mybatis的分析："
				}
			]
		},
		{
			"ID": "20211219181330-v65jwjf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-v65jwjf",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    mybatis在使用代理dao的方式实现增删改查时做什么事呢？"
				}
			]
		},
		{
			"ID": "20211219181330-gwe0r5r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-gwe0r5r",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        只有两件事："
				}
			]
		},
		{
			"ID": "20211219181330-n57wciy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-n57wciy",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            第一：创建代理对象"
				}
			]
		},
		{
			"ID": "20211219181330-yx75fqf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-yx75fqf",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            第二：在代理对象中调用selectList"
				}
			]
		},
		{
			"ID": "20211219181330-kbk99lf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-kbk99lf",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    自定义mybatis能通过入门案例看到类"
				}
			]
		},
		{
			"ID": "20211219181330-v3bwqf8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-v3bwqf8",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        class Resources"
				}
			]
		},
		{
			"ID": "20211219181330-cnjmfl5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-cnjmfl5",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        class SqlSessionFactoryBuilder"
				}
			]
		},
		{
			"ID": "20211219181330-nhtu3qw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-nhtu3qw",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        interface SqlSessionFactory"
				}
			]
		},
		{
			"ID": "20211219181330-k45bns0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-k45bns0",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        interface SqlSession"
				}
			]
		},
		{
			"ID": "20211219181330-nabdgrn",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20211219181330-nabdgrn",
				"updated": "20211219181330"
			}
		},
		{
			"ID": "20211219181330-tcafebo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-tcafebo",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、回顾mybatis自定义和环境搭建+完善自定义Mybatis的注解开发"
				}
			]
		},
		{
			"ID": "20211219181330-p9d0s7p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-p9d0s7p",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、Mybatis基于代理Dao的CRUD操作                    重点内容"
				}
			]
		},
		{
			"ID": "20211219181330-jm4zido",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-jm4zido",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、CRUD中可能遇到的问题：参数的传递以及返回值的封装"
				}
			]
		},
		{
			"ID": "20211219181330-jbwqu5h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-jbwqu5h",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4、介绍Mybatis基于传统dao方式的使用（自己编写dao的实现类）    了解的内容"
				}
			]
		},
		{
			"ID": "20211219181330-onnofx5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-onnofx5",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5、mybatis主配置文件中的常用配置"
				}
			]
		},
		{
			"ID": "20211219181330-qk55rsl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-qk55rsl",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    properties标签"
				}
			]
		},
		{
			"ID": "20211219181330-0chmpa7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-0chmpa7",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    typeAliases标签                ---解释Integer的写法"
				}
			]
		},
		{
			"ID": "20211219181330-8gq0t0d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-8gq0t0d",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    mappers标签的子标签：package"
				}
			]
		},
		{
			"ID": "20211219181330-z92800l",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20211219181330-z92800l",
				"updated": "20211219181330"
			}
		},
		{
			"ID": "20211219181330-ba7m36w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-ba7m36w",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "OGNL表达式："
				}
			]
		},
		{
			"ID": "20211219181330-fnvd9j7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-fnvd9j7",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    Object Graphic Navigation Language"
				}
			]
		},
		{
			"ID": "20211219181330-0veatwt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-0veatwt",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    对象    图    导航       语言"
				}
			]
		},
		{
			"ID": "20211219181330-trnru2k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-trnru2k",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    它是通过对象的取值方法来获取数据。在写法上把get给省略了。"
				}
			]
		},
		{
			"ID": "20211219181330-o9hh8hg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-o9hh8hg",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    比如：我们获取用户的名称"
				}
			]
		},
		{
			"ID": "20211219181330-nvyrerq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-nvyrerq",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        类中的写法：user.getUsername();"
				}
			]
		},
		{
			"ID": "20211219181330-3qi5r8y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-3qi5r8y",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        OGNL表达式写法：user.username"
				}
			]
		},
		{
			"ID": "20211219181330-znuw3rc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-znuw3rc",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    mybatis中为什么能直接写username,而不用user.呢："
				}
			]
		},
		{
			"ID": "20211219181330-c8fmap3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-c8fmap3",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        因为在parameterType中已经提供了属性所属的类，所以此时不需要写对象名"
				}
			]
		},
		{
			"ID": "20211219181330-ib2m4s9",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20211219181330-ib2m4s9",
				"updated": "20211219181330"
			}
		},
		{
			"ID": "20211219181330-s4awrc4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-s4awrc4",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、mybatis中的连接池以及事务控制            原理部分了解，应用部分会用"
				}
			]
		},
		{
			"ID": "20211219181330-jiu41fu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-jiu41fu",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    mybatis中连接池使用及分析"
				}
			]
		},
		{
			"ID": "20211219181330-0jgbpb6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-0jgbpb6",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    mybatis事务控制的分析"
				}
			]
		},
		{
			"ID": "20211219181330-ybycxwy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-ybycxwy",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、mybatis基于XML配置的动态SQL语句使用        会用即可"
				}
			]
		},
		{
			"ID": "20211219181330-3ustpio",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-3ustpio",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    mappers配置文件中的几个标签："
				}
			]
		},
		{
			"ID": "20211219181330-97xlznf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-97xlznf",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        \u003cif\u003e"
				}
			]
		},
		{
			"ID": "20211219181330-dc3fu6z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-dc3fu6z",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        \u003cwhere\u003e"
				}
			]
		},
		{
			"ID": "20211219181330-6qllpsd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-6qllpsd",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        \u003cforeach\u003e"
				}
			]
		},
		{
			"ID": "20211219181330-0m3uzpj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-0m3uzpj",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        \u003csql\u003e"
				}
			]
		},
		{
			"ID": "20211219181330-mhuxax6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-mhuxax6",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、mybatis中的多表操作                掌握应用"
				}
			]
		},
		{
			"ID": "20211219181330-nm64mdo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-nm64mdo",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    一对多"
				}
			]
		},
		{
			"ID": "20211219181330-hk7n29u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-hk7n29u",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    一对一（？）"
				}
			]
		},
		{
			"ID": "20211219181330-5wwml94",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-5wwml94",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    多对多"
				}
			]
		},
		{
			"ID": "20211219181330-3o97st2",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20211219181330-3o97st2",
				"updated": "20211219181330"
			}
		},
		{
			"ID": "20211219181330-vob9x3h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-vob9x3h",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、连接池："
				}
			]
		},
		{
			"ID": "20211219181330-2fzq91g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-2fzq91g",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    我们在实际开发中都会使用连接池。"
				}
			]
		},
		{
			"ID": "20211219181330-jrl30y5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-jrl30y5",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    因为它可以减少我们获取连接所消耗的时间。"
				}
			]
		},
		{
			"ID": "20211219181330-5m2o8em",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-5m2o8em",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、mybatis中的连接池"
				}
			]
		},
		{
			"ID": "20211219181330-u41pa79",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-u41pa79",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    mybatis连接池提供了3种方式的配置："
				}
			]
		},
		{
			"ID": "20211219181330-w3mp9e9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-w3mp9e9",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        配置的位置："
				}
			]
		},
		{
			"ID": "20211219181330-w7r30wq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-w7r30wq",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            主配置文件SqlMapConfig.xml中的dataSource标签，type属性就是表示采用何种连接池方式。"
				}
			]
		},
		{
			"ID": "20211219181330-2kcmdcp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-2kcmdcp",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        type属性的取值："
				}
			]
		},
		{
			"ID": "20211219181330-j7pygp9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-j7pygp9",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            POOLED     采用传统的javax.sql.DataSource规范中的连接池，mybatis中有针对规范的实现"
				}
			]
		},
		{
			"ID": "20211219181330-w7gza9v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-w7gza9v",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            UNPOOLED 采用传统的获取连接的方式，虽然也实现Javax.sql.DataSource接口，但是并没有使用池的思想。"
				}
			]
		},
		{
			"ID": "20211219181330-deqf3kt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-deqf3kt",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            JNDI     采用服务器提供的JNDI技术实现，来获取DataSource对象，不同的服务器所能拿到DataSource是不一样。"
				}
			]
		},
		{
			"ID": "20211219181330-weaxz9p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-weaxz9p",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                 注意：如果不是web或者maven的war工程，是不能使用的。"
				}
			]
		},
		{
			"ID": "20211219181330-187uoi4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-187uoi4",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                 我们课程中使用的是tomcat服务器，采用连接池就是dbcp连接池。"
				}
			]
		},
		{
			"ID": "20211219181330-zh3047s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-zh3047s",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、mybatis中的事务"
				}
			]
		},
		{
			"ID": "20211219181330-yrpc9f5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-yrpc9f5",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    什么是事务"
				}
			]
		},
		{
			"ID": "20211219181330-83r2x8m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-83r2x8m",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    事务的四大特性ACID"
				}
			]
		},
		{
			"ID": "20211219181330-sm1hez5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-sm1hez5",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    不考虑隔离性会产生的3个问题"
				}
			]
		},
		{
			"ID": "20211219181330-3rs51gd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-3rs51gd",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    解决办法：四种隔离级别"
				}
			]
		},
		{
			"ID": "20211219181330-w5z1psc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-w5z1psc",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    它是通过sqlsession对象的commit方法和rollback方法实现事务的提交和回滚"
				}
			]
		},
		{
			"ID": "20211219181330-peda4y2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-peda4y2",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4、mybatis中的多表查询"
				}
			]
		},
		{
			"ID": "20211219181330-qr1whe0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-qr1whe0",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    表之间的关系有几种："
				}
			]
		},
		{
			"ID": "20211219181330-rpftjcb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-rpftjcb",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        一对多"
				}
			]
		},
		{
			"ID": "20211219181330-52ut28n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-52ut28n",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        多对一"
				}
			]
		},
		{
			"ID": "20211219181330-if8p7a5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-if8p7a5",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        一对一"
				}
			]
		},
		{
			"ID": "20211219181330-lvc5ijs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-lvc5ijs",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        多对多"
				}
			]
		},
		{
			"ID": "20211219181330-88o52fi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-88o52fi",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    举例："
				}
			]
		},
		{
			"ID": "20211219181330-6nkwuju",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-6nkwuju",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        用户和订单就是一对多"
				}
			]
		},
		{
			"ID": "20211219181330-0yhw8wu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-0yhw8wu",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        订单和用户就是多对一"
				}
			]
		},
		{
			"ID": "20211219181330-dk4o44b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-dk4o44b",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            一个用户可以下多个订单"
				}
			]
		},
		{
			"ID": "20211219181330-blr7vtx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-blr7vtx",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            多个订单属于同一个用户"
				}
			]
		},
		{
			"ID": "20211219181330-d3tpcts",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-d3tpcts",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        人和身份证号就是一对一"
				}
			]
		},
		{
			"ID": "20211219181330-va3xtnv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-va3xtnv",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            一个人只能有一个身份证号"
				}
			]
		},
		{
			"ID": "20211219181330-3spicgr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-3spicgr",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            一个身份证号只能属于一个人"
				}
			]
		},
		{
			"ID": "20211219181330-1oljxoj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-1oljxoj",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        老师和学生之间就是多对多"
				}
			]
		},
		{
			"ID": "20211219181330-m5z92t8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-m5z92t8",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            一个学生可以被多个老师教过"
				}
			]
		},
		{
			"ID": "20211219181330-sshtjbs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-sshtjbs",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            一个老师可以交多个学生"
				}
			]
		},
		{
			"ID": "20211219181330-zzqtnhb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-zzqtnhb",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    特例："
				}
			]
		},
		{
			"ID": "20211219181330-05kjvsp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-05kjvsp",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        如果拿出每一个订单，他都只能属于一个用户。"
				}
			]
		},
		{
			"ID": "20211219181330-2pw3ttb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-2pw3ttb",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        所以Mybatis就把多对一看成了一对一。"
				}
			]
		},
		{
			"ID": "20211219181330-zx5twif",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-zx5twif",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    mybatis中的多表查询："
				}
			]
		},
		{
			"ID": "20211219181330-3j6wvv3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-3j6wvv3",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        示例：用户和账户"
				}
			]
		},
		{
			"ID": "20211219181330-ex4r75f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-ex4r75f",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            一个用户可以有多个账户"
				}
			]
		},
		{
			"ID": "20211219181330-eo1skmb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-eo1skmb",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            一个账户只能属于一个用户（多个账户也可以属于同一个用户）"
				}
			]
		},
		{
			"ID": "20211219181330-5kh6osm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-5kh6osm",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        步骤："
				}
			]
		},
		{
			"ID": "20211219181330-7sozv1b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-7sozv1b",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            1、建立两张表：用户表，账户表"
				}
			]
		},
		{
			"ID": "20211219181330-0e8ziam",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-0e8ziam",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                让用户表和账户表之间具备一对多的关系：需要使用外键在账户表中添加"
				}
			]
		},
		{
			"ID": "20211219181330-0meu10t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-0meu10t",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            2、建立两个实体类：用户实体类和账户实体类"
				}
			]
		},
		{
			"ID": "20211219181330-wjuflgr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-wjuflgr",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                让用户和账户的实体类能体现出来一对多的关系"
				}
			]
		},
		{
			"ID": "20211219181330-7ngrvb4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-7ngrvb4",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            3、建立两个配置文件"
				}
			]
		},
		{
			"ID": "20211219181330-fg7013m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-fg7013m",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                用户的配置文件"
				}
			]
		},
		{
			"ID": "20211219181330-5rwpb3d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-5rwpb3d",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                账户的配置文件"
				}
			]
		},
		{
			"ID": "20211219181330-09habte",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-09habte",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            4、实现配置："
				}
			]
		},
		{
			"ID": "20211219181330-vjhja1s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-vjhja1s",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                当我们查询用户时，可以同时得到用户下所包含的账户信息"
				}
			]
		},
		{
			"ID": "20211219181330-gact3yo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-gact3yo",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                当我们查询账户时，可以同时得到账户的所属用户信息"
				}
			]
		},
		{
			"ID": "20211219181330-99w4snm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-99w4snm",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        示例：用户和角色"
				}
			]
		},
		{
			"ID": "20211219181330-vdjet8i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-vdjet8i",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            一个用户可以有多个角色"
				}
			]
		},
		{
			"ID": "20211219181330-dwg8f6u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-dwg8f6u",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            一个角色可以赋予多个用户"
				}
			]
		},
		{
			"ID": "20211219181330-jmjdxm5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-jmjdxm5",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        步骤："
				}
			]
		},
		{
			"ID": "20211219181330-29zdzec",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-29zdzec",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            1、建立两张表：用户表，角色表"
				}
			]
		},
		{
			"ID": "20211219181330-22zu9ki",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-22zu9ki",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                让用户表和角色表具有多对多的关系。需要使用中间表，中间表中包含各自的主键，在中间表中是外键。"
				}
			]
		},
		{
			"ID": "20211219181330-f2uagrx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-f2uagrx",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            2、建立两个实体类：用户实体类和角色实体类"
				}
			]
		},
		{
			"ID": "20211219181330-28tkmd3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-28tkmd3",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                让用户和角色的实体类能体现出来多对多的关系"
				}
			]
		},
		{
			"ID": "20211219181330-rtefyr6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-rtefyr6",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                各自包含对方一个集合引用"
				}
			]
		},
		{
			"ID": "20211219181330-jomi4p6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-jomi4p6",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            3、建立两个配置文件"
				}
			]
		},
		{
			"ID": "20211219181330-9s3v0l4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-9s3v0l4",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                用户的配置文件"
				}
			]
		},
		{
			"ID": "20211219181330-b3kzt2s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-b3kzt2s",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                角色的配置文件"
				}
			]
		},
		{
			"ID": "20211219181330-ewhpib9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-ewhpib9",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            4、实现配置："
				}
			]
		},
		{
			"ID": "20211219181330-07icric",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-07icric",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                当我们查询用户时，可以同时得到用户所包含的角色信息"
				}
			]
		},
		{
			"ID": "20211219181330-03vorne",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-03vorne",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                当我们查询角色时，可以同时得到角色的所赋予的用户信息"
				}
			]
		},
		{
			"ID": "20211219181330-meb3hj5",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20211219181330-meb3hj5",
				"updated": "20211219181330"
			}
		},
		{
			"ID": "20211219181330-vwwub5a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-vwwub5a",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、Mybatis中的延迟加载"
				}
			]
		},
		{
			"ID": "20211219181330-95pe65t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-95pe65t",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    问题：在一对多中，当我们有一个用户，它有100个账户。"
				}
			]
		},
		{
			"ID": "20211219181330-uhv1xnu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-uhv1xnu",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "          在查询用户的时候，要不要把关联的账户查出来？"
				}
			]
		},
		{
			"ID": "20211219181330-3rxsc3h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-3rxsc3h",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "          在查询账户的时候，要不要把关联的用户查出来？"
				}
			]
		},
		{
			"ID": "20211219181330-sn9fkii",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-sn9fkii",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "          在查询用户时，用户下的账户信息应该是，什么时候使用，什么时候查询的。"
				}
			]
		},
		{
			"ID": "20211219181330-5h6aklt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-5h6aklt",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "          在查询账户时，账户的所属用户信息应该是随着账户查询时一起查询出来。"
				}
			]
		},
		{
			"ID": "20211219181330-4on5j1p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-4on5j1p",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    什么是延迟加载"
				}
			]
		},
		{
			"ID": "20211219181330-k8cb8so",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-k8cb8so",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        在真正使用数据时才发起查询，不用的时候不查询。按需加载（懒加载）"
				}
			]
		},
		{
			"ID": "20211219181330-n9vn1lx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-n9vn1lx",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    什么是立即加载"
				}
			]
		},
		{
			"ID": "20211219181330-xo680sz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-xo680sz",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        不管用不用，只要一调用方法，马上发起查询。"
				}
			]
		},
		{
			"ID": "20211219181330-68j9av8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-68j9av8",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    在对应的四种表关系中：一对多，多对一，一对一，多对多"
				}
			]
		},
		{
			"ID": "20211219181330-89qntey",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-89qntey",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        一对多，多对多：通常情况下我们都是采用延迟加载。"
				}
			]
		},
		{
			"ID": "20211219181330-q7ytkmz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-q7ytkmz",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        多对一，一对一：通常情况下我们都是采用立即加载。"
				}
			]
		},
		{
			"ID": "20211219181330-4ng298l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-4ng298l",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、Mybatis中的缓存"
				}
			]
		},
		{
			"ID": "20211219181330-er1eimo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-er1eimo",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    什么是缓存"
				}
			]
		},
		{
			"ID": "20211219181330-3y5aban",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-3y5aban",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        存在于内存中的临时数据。"
				}
			]
		},
		{
			"ID": "20211219181330-vxdze15",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-vxdze15",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    为什么使用缓存"
				}
			]
		},
		{
			"ID": "20211219181330-omk0jj9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-omk0jj9",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        减少和数据库的交互次数，提高执行效率。"
				}
			]
		},
		{
			"ID": "20211219181330-4xn8ock",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-4xn8ock",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    什么样的数据能使用缓存，什么样的数据不能使用"
				}
			]
		},
		{
			"ID": "20211219181330-xk2d7y6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-xk2d7y6",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        适用于缓存："
				}
			]
		},
		{
			"ID": "20211219181330-93we3tp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-93we3tp",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            经常查询并且不经常改变的。"
				}
			]
		},
		{
			"ID": "20211219181330-3exgqo2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-3exgqo2",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            数据的正确与否对最终结果影响不大的。"
				}
			]
		},
		{
			"ID": "20211219181330-8qby301",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-8qby301",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        不适用于缓存："
				}
			]
		},
		{
			"ID": "20211219181330-7i378gw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-7i378gw",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            经常改变的数据"
				}
			]
		},
		{
			"ID": "20211219181330-d5nhpxw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-d5nhpxw",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            数据的正确与否对最终结果影响很大的。"
				}
			]
		},
		{
			"ID": "20211219181330-s1m3vt8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-s1m3vt8",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            例如：商品的库存，银行的汇率，股市的牌价。"
				}
			]
		},
		{
			"ID": "20211219181330-pr0cyqp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-pr0cyqp",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    Mybatis中的一级缓存和二级缓存"
				}
			]
		},
		{
			"ID": "20211219181330-zut4y1h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-zut4y1h",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        一级缓存："
				}
			]
		},
		{
			"ID": "20211219181330-2q5tprh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-2q5tprh",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            它指的是Mybatis中SqlSession对象的缓存。"
				}
			]
		},
		{
			"ID": "20211219181330-smpiqh4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-smpiqh4",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            当我们执行查询之后，查询的结果会同时存入到SqlSession为我们提供一块区域中。"
				}
			]
		},
		{
			"ID": "20211219181330-czny420",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-czny420",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            该区域的结构是一个Map。当我们再次查询同样的数据，mybatis会先去sqlsession中"
				}
			]
		},
		{
			"ID": "20211219181330-mveka6z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-mveka6z",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            查询是否有，有的话直接拿出来用。"
				}
			]
		},
		{
			"ID": "20211219181330-hg9gg7z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-hg9gg7z",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            当SqlSession对象消失时，mybatis的一级缓存也就消失了。"
				}
			]
		},
		{
			"ID": "20211219181330-1z7kcu2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-1z7kcu2",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        二级缓存:"
				}
			]
		},
		{
			"ID": "20211219181330-9zr5won",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-9zr5won",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            它指的是Mybatis中SqlSessionFactory对象的缓存。由同一个SqlSessionFactory对象创建的SqlSession共享其缓存。"
				}
			]
		},
		{
			"ID": "20211219181330-k3xn07e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-k3xn07e",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "            二级缓存的使用步骤："
				}
			]
		},
		{
			"ID": "20211219181330-47d0jft",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-47d0jft",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                第一步：让Mybatis框架支持二级缓存（在SqlMapConfig.xml中配置）"
				}
			]
		},
		{
			"ID": "20211219181330-75i9xkt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-75i9xkt",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                第二步：让当前的映射文件支持二级缓存（在IUserDao.xml中配置）"
				}
			]
		},
		{
			"ID": "20211219181330-8dk6ivy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-8dk6ivy",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                第三步：让当前的操作支持二级缓存（在select标签中配置）"
				}
			]
		},
		{
			"ID": "20211219181330-gwp84uf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-gwp84uf",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、Mybatis中的注解开发"
				}
			]
		},
		{
			"ID": "20211219181330-803uigu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-803uigu",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    环境搭建"
				}
			]
		},
		{
			"ID": "20211219181330-ct4bvl8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-ct4bvl8",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    单表CRUD操作（代理Dao方式）"
				}
			]
		},
		{
			"ID": "20211219181330-hnpdlfb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-hnpdlfb",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    多表查询操作"
				}
			]
		},
		{
			"ID": "20211219181330-jptok9m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-jptok9m",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    缓存的配置"
				}
			]
		},
		{
			"ID": "20211219181330-t34x4o3",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20211219181330-t34x4o3",
				"updated": "20211219181330"
			}
		},
		{
			"ID": "20211219181330-fjygk2g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-fjygk2g",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Mybatis之分页"
				}
			]
		},
		{
			"ID": "20211219181330-hldvbwx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211219181330-hldvbwx",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、逻辑分页和物理分页的区别"
				}
			]
		},
		{
			"ID": "20211219181330-m4e70my",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211219181330-m4e70my",
				"updated": "20211219181330"
			},
			"Children": [
				{
					"ID": "20211219181330-dzrq2l7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181330-dzrq2l7"
					},
					"Children": [
						{
							"ID": "20211219181330-qs5lm1i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181330-qs5lm1i"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "逻辑分页："
								}
							]
						},
						{
							"ID": "20211219181330-1x2wrn3",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20211219181330-1x2wrn3"
							},
							"Children": [
								{
									"ID": "20211219181330-bctwn4u",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20211219181330-bctwn4u"
									},
									"Children": [
										{
											"ID": "20211219181330-0zuij7t",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211219181330-0zuij7t"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "先把所有的数据查出来放到内存中，在结果集中（resultSet）进行筛选分页"
												}
											]
										}
									]
								},
								{
									"ID": "20211219181330-rh8q7d9",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20211219181330-rh8q7d9"
									},
									"Children": [
										{
											"ID": "20211219181330-gmqdzkx",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211219181330-gmqdzkx"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "缺点：对内存开销大，内存容易溢出，但是数据量小时，效率高"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20211219181330-pk9zdsq",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181330-pk9zdsq"
					},
					"Children": [
						{
							"ID": "20211219181330-cnqk7dr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181330-cnqk7dr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "物理分页："
								}
							]
						}
					]
				},
				{
					"ID": "20211219181330-uyldsye",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181330-uyldsye"
					},
					"Children": [
						{
							"ID": "20211219181330-ure1zs0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181330-ure1zs0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "直接通过SQL 的limit 关键字来进行分页。"
								}
							]
						}
					]
				},
				{
					"ID": "20211219181330-jdtry9a",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211219181330-jdtry9a"
					},
					"Children": [
						{
							"ID": "20211219181330-tnq8q22",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211219181330-tnq8q22"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "缺点：对内存开销小，数据量大时推荐使用此方式。"
								}
							]
						}
					]
				}
			]
		}
	]
}