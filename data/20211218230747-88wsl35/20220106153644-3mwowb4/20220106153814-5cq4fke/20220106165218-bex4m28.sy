{
	"ID": "20220106165218-bex4m28",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220106165218-bex4m28",
		"title": "新文档",
		"updated": "20220106165357"
	},
	"Children": [
		{
			"ID": "20220106165220-wy4630d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-wy4630d",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、rabbit MQ 应用吗？"
				}
			]
		},
		{
			"ID": "20220106165220-zyutj8m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-zyutj8m",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "轮询分发"
				}
			]
		},
		{
			"ID": "20220106165220-lljbhb2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-lljbhb2",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "grant all privileges on "
				},
				{
					"Type": "NodeEmphasis",
					"Data": "em",
					"Children": [
						{
							"Type": "NodeEmA6kOpenMarker",
							"Data": "*"
						},
						{
							"Type": "NodeText",
							"Data": "."
						},
						{
							"Type": "NodeEmA6kCloseMarker",
							"Data": "*"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " to root@\"%\" identified by \"root2019\";"
				}
			]
		},
		{
			"ID": "20220106165220-lcmt028",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-lcmt028",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "https://blog.csdn.net/cairuojin/article/details/81912033"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://blog.csdn.net/cairuojin/article/details/81912033"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220106165220-iovotnv",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20220106165220-iovotnv",
				"updated": "20220106165220"
			}
		},
		{
			"ID": "20220106165220-be1u5ld",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-be1u5ld",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "消息队列： "
				},
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "https://www.imooc.com/learn/1042"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://www.imooc.com/learn/1042"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220106165220-8ipztu7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-8ipztu7",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先进先出"
				}
			]
		},
		{
			"ID": "20220106165220-v0gjeh0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-v0gjeh0",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作用是：1，提高系统性能（响应时间），流量削峰。2、降低系统耦合性，"
				}
			]
		},
		{
			"ID": "20220106165220-93yg6gq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-93yg6gq",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "消息队列带来的一些问题："
				}
			]
		},
		{
			"ID": "20220106165220-9fvcrpo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-9fvcrpo",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "系统的可用性降低：加入MQ之前，你不用考虑消息丢失或者说MQ挂掉等等的情况，但是"
				}
			]
		},
		{
			"ID": "20220106165220-sysl2mc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-sysl2mc",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "引入MQ之后你就需要去考虑了。"
				}
			]
		},
		{
			"ID": "20220106165220-99zk8xq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-99zk8xq",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "系统复杂性提高：你需要保证消息没有被重复消费，处理消息丢失的情况。"
				}
			]
		},
		{
			"ID": "20220106165220-vqm6mv0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-vqm6mv0",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "保证消息传递的顺序性等问题"
				}
			]
		},
		{
			"ID": "20220106165220-uqorze0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-uqorze0",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一致性问题："
				}
			]
		},
		{
			"ID": "20220106165220-a18g4iy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-a18g4iy",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "万一消息的真正消费者并没有正确消费怎么办？这样会导致数据不一致的情况了？"
				}
			]
		},
		{
			"ID": "20220106165220-zj1d2eb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-zj1d2eb",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如何保证消息的正确性？"
				}
			]
		},
		{
			"ID": "20220106165220-dvfkbjc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-dvfkbjc",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如何保证消息不被重复消费？"
				}
			]
		},
		{
			"ID": "20220106165220-28wkloz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-28wkloz",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如何保证消息的可靠性？"
				}
			]
		},
		{
			"ID": "20220106165220-scrj4jp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-scrj4jp",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如何保证消息的一致性？"
				}
			]
		},
		{
			"ID": "20220106165220-mfo939s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-mfo939s",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "后果：降低系统的可用性？系统复杂度提高？"
				}
			]
		},
		{
			"ID": "20220106165220-q9km6t3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-q9km6t3",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JMS ：Java Message Service ：java 消息服务"
				}
			]
		},
		{
			"ID": "20220106165220-f2uy5q2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-f2uy5q2",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "AMQP : advanced  message queue proticol 高级消息队列协议"
				}
			]
		},
		{
			"ID": "20220106165220-wjpy0t1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-wjpy0t1",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "两者的区别："
				}
			]
		},
		{
			"ID": "20220106165220-51fgbi8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-51fgbi8",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、JMS 在java体系中多个client 均可以通过JMS进行交互，但是跨平台比较差，"
				}
			]
		},
		{
			"ID": "20220106165220-1sdiwuy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-1sdiwuy",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、而AMQP天然具有跨平台、 跨语言。"
				}
			]
		},
		{
			"ID": "20220106165220-7wuctw6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-7wuctw6",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、JMS 支持TextMessage、MapMessage 等复杂的消息类型"
				}
			]
		},
		{
			"ID": "20220106165220-nsrsa64",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-nsrsa64",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、 而 AMQP 仅支持 byte[] 消息类型（复杂的类型可序列化后发送）。"
				}
			]
		},
		{
			"ID": "20220106165220-2icz7re",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-2icz7re",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、由于Exchange 提供的路由算法，AMQP可以提供多样化的路由方式来传递消息到消息队列/2、2、"
				}
			]
		},
		{
			"ID": "20220106165220-o4k7tb4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165220-o4k7tb4",
				"updated": "20220106165220"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、 JMS 仅支持 队列 和 主题/订阅 方式两种"
				}
			]
		},
		{
			"ID": "20220106165246-0nf4q0v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165246-0nf4q0v",
				"updated": "20220106165246"
			}
		},
		{
			"ID": "20220106165254-7jhrc0t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165254-7jhrc0t",
				"updated": "20220106165254"
			}
		},
		{
			"ID": "20220106165255-2ldayfv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165255-2ldayfv",
				"updated": "20220106165255"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "rabbitmq 面试知识点"
				},
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "https://www.jianshu.com/p/95bf710bd020"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://www.jianshu.com/p/95bf710bd020"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220106165259-6yjkygh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165259-6yjkygh",
				"updated": "20220106165259"
			}
		},
		{
			"ID": "20220106165255-8cq95je",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165255-8cq95je",
				"updated": "20220106165255"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "https://www.cnblogs.com/tinyj/p/9977205.html"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://www.cnblogs.com/tinyj/p/9977205.html"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220106165255-6tyr1c9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165255-6tyr1c9",
				"updated": "20220106165255"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "springboot ； "
				},
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "https://github.com/YeJR1993/SpringBoot-Mysql-Redis-RabbitMQ-Shiro"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://github.com/YeJR1993/SpringBoot-Mysql-Redis-RabbitMQ-Shiro"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220106165255-k5bmebx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165255-k5bmebx",
				"updated": "20220106165255"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "https://github.com/zaiyunduan123/springboot-seckill/blob/master/src/main/java/com/jesper/seckill/result/CodeMsg.java"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://github.com/zaiyunduan123/springboot-seckill/blob/master/src/main/java/com/jesper/seckill/result/CodeMsg.java"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220106165255-o8vjdcs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165255-o8vjdcs",
				"updated": "20220106165255"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/MQ（消息队列）-20220106165255-l8q1jq6.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220106165255-rio36ss",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165255-rio36ss",
				"updated": "20220106165255"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "业务模块解耦"
				}
			]
		},
		{
			"ID": "20220106165255-1x0wtpc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165255-1x0wtpc",
				"updated": "20220106165255"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "异步通信"
				}
			]
		},
		{
			"ID": "20220106165255-jqhfmpu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165255-jqhfmpu",
				"updated": "20220106165255"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "高并发限流"
				}
			]
		},
		{
			"ID": "20220106165255-l9vrkrd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165255-l9vrkrd",
				"updated": "20220106165255"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "超时延时处理"
				}
			]
		},
		{
			"ID": "20220106165357-mql26t1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165357-mql26t1",
				"updated": "20220106165357"
			}
		},
		{
			"ID": "20220106165357-8d0d796",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165357-8d0d796",
				"updated": "20220106165357"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "消费端的场景主要有三中：数据库、缓存、第三方接口"
				}
			]
		},
		{
			"ID": "20220106165357-26v24ls",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165357-26v24ls",
				"updated": "20220106165357"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数据库："
				}
			]
		},
		{
			"ID": "20220106165357-roavx14",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165357-roavx14",
				"updated": "20220106165357"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    拿到这个消息进行insert，用消息ID作为主键，若出现重复消费就会导致主键冲突，避免数据库出现脏数据。"
				}
			]
		},
		{
			"ID": "20220106165357-c9zoe4d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165357-c9zoe4d",
				"updated": "20220106165357"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "缓存： 消息做redis的set的操作，因为你无论set几次结果都是一样的，set操作本来就算幂等操作。"
				}
			]
		},
		{
			"ID": "20220106165357-p5duw6o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165357-p5duw6o",
				"updated": "20220106165357"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第三方接口： 准备一个第三方介质,来做消费记录。以redis为例，给消息分配一个全局id，只要消费过该消息，将\u003cid,message\u003e以K-V形式写入redis。那消费者开始消费前，先去redis中查询有没消费记录即可。"
				}
			]
		},
		{
			"ID": "20220106165357-u9zzdn6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165357-u9zzdn6",
				"updated": "20220106165357"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如何解决丢数据的问题？"
				}
			]
		},
		{
			"ID": "20220106165357-zekgemh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165357-zekgemh",
				"updated": "20220106165357"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、生产者丢数据"
				}
			]
		},
		{
			"ID": "20220106165357-yggymx0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165357-yggymx0",
				"updated": "20220106165357"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、提供transaction机制和confirm模式"
				}
			]
		},
		{
			"ID": "20220106165357-szgsljm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220106165357-szgsljm",
				"updated": "20220106165357"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Transaction机制：在发送消息之前，开启事务（channel.txSelect()）,然后发送消息，如果程序出现异常，事务就会回滚（channel.txRallback()）,"
				}
			]
		}
	]
}