{
	"ID": "20211222145435-uf7of76",
	"Type": "NodeDocument",
	"Properties": {
		"icon": "1f4dd",
		"id": "20211222145435-uf7of76",
		"title": "4、【Stream API】重点",
		"updated": "20211222145819"
	},
	"Children": [
		{
			"ID": "20211222145621-wyimokg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-wyimokg",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、特点"
				}
			]
		},
		{
			"ID": "20211222145621-dhzo85h",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211222145621-dhzo85h",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"ID": "20211222145621-vqnq1bf",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211222145621-vqnq1bf"
					},
					"Children": [
						{
							"ID": "20211222145621-cfqz4sq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211222145621-cfqz4sq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Stream API提供了一套新的流式处理的抽象序列；"
								}
							]
						}
					]
				},
				{
					"ID": "20211222145621-b7ukow0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211222145621-b7ukow0"
					},
					"Children": [
						{
							"ID": "20211222145621-ye666o1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211222145621-ye666o1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Stream API支持函数式编程和链式操作；"
								}
							]
						}
					]
				},
				{
					"ID": "20211222145621-27ig3ur",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211222145621-27ig3ur"
					},
					"Children": [
						{
							"ID": "20211222145621-ifanlj1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211222145621-ifanlj1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Stream可以表示无限序列，并且大多数情况下是惰性求值的。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-s1nrn5t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-s1nrn5t",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二、对比IO的stream"
				}
			]
		},
		{
			"ID": "20211222145621-y5bqlz5",
			"Type": "NodeTable",
			"TableAligns": [
				0,
				0,
				0
			],
			"Properties": {
				"id": "20211222145621-y5bqlz5",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellContentWidth": 4,
									"TableCellContentMaxWidth": 10,
									"Children": [
										{
											"Type": "NodeBr",
											"Data": "br"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellContentWidth": 9,
									"TableCellContentMaxWidth": 26,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "java.io"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellContentWidth": 18,
									"TableCellContentMaxWidth": 28,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "java.util.stream"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 6,
							"TableCellContentMaxWidth": 10,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "存储"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 22,
							"TableCellContentMaxWidth": 26,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "顺序读写的byte或char"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 28,
							"TableCellContentMaxWidth": 28,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "顺序输出的任意java对象实例"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 10,
							"TableCellContentMaxWidth": 10,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "存储用途"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 20,
							"TableCellContentMaxWidth": 26,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "序列化到文件或网络"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 19,
							"TableCellContentMaxWidth": 28,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "内存计算/业务逻辑"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 6,
							"TableCellContentMaxWidth": 10,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "元素"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 20,
							"TableCellContentMaxWidth": 26,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "已分配并存储在内存"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 22,
							"TableCellContentMaxWidth": 28,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可能未分配，实时计算"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 10,
							"TableCellContentMaxWidth": 10,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "元素用途"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 26,
							"TableCellContentMaxWidth": 26,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "操作一组已存在的java对象"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellContentWidth": 10,
							"TableCellContentMaxWidth": 28,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "惰性计算"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-8iwsjny",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-8iwsjny",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "stream惰性计算：一个stream装换另一个stream时，实际上只存储了转换规则，并没有任何计算发生。调用最后收集数据时才真正的计算。"
				}
			]
		},
		{
			"ID": "20211222145621-1il3sz8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-1il3sz8",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Stream操作步骤"
				}
			]
		},
		{
			"ID": "20211222145621-b0bg12h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-b0bg12h",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.创建 Stream"
				}
			]
		},
		{
			"ID": "20211222145621-i27naxa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-i27naxa",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一个数据源（如： 集合、数组）， 获取一个流。"
				}
			]
		},
		{
			"ID": "20211222145621-8fbbk35",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-8fbbk35",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.中间操作"
				}
			]
		},
		{
			"ID": "20211222145621-75fvf63",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-75fvf63",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一个中间操作链，对数据源的数据进行处理。"
				}
			]
		},
		{
			"ID": "20211222145621-wackbt4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-wackbt4",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.终止操作(终端操作)"
				}
			]
		},
		{
			"ID": "20211222145621-czjk4eh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-czjk4eh",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一个终止操作，执行中间操作链，并产生结果 。"
				}
			]
		},
		{
			"ID": "20211222145621-acdx5rt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-acdx5rt",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Image-20211222145621-ahdbxqt.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-weu1wg7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-weu1wg7",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "三、使用（Collection集合使用）"
				}
			]
		},
		{
			"ID": "20211222145621-jgwelt5",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211222145621-jgwelt5",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"ID": "20211222145621-r8e5vsk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211222145621-r8e5vsk"
					},
					"Children": [
						{
							"ID": "20211222145621-piuoda5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211222145621-piuoda5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "（Iterable 接口方法）forEach"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-nlhq261",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-nlhq261",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Map\u003cString ,String\u003e map = new HashMap\u003c\u003e();"
				}
			]
		},
		{
			"ID": "20211222145621-s9x6spt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-s9x6spt",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "map.put(\"1\",\"111\");"
				}
			]
		},
		{
			"ID": "20211222145621-3p3vwav",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-3p3vwav",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "map.put(\"2\",\"222\");"
				}
			]
		},
		{
			"ID": "20211222145621-2dfhq7q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-2dfhq7q",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "map.forEach((a,b)-\u003e{"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-c7m077q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-c7m077q",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "**    System.out.print(\"a=\"+a);**"
				}
			]
		},
		{
			"ID": "20211222145621-r5m83l5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-r5m83l5",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "**    System.out.println(\"b=\"+b);**"
				}
			]
		},
		{
			"ID": "20211222145621-14nr56b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-14nr56b",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "});"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-zpq99j5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-zpq99j5",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "List\u003cInteger\u003e lists = new ArrayList\u003c\u003e();"
				}
			]
		},
		{
			"ID": "20211222145621-ek707vf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-ek707vf",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "for (int i = 0; i \u003c 10; i++) {"
				}
			]
		},
		{
			"ID": "20211222145621-imlptfv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-imlptfv",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    lists.add(i);"
				}
			]
		},
		{
			"ID": "20211222145621-peginsw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-peginsw",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "}"
				}
			]
		},
		{
			"ID": "20211222145621-jtcffb2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-jtcffb2",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "lists.forEach((list) -\u003e{"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-mshlpx3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-mshlpx3",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "**    if (list == 4){**"
				}
			]
		},
		{
			"ID": "20211222145621-qwyat5p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-qwyat5p",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "**        return; // 跳出本次循环**"
				}
			]
		},
		{
			"ID": "20211222145621-7e4pbbf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-7e4pbbf",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "**    }**"
				}
			]
		},
		{
			"ID": "20211222145621-08tvvnp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-08tvvnp",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "});"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-9gl6412",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211222145621-9gl6412",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"ID": "20211222145621-6anjkub",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211222145621-6anjkub"
					},
					"Children": [
						{
							"ID": "20211222145621-2hiouu1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211222145621-2hiouu1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "（stream 接口方法）forEach"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-dvm1h61",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-dvm1h61",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "lists.stream().forEach(integer -\u003e System.out.println(integer));"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-05xvusk",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211222145621-05xvusk",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"ID": "20211222145621-z89fkrm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211222145621-z89fkrm"
					},
					"Children": [
						{
							"ID": "20211222145621-fjdnfyq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211222145621-fjdnfyq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "（映射返回结果）map"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-yvx23va",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-yvx23va",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "List\u003cInteger\u003e collect = lists.stream() "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": ".map(integer -\u003e integer+1)"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " .collect(Collectors.toList()); // 返回加1后的结果"
				}
			]
		},
		{
			"ID": "20211222145621-r4m19af",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211222145621-r4m19af",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"ID": "20211222145621-axg2fyq",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211222145621-axg2fyq"
					},
					"Children": [
						{
							"ID": "20211222145621-1n131tq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211222145621-1n131tq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "（过滤返回boolean）filter"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-t17bwn2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-t17bwn2",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "List\u003cInteger\u003e collect1 = lists.stream(). "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "filter"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " (integer -\u003e {"
				}
			]
		},
		{
			"ID": "20211222145621-54xypkr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-54xypkr",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    return integer % 2 == 0;"
				}
			]
		},
		{
			"ID": "20211222145621-o4tlupt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-o4tlupt",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "}).collect(Collectors.toList());"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-vwkq4fr",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211222145621-vwkq4fr",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"ID": "20211222145621-295kicd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211222145621-295kicd"
					},
					"Children": [
						{
							"ID": "20211222145621-c5d97mk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211222145621-c5d97mk"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "（排序）sorted"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-5f7ey53",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-5f7ey53",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "List\u003cInteger\u003e collect2 = lists.stream().sorted((a, b) -\u003e {"
				}
			]
		},
		{
			"ID": "20211222145621-9ca1mrx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-9ca1mrx",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    return b.compareTo(a);"
				}
			]
		},
		{
			"ID": "20211222145621-ko78fc0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-ko78fc0",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "}).collect(Collectors.toList());// 倒排序"
				}
			]
		},
		{
			"ID": "20211222145621-x59cla1",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211222145621-x59cla1",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"ID": "20211222145621-4s32mbh",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211222145621-4s32mbh"
					},
					"Children": [
						{
							"ID": "20211222145621-42tsg05",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211222145621-42tsg05"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "（收集器）collect"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-i707ewo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-i707ewo",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "1、收集List"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-lwuvsxl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-lwuvsxl",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "lists.stream().collect( "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Collectors.toList()"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " );"
				}
			]
		},
		{
			"ID": "20211222145621-eawsfm7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-eawsfm7",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "2、收集Set"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-71uc9no",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-71uc9no",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "lists.stream().collect(Collectors.toSet());"
				}
			]
		},
		{
			"ID": "20211222145621-2v3bl8f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-2v3bl8f",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、收集Map"
				}
			]
		},
		{
			"ID": "20211222145621-hh8o4n3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-hh8o4n3",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Map\u003cString,String\u003e map = Stream.of(\"AA\",\"BB\",\"CC\").collect( "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Collectors.toMap(k-\u003ek, v-\u003ev+v)"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " );"
				}
			]
		},
		{
			"ID": "20211222145621-tzi69gm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-tzi69gm",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "4、收集后分组（重要）"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-ffwx1y3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-ffwx1y3",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "** Map\u003cInteger, List\u003cInteger\u003e\u003e collect3 = lists.stream().collect(Collectors.groupingBy(Integer::new));// 当前对象**"
				}
			]
		},
		{
			"ID": "20211222145621-esqltlh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-esqltlh",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": " "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "在JDK 8中对List按照某个属性分组的代码：getCouponId意思是getCouponId()即是分组主键（格式：类名::方法"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "）"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-xfkrejy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-xfkrejy",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Map\u003cInteger, List\u003cCoupon\u003e\u003e resultList = couponList.stream().collect(Collectors.groupingBy(Coupon::getCouponId));"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-4fpr1gm",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20211222145621-4fpr1gm",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"ID": "20211222145621-wpzw9ev",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211222145621-wpzw9ev"
					},
					"Children": [
						{
							"ID": "20211222145621-j3tqkd2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211222145621-j3tqkd2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "count() 返回大小"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211222145621-2teavnp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-2teavnp",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "转换操作：map()，filter()，sorted()，distinct()；"
				}
			]
		},
		{
			"ID": "20211222145621-jhxtd2j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-jhxtd2j",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "合并操作：concat()，flatMap()；"
				}
			]
		},
		{
			"ID": "20211222145621-uv9zsrj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-uv9zsrj",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "并行处理：parallel()；"
				}
			]
		},
		{
			"ID": "20211222145621-fmg55iv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-fmg55iv",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "聚合操作：reduce()，collect()，count()，max()，min()，sum()，average()；"
				}
			]
		},
		{
			"ID": "20211222145621-j238w5s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211222145621-j238w5s",
				"updated": "20211222145621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其他操作：allMatch(), anyMatch(), forEach()。"
				}
			]
		}
	]
}