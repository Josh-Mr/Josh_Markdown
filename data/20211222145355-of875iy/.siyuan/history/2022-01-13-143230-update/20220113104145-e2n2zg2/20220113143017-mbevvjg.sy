{
	"ID": "20220113143017-mbevvjg",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220113143017-mbevvjg",
		"title": "6、Java【Set详解】",
		"updated": "20220113143024"
	},
	"Children": [
		{
			"ID": "20220113143024-3gbix25",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113143024-3gbix25",
				"updated": "20220113143024"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、HashSet"
				}
			]
		},
		{
			"ID": "20220113143024-i3ddara",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220113143024-i3ddara",
				"updated": "20220113143024"
			},
			"Children": [
				{
					"ID": "20220113143024-wp9cf0d",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113143024-wp9cf0d"
					},
					"Children": [
						{
							"ID": "20220113143024-nz48zcv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113143024-nz48zcv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "特点：无序的、不同步、可以有null，但只能放一个null。"
								}
							]
						}
					]
				},
				{
					"ID": "20220113143024-jgvogid",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113143024-jgvogid"
					},
					"Children": [
						{
							"ID": "20220113143024-ni9xmef",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113143024-ni9xmef"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "底层：使用的是HashMap实现的，add增加对象时，实际上是将该对象作为底层所维护的Map对象的key，而value则都是同一个Object对象（该对象我们用不上）"
								}
							]
						}
					]
				},
				{
					"ID": "20220113143024-o3vmwlb",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113143024-o3vmwlb"
					},
					"Children": [
						{
							"ID": "20220113143024-40pgmbw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113143024-40pgmbw"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "添加元素（判断重复）过程：使用HashSet时，hashCode()方法就会调用到，判断集合中的对象的hashcode值是否与新增对象的hashcode值一致？"
								}
							]
						},
						{
							"ID": "20220113143024-lwx8s2u",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20220113143024-lwx8s2u"
							},
							"Children": [
								{
									"ID": "20220113143024-2x29ls6",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20220113143024-2x29ls6"
									},
									"Children": [
										{
											"ID": "20220113143024-dnpenpq",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220113143024-dnpenpq"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "不一致时：直接添加进集合。"
												}
											]
										}
									]
								},
								{
									"ID": "20220113143024-u9pq5ez",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20220113143024-u9pq5ez"
									},
									"Children": [
										{
											"ID": "20220113143024-fi6zrfp",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220113143024-fi6zrfp"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "一致时：再进行equals()比较，若返回true时，表示对象已经存在了，就不会添加进去了，否则添加进去。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113143024-igvjguk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113143024-igvjguk",
				"updated": "20220113143024"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二、TreeSet"
				}
			]
		},
		{
			"ID": "20220113143024-nteznjw",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220113143024-nteznjw",
				"updated": "20220113143024"
			},
			"Children": [
				{
					"ID": "20220113143024-6imrhgo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113143024-6imrhgo"
					},
					"Children": [
						{
							"ID": "20220113143024-n81lmkp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113143024-n81lmkp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "特点：有序（自然排序、定制排序）、不允许有null。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113143024-r1at9ep",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113143024-r1at9ep",
				"updated": "20220113143024"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "三、HashSet \u0026 TreeSet的比较？"
				}
			]
		},
		{
			"ID": "20220113143024-viigkz8",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220113143024-viigkz8",
				"updated": "20220113143024"
			},
			"Children": [
				{
					"ID": "20220113143024-h02sa21",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113143024-h02sa21"
					},
					"Children": [
						{
							"ID": "20220113143024-jzzckpx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113143024-jzzckpx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "HashSet 是哈希表（Hash值）实现的,HashSet中的数据是无序的，可以放入null，但只能放入一个null，两者中的值都不能重复，就如数据库中唯一约束。"
								}
							]
						}
					]
				},
				{
					"ID": "20220113143024-ciswlje",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113143024-ciswlje"
					},
					"Children": [
						{
							"ID": "20220113143024-m4043bt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113143024-m4043bt"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "HashSet要求放入的对象必须实现HashCode()方法，放入的对象，是以hashcode码作为标识的，而具有相同内容的 String对象，hashcode是一样，所以放入的内容不能重复。但是同一个类的对象可以放入不同的实例 。"
								}
							]
						}
					]
				},
				{
					"ID": "20220113143024-j3dilvi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113143024-j3dilvi"
					},
					"Children": [
						{
							"ID": "20220113143024-a9a6gos",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113143024-a9a6gos"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "TreeSet 是二差树实现的,Treeset中的数据是自动排好序的，不允许放入null值。原因如下："
								}
							]
						}
					]
				},
				{
					"ID": "20220113143024-35bvte4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113143024-35bvte4"
					},
					"Children": [
						{
							"ID": "20220113143024-dn6jlsk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113143024-dn6jlsk"
							},
							"Children": [
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/Image(45)-20220113143024-kc7hbee.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113143024-nsahu75",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113143024-nsahu75",
				"updated": "20220113143024"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "四、HashSet与TreeSet的使用场景"
				}
			]
		},
		{
			"ID": "20220113143024-4jwt0ir",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220113143024-4jwt0ir",
				"updated": "20220113143024"
			},
			"Children": [
				{
					"ID": "20220113143024-vn6azno",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113143024-vn6azno"
					},
					"Children": [
						{
							"ID": "20220113143024-5xkcp0h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113143024-5xkcp0h"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "HashSet："
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "哈希表"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "是通过使用称为"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "散列法"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的机制来存储信息的，元素并没有以某种特定顺序来存放 。"
								}
							]
						}
					]
				},
				{
					"ID": "20220113143024-y7f80bi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113143024-y7f80bi"
					},
					"Children": [
						{
							"ID": "20220113143024-k7x43lr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113143024-k7x43lr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "TreeSet：提供一个使用树结构存储Set接口的实现(红黑树算法)，对象以升序顺序存储，访问和遍历的时间很快。"
								}
							]
						}
					]
				},
				{
					"ID": "20220113143024-c9k3hzv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113143024-c9k3hzv"
					},
					"Children": [
						{
							"ID": "20220113143024-99ek0mr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113143024-99ek0mr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "备注：使用场景:HashSet是基于Hash算法实现的，其性能通常都优于TreeSet。我们通常都应该使用HashSet，在我们需要排序的功能时，我们才使用TreeSet。"
								}
							]
						}
					]
				}
			]
		}
	]
}