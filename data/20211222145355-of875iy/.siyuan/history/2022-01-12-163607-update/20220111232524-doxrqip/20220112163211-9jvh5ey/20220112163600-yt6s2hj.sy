{
	"ID": "20220112163600-yt6s2hj",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220112163600-yt6s2hj",
		"title": "20220112163600",
		"updated": "20220112163601"
	},
	"Children": [
		{
			"ID": "20220112163601-in3t2b1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220112163601-in3t2b1",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1.什么是比特(Bit)？什么是字节(Byte)？什么是字符(Char)？以及他们的区别？"
				}
			]
		},
		{
			"ID": "20220112163601-5dnsm25",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-5dnsm25",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-iwwyru9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-iwwyru9"
					},
					"Children": [
						{
							"ID": "20220112163601-sploxhv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-sploxhv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Bit 位，是计算机最小的二进制单位 ，取0或1，主要用于计算机操作。"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-7nsgsms",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-7nsgsms"
					},
					"Children": [
						{
							"ID": "20220112163601-u0xtksj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-u0xtksj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Byte 字节，是数据的最小单位，由8位bit组成，取值（-128-127），主要用于计算机操作数据。"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-dfb3j8k",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-dfb3j8k"
					},
					"Children": [
						{
							"ID": "20220112163601-q35qapr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-q35qapr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Char 字符，是用户可读写的最小单位，由16位bit（2个byte）组成，取值（0-65535），主要用于用户操数数据。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-4cvmo4j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-4cvmo4j",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、字符集"
				}
			]
		},
		{
			"ID": "20220112163601-inxj83f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-inxj83f",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    unicode是什么？"
				}
			]
		},
		{
			"ID": "20220112163601-5h3myud",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-5h3myud",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-9yhzo4h",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-9yhzo4h"
					},
					"Children": [
						{
							"ID": "20220112163601-mnogz28",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-mnogz28"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通用的字符集、对所有的文字进行统一编码，每个字符用两个字节来表示。"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-x4jkrs2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-x4jkrs2"
					},
					"Children": [
						{
							"ID": "20220112163601-28zf30z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-28zf30z"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对所有的文件进行统一编码，对每一个字符都用2个字节表示。对于英文前面补零的方式，例如：“a\"的ASCII为“0x61”，unicode就是“0x00”,\"0x61\"。"
								}
							]
						},
						{
							"ID": "20220112163601-xji4dwy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-xji4dwy"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ASCII码是什么？"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-fy2jo79",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-fy2jo79"
					},
					"Children": [
						{
							"ID": "20220112163601-1tbbud5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-1tbbud5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "基于常用的英文字符的标准编码，我们知道的英文中经常使用的字符，数字符号被计算机处理时都是二进制形式出现的，这种二进制的集合就是所谓ASCII码。"
								}
							]
						},
						{
							"ID": "20220112163601-q2va5in",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-q2va5in"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "UTF-8是什么？"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-b82b8um",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-b82b8um"
					},
					"Children": [
						{
							"ID": "20220112163601-u1liyj5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-u1liyj5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通用字符集，UCS是所有其他字符集标准的一个超集。不同类型的字符用不同长度的UTF码。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-ky4wqou",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-ky4wqou",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、什么是IO流？"
				}
			]
		},
		{
			"ID": "20220112163601-7qow6wm",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-7qow6wm",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-qno3i2h",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-qno3i2h"
					},
					"Children": [
						{
							"ID": "20220112163601-37c9hfu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-37c9hfu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "它是一种数据从 源头 流向 目的地。比如拷贝文件、就包含的输入流和输出流。"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-2safglm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-2safglm"
					},
					"Children": [
						{
							"ID": "20220112163601-o0rdse9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-o0rdse9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "输出流还是输入流是：相对于内存或者程序而言的"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-fdp8koc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-fdp8koc",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4、Java中有哪几种流？"
				}
			]
		},
		{
			"ID": "20220112163601-savob5s",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-savob5s",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-85twmve",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-85twmve"
					},
					"Children": [
						{
							"ID": "20220112163601-c0al0i5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-c0al0i5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "流的方向？"
								}
							]
						},
						{
							"ID": "20220112163601-jkbm7jz",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20220112163601-jkbm7jz"
							},
							"Children": [
								{
									"ID": "20220112163601-m1k85qy",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20220112163601-m1k85qy"
									},
									"Children": [
										{
											"ID": "20220112163601-a9zy0wk",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220112163601-a9zy0wk"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输入流：InputStream"
												}
											]
										}
									]
								},
								{
									"ID": "20220112163601-9dxrmhw",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20220112163601-9dxrmhw"
									},
									"Children": [
										{
											"ID": "20220112163601-17lhqyo",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220112163601-17lhqyo"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "输出流：OutputStream"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-5uo5xvf",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-5uo5xvf"
					},
					"Children": [
						{
							"ID": "20220112163601-nmz7zxj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-nmz7zxj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "实现的功能？"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-u10pa5v",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-u10pa5v"
					},
					"Children": [
						{
							"ID": "20220112163601-rbbf7ve",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-rbbf7ve"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "节点流：直接与数据源相连，用于输入或输出"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-tyz7241",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-tyz7241"
					},
					"Children": [
						{
							"ID": "20220112163601-3vuhzt2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-3vuhzt2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "处理流："
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-krg7wp6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-krg7wp6"
					},
					"Children": [
						{
							"ID": "20220112163601-cjwl8e8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-cjwl8e8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在节点流的基础上对之进行加工，进行一些功能的扩展"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-pum6an7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-pum6an7"
					},
					"Children": [
						{
							"ID": "20220112163601-abrl1gr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-abrl1gr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "处理流的构造器必须要 传入节点流的子类"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-1py6qai",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-1py6qai"
					},
					"Children": [
						{
							"ID": "20220112163601-dnyg1uq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-dnyg1uq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "处理数据的单位？"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-xl516b1",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-xl516b1"
					},
					"Children": [
						{
							"ID": "20220112163601-rj9msq4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-rj9msq4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字节流："
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-xfb5m7l",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-xfb5m7l"
					},
					"Children": [
						{
							"ID": "20220112163601-a7su2dr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-a7su2dr"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "以8位为单位对二进制数据进行操作，对数据不需要进行转换，所有的类都是InputStream和OutputStream的子类。"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-f8mfi4i",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-f8mfi4i"
					},
					"Children": [
						{
							"ID": "20220112163601-xubzw1t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-xubzw1t"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字节流的抽象基类（父类）是：java.io.InputStream、java.io.OutputStream"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-uo9k1n3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-uo9k1n3"
					},
					"Children": [
						{
							"ID": "20220112163601-t77wocq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-t77wocq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符流："
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-jlb5sz9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-jlb5sz9"
					},
					"Children": [
						{
							"ID": "20220112163601-3dr4c3t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-3dr4c3t"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "以字符为单位对数据进行操作，在读取的时候将二进制数据转换成字符，在写的时候则是将字符转换成二进制数据，这些类都是Reader和Writer的子类。"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-8plfpfo",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-8plfpfo"
					},
					"Children": [
						{
							"ID": "20220112163601-5onffr2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-5onffr2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符流的抽象基类（父类）是：java.io.Reader 、 java.io.Writer"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-cqc3vpp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-cqc3vpp",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "IO类设计时使用了装饰者设计模式。 "
				},
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "【设计模式】装饰模式"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://app.yinxiang.com/shard/s57/nl/20268372/9d83514e-4f78-4434-9a8d-fdbc33512ac0"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-xtmo3uh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-xtmo3uh",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.BufferedReader属于哪种流,它主要是用来做什么的,它里面有那些经典的方法?"
				}
			]
		},
		{
			"ID": "20220112163601-gf65xcu",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-gf65xcu",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-35968yc",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-35968yc"
					},
					"Children": [
						{
							"ID": "20220112163601-55vg5qx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-55vg5qx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "属于处理流中的缓冲流，可以将读取的内容存在内存里面，有readLine()方法读取一行文本，从字符输入流中读取文本，缓冲各个字符，从而提供字符、数组和行的高效读取。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-4gfe6eq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-4gfe6eq",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6 InputStreamReader类"
				}
			]
		},
		{
			"ID": "20220112163601-6lpa32n",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-6lpa32n",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-yy8uizs",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-yy8uizs"
					},
					"Children": [
						{
							"ID": "20220112163601-lgxolcn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-lgxolcn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是字节流通向字符流的桥梁,封裝了InputStream在里头, 它以较高级的方式,一次读取一个一个字符，以文本格式输入 / 输出，可以指定编码格式。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-fge1hfp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-fge1hfp",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7.FileInputStream和FileOutputStream是什么？"
				}
			]
		},
		{
			"ID": "20220112163601-a9x20z4",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-a9x20z4",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-v22341m",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-v22341m"
					},
					"Children": [
						{
							"ID": "20220112163601-ajxw6au",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-ajxw6au"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "拷贝文件操作的时候，经常用到的两个类。在处理小文件的时候，他们性能表现还不错，"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-apcgqn2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-apcgqn2"
					},
					"Children": [
						{
							"ID": "20220112163601-tt03nhp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-tt03nhp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "大文件的时候，最好使用BufferedInputStream(或BufferedReader)和BufferedOutputStream(或BufferedWriter)"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-he1y6pu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-he1y6pu",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8.如果要对字节流进行大量的从硬盘读取,要用那个流,为什么?"
				}
			]
		},
		{
			"ID": "20220112163601-jjcdumy",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-jjcdumy",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-1nqb165",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-1nqb165"
					},
					"Children": [
						{
							"ID": "20220112163601-po7f2gc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-po7f2gc"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "BufferedInputStream 使用缓冲流能够减少对硬盘的损伤"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-14i43mg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-14i43mg",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "9.System.out.println()是什么"
				}
			]
		},
		{
			"ID": "20220112163601-rxtfkwi",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-rxtfkwi",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-7bm01av",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-7bm01av"
					},
					"Children": [
						{
							"ID": "20220112163601-l6hocsg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-l6hocsg"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "println是PrintStream的一个方法。Out是一个静态PrintStream类型的成员变量，system是一个java.lang包中的类，用于和底层的操作系统进行交互。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-0b3ktty",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-0b3ktty",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "10.如果我要打印出不同类型的数据到数据源,那么最适合的流是那个流,为什么?"
				}
			]
		},
		{
			"ID": "20220112163601-lqx2phv",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-lqx2phv",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-fjqamuv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-fjqamuv"
					},
					"Children": [
						{
							"ID": "20220112163601-b160tg9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-b160tg9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Printwriter 可以打印各种数据类型"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-7nnrlm3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-7nnrlm3",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "11.怎么样把输出字节流转换成输出字符流,说出它的步骤?"
				}
			]
		},
		{
			"ID": "20220112163601-vfgkfld",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-vfgkfld",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-q3yzzc1",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-q3yzzc1"
					},
					"Children": [
						{
							"ID": "20220112163601-51m5xb2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-51m5xb2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用 转换处理流OutputStreamWriter 可以将字节流转为字符流"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-9025myy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-9025myy",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "12.把包括基本类型在内的数据和字符串按顺序输出到数据源，或者按照顺序从数据源读入，一般用哪两个流？"
				}
			]
		},
		{
			"ID": "20220112163601-8ag4eke",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-8ag4eke",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-b9phsxm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-b9phsxm"
					},
					"Children": [
						{
							"ID": "20220112163601-qhylc7p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-qhylc7p"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "DataInputStream DataOutputStream"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-cv83r5l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-cv83r5l",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "13.把一个对象写入数据源或者从一个数据源读出来,用哪两个流？"
				}
			]
		},
		{
			"ID": "20220112163601-2mz52i4",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-2mz52i4",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-lfkhgvu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-lfkhgvu"
					},
					"Children": [
						{
							"ID": "20220112163601-v78gcsp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-v78gcsp"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ObjectInputStream ObjectOutputStream"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-ju3clbk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-ju3clbk",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "14.什么是序列化和反序列化，实现对象序列化需要做哪些工作？"
				}
			]
		},
		{
			"ID": "20220112163601-yndh5l8",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-yndh5l8",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-g6oaurd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-g6oaurd"
					},
					"Children": [
						{
							"ID": "20220112163601-9oj00za",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-9oj00za"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对象序列化是将对象以二进制的形式保存在硬盘上或者传输到网络；而反序列化则是将二进制的文件转化为对象读取。"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-fvy6ruy",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-fvy6ruy"
					},
					"Children": [
						{
							"ID": "20220112163601-priv3mw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-priv3mw"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "serializable接口是一个mini接口，其中没有需要实现的方法，implements Serializable只是为了标注该对象是可被序列化的。 如果不想让字段放在硬盘上就加transient。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-uhd6tei",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-uhd6tei",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "15.在实现序列化接口是时候一般要生成一个serialVersionUID字段,它叫做什么,一般有什么用？"
				}
			]
		},
		{
			"ID": "20220112163601-n4ai2wt",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-n4ai2wt",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-6l982ow",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-6l982ow"
					},
					"Children": [
						{
							"ID": "20220112163601-rkf9x20",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-rkf9x20"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "是版本号，要保持版本号的一致 来进行序列化，主要是为了防止序列化出错。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-ttgclwm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-ttgclwm",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "16.InputStream里的read()返回的是什么,read(byte[] data)是什么意思,返回的是什么值？"
				}
			]
		},
		{
			"ID": "20220112163601-q4i4osu",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-q4i4osu",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-ccferq6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-ccferq6"
					},
					"Children": [
						{
							"ID": "20220112163601-lducvvo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-lducvvo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "read()返回的是所读取的字节的int型（范围0-255）"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-0u872p9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-0u872p9"
					},
					"Children": [
						{
							"ID": "20220112163601-rmehehu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-rmehehu"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "read（byte [ ] data）将读取的字节储存在这个数组，  返回的就是传入数组参数个数"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-cetmzbp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-cetmzbp",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "17.OutputStream里面的write()是什么意思？write(byte b[], int off, int len)这个方法里面的三个参数分别是什么意思？"
				}
			]
		},
		{
			"ID": "20220112163601-nhx81bg",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-nhx81bg",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-cc6yu9v",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-cc6yu9v"
					},
					"Children": [
						{
							"ID": "20220112163601-24vuup2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-24vuup2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "write将指定字节传入数据源"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-m0wsedv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-m0wsedv"
					},
					"Children": [
						{
							"ID": "20220112163601-e2hizt5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-e2hizt5"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Byte b[ ]是byte数组，b[off]是传入的第一个字符，b[off+len-1]是传入的最后的一个字符 ，len是实际长度"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-tf4ersa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-tf4ersa",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "18.流一般需要不需要关闭？怎么关闭？一般要在那个代码块里面关闭比较好，处理流是怎么关闭的，如果有多个流互相调用传入是怎么关闭的？"
				}
			]
		},
		{
			"ID": "20220112163601-20z4dch",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-20z4dch",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-yo66bha",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-yo66bha"
					},
					"Children": [
						{
							"ID": "20220112163601-zygt312",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-zygt312"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "流一旦打开就必须关闭，要使用close方法关闭，一般放在finally语句块中（finally 语句一定会执行）执行。"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-sb4zdka",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-sb4zdka"
					},
					"Children": [
						{
							"ID": "20220112163601-5ea4go8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-5ea4go8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "多个流互相调用只关闭最外层的流即可。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-4jbjmw8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-4jbjmw8",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "19.用什么把对象动态的写入磁盘中，写入要实现什么接口。"
				}
			]
		},
		{
			"ID": "20220112163601-zg0v3tv",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-zg0v3tv",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-ahtvip7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-ahtvip7"
					},
					"Children": [
						{
							"ID": "20220112163601-i9006d8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-i9006d8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ObjectInputStream，需要实现Serializable接口"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-s2lvmxi",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220112163601-s2lvmxi",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-u6xk1t5",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MjAu",
						"Num": 20
					},
					"Properties": {
						"id": "20220112163601-u6xk1t5"
					},
					"Children": [
						{
							"ID": "20220112163601-in0nxy8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-in0nxy8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "PrintStream、BufferedWriter、PrintWriter的比较?"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-sz6cp7n",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-sz6cp7n",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-iuaig79",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-iuaig79"
					},
					"Children": [
						{
							"ID": "20220112163601-vgkyacb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-vgkyacb"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "PrintStream类的输出功能非常强大，通常如果需要输出文本内容，都应该将输出流包装成PrintStream后进行输出。它还提供其他两项功能。与其他输出流不同，PrintStream 永远不会抛出 IOException；而是，异常情况仅设置可通过 checkError 方法测试的内部标志。另外，为了自动刷新，可以创建一个 PrintStream"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-xvopbot",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-xvopbot"
					},
					"Children": [
						{
							"ID": "20220112163601-h3xjami",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-h3xjami"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "BufferedWriter:将文本写入字符输出流，缓冲各个字符从而提供单个字符，数组和字符串的高效写入。通过write()方法可以将获取到的字符输出，然后通过newLine()进行换行操作。BufferedWriter中的字符流必须通过调用flush方法才能将其刷出去。并且BufferedWriter只能对字符流进行操作。如果要对字节流操作，则使用BufferedInputStream。"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-mf9ug75",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-mf9ug75"
					},
					"Children": [
						{
							"ID": "20220112163601-1nxvj1b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-1nxvj1b"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "PrintWriter的println方法自动添加换行，不会抛异常，若关心异常，需要调用checkError方法看是否有异常发生，PrintWriter构造方法可指定参数，实现自动刷新缓存（autoflush）；"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-80vbudi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-80vbudi",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "21.什么是Filter流"
				}
			]
		},
		{
			"ID": "20220112163601-4uv1wsm",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-4uv1wsm",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-qigv1xx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-qigv1xx"
					},
					"Children": [
						{
							"ID": "20220112163601-lucjzu1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-lucjzu1"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Filter Stream是一种IO流主要作用是用来对存在的流增加一些额外的功能，像给目标文件增加源文件中不存在的行数，或者增加拷贝的性能。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-klqr4o2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-klqr4o2",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "22.有哪些可用的Filter流？"
				}
			]
		},
		{
			"ID": "20220112163601-ub5rl31",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-ub5rl31",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-twr99nj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-twr99nj"
					},
					"Children": [
						{
							"ID": "20220112163601-q12pxeq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-q12pxeq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "LineNumberInputStream给目标文件增加行号"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-9yjvbd2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-9yjvbd2"
					},
					"Children": [
						{
							"ID": "20220112163601-9qsc7k6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-9qsc7k6"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "DataInputStream有些特殊的方法如readInt()，readDouble()和readLine()等可以读取一个int，double和一个string一次性的"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-ppg4oyy",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-ppg4oyy"
					},
					"Children": [
						{
							"ID": "20220112163601-i6muoye",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-i6muoye"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "BufferedInputStream增加性能"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-jhaevql",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-jhaevql"
					},
					"Children": [
						{
							"ID": "20220112163601-7ioxcii",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-7ioxcii"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "PushbackInputStream推送要求的字节到系统中"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-xpwrubi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-xpwrubi",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "23.SequenceInputStream的作用"
				}
			]
		},
		{
			"ID": "20220112163601-ymg1cng",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-ymg1cng",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-u3drc1v",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-u3drc1v"
					},
					"Children": [
						{
							"ID": "20220112163601-ge1wlg4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-ge1wlg4"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这个类的作用是将多个输入流合并成一个输出流，通过SequenceInputStream类包装后形成新的一个总的输入流。在拷贝多个文件到一个目标文件的时候是非常有用的。可以使用很少的代码实现。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-d2own39",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-d2own39",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "24.PrintStream和PrintWriter"
				}
			]
		},
		{
			"ID": "20220112163601-u3lcji0",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-u3lcji0",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-w6pemvp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-w6pemvp"
					},
					"Children": [
						{
							"ID": "20220112163601-p294yv7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-p294yv7"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "它们两个的功能相同，但是属于不同的分类。字节流和字符流，它们都有println()方法。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-vurfify",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-vurfify",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "25.在拷贝的时候，哪一种流能提升更多的性能？"
				}
			]
		},
		{
			"ID": "20220112163601-ds14dn7",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220112163601-ds14dn7",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"ID": "20220112163601-yx3u7wq",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-yx3u7wq"
					},
					"Children": [
						{
							"ID": "20220112163601-jsbesfs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-jsbesfs"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在字节流的时候，使用BufferedInputStream和BufferedOutputStream。"
								}
							]
						}
					]
				},
				{
					"ID": "20220112163601-gn0xa2a",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220112163601-gn0xa2a"
					},
					"Children": [
						{
							"ID": "20220112163601-yrlfvt3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220112163601-yrlfvt3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在字符流的时候，使用BufferedReader和BufferedWriter"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220112163601-7qwqs1g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-7qwqs1g",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "26.RandomAccessFile"
				}
			]
		},
		{
			"ID": "20220112163601-60zb4xx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112163601-60zb4xx",
				"updated": "20220112163601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它在java.io包中是一个特殊的类，既不是输入流也不是输出流，它两者都可以做到。他是Object的直接子类。通常来说，一个流只有一个功能，要么读，要么写。但是RandomAccessFile既可以读文件，也可以写文件。DataInputStream和DataOutStream有的方法，在RandomAccessFile都存在。"
				}
			]
		}
	]
}