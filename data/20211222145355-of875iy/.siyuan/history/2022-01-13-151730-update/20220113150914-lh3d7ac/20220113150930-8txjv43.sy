{
	"ID": "20220113150930-8txjv43",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220113150930-8txjv43",
		"title": "1、Java【OOP思想】",
		"updated": "20220113151358"
	},
	"Children": [
		{
			"ID": "20220113151207-n3cmvm5",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220113151207-n3cmvm5",
				"updated": "20220113151358"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、OOP(Object Oriented Programming)面向对象程序设计"
				}
			]
		},
		{
			"ID": "20220113151219-7gw0bxr",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220113151219-7gw0bxr",
				"updated": "20220113151220"
			},
			"Children": [
				{
					"ID": "20220113151220-z1k0lwh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220113151220-z1k0lwh"
					},
					"Children": [
						{
							"ID": "20220113151220-k0crsyj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113151220-k0crsyj"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "什么是面向对象编程思想？"
								}
							]
						},
						{
							"ID": "20220113151229-mghprch",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20220113151229-mghprch"
							},
							"Children": [
								{
									"ID": "20220113151228-a3a2ufv",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20220113151228-a3a2ufv"
									},
									"Children": [
										{
											"ID": "20220113151228-dikl8xa",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220113151228-dikl8xa"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "万物皆为对象，对象是对现实事物的一种抽象，通过程序来实现对事物的描述。面向对象编程的三大特征：封装、继承和多态。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113151207-39607q0",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220113151207-39607q0",
				"updated": "20220113151234"
			},
			"Children": [
				{
					"ID": "20220113151222-u8swe1u",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220113151222-u8swe1u",
						"updated": "20220113151234"
					},
					"Children": [
						{
							"ID": "20220113151222-ze3ei0u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113151222-ze3ei0u"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "封装"
								}
							]
						},
						{
							"ID": "20220113151234-9bkzxqj",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20220113151234-9bkzxqj",
								"updated": "20220113151234"
							},
							"Children": [
								{
									"ID": "20220113151234-t2gfeg5",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20220113151234-t2gfeg5"
									},
									"Children": [
										{
											"ID": "20220113151234-7mal81d",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220113151234-7mal81d"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "封装，将对象的属性和行为进行封装，而将对象的属性和行为进行封装的载体就是类。封装可以隐藏程序内部的具体实现，只提供外部对数据访问的接口，提高程序的可靠性。"
												}
											]
										}
									]
								},
								{
									"ID": "20220113151238-2idygzj",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20220113151238-2idygzj"
									},
									"Children": [
										{
											"ID": "20220113151238-q6461t3",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220113151238-q6461t3"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "特点：提高代码的可维护性"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113151207-fisdo88",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220113151207-fisdo88",
				"updated": "20220113151329"
			},
			"Children": [
				{
					"ID": "20220113151223-hbbn892",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20220113151223-hbbn892",
						"updated": "20220113151329"
					},
					"Children": [
						{
							"ID": "20220113151223-kuepflm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113151223-kuepflm"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "继承"
								}
							]
						},
						{
							"ID": "20220113151242-0tzezcw",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20220113151242-0tzezcw",
								"updated": "20220113151329"
							},
							"Children": [
								{
									"ID": "20220113151241-gvzyrkr",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20220113151241-gvzyrkr"
									},
									"Children": [
										{
											"ID": "20220113151241-wrj69fv",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220113151241-wrj69fv"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "继承，在已有对象的属性和行为的基础上派生新的子类，子类不但可以拥有父类的属性和行为，还可以在此基础上进行扩展，拥有自身的特殊属性和行为。"
												}
											]
										}
									]
								},
								{
									"ID": "20220113151244-w74qil1",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20220113151244-w74qil1"
									},
									"Children": [
										{
											"ID": "20220113151244-z5xb42e",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220113151244-z5xb42e"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "衍生问题：抽象类和接口的区别？"
												}
											]
										},
										{
											"ID": "20220113151254-71vnpka",
											"Type": "NodeList",
											"ListData": {
												"Typ": 1
											},
											"Properties": {
												"id": "20220113151254-71vnpka"
											},
											"Children": [
												{
													"ID": "20220113151254-56o0t6c",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "MS4=",
														"Num": 1
													},
													"Properties": {
														"id": "20220113151254-56o0t6c"
													},
													"Children": [
														{
															"ID": "20220113151254-ozps4rg",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20220113151254-ozps4rg"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "抽象类属于单继承，能声明方法也可以具体的实现方法。"
																}
															]
														}
													]
												},
												{
													"ID": "20220113151257-ftsr98v",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "Mi4=",
														"Num": 2
													},
													"Properties": {
														"id": "20220113151257-ftsr98v"
													},
													"Children": [
														{
															"ID": "20220113151257-2uzemh0",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20220113151257-2uzemh0"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "接口属于多继承，只能声明方法，而没有方法体。"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20220113151316-fedmb0h",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20220113151316-fedmb0h",
										"updated": "20220113151329"
									},
									"Children": [
										{
											"ID": "20220113151316-7th8t6w",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220113151316-7th8t6w",
												"updated": "20220113151329"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "特点：实现抽象，提高代码复用性。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113151207-zhav9em",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220113151207-zhav9em",
				"updated": "20220113151342"
			},
			"Children": [
				{
					"ID": "20220113151225-zj9fne4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20220113151225-zj9fne4",
						"updated": "20220113151342"
					},
					"Children": [
						{
							"ID": "20220113151225-lecih6r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113151225-lecih6r"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "多态"
								}
							]
						},
						{
							"ID": "20220113151342-9z1c1xv",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20220113151342-9z1c1xv",
								"updated": "20220113151342"
							},
							"Children": [
								{
									"ID": "20220113151342-ueevdr9",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20220113151342-ueevdr9"
									},
									"Children": [
										{
											"ID": "20220113151342-4fvxjrv",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220113151342-4fvxjrv"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "多态，同一实现接口，使用不同的对象实例执行不同的操作。"
												}
											]
										}
									]
								},
								{
									"ID": "20220113151345-koxizdj",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20220113151345-koxizdj"
									},
									"Children": [
										{
											"ID": "20220113151345-vkspta7",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220113151345-vkspta7"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "特点：增强代码的可维护性和可扩展性。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		}
	]
}