{
	"ID": "20220124163039-5tzn59y",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220124163039-5tzn59y",
		"title": "10、Java_创建对象的几种方式\u0026amp;final 、finally、finalize区别",
		"updated": "20220124163854"
	},
	"Children": [
		{
			"ID": "20220124163116-wm35509",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220124163116-wm35509",
				"updated": "20220124163119"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、Java 创建对象的几种方式。"
				}
			]
		},
		{
			"ID": "20220124163116-q72j5rk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124163116-q72j5rk",
				"updated": "20220124163116"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、用new 语句创建对象、最常用的创建对象方式。"
				}
			]
		},
		{
			"ID": "20220124163116-fvha2do",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124163116-fvha2do",
				"updated": "20220124163116"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、运用反射手段、调用java.lang.Class或者java.lang.reflect.Constructor的newInstance方法。"
				}
			]
		},
		{
			"ID": "20220124163116-zvjfi27",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124163116-zvjfi27",
				"updated": "20220124163116"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、调用对象的clone方法。"
				}
			]
		},
		{
			"ID": "20220124163116-u3yqugz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124163116-u3yqugz",
				"updated": "20220124163116"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4、运用反序列化， 调用java.io.ObjectInputStream对象的 readObject()方法。"
				}
			]
		},
		{
			"ID": "20220124163142-6rga0k7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124163142-6rga0k7",
				"updated": "20220124163142"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意："
				}
			]
		},
		{
			"ID": "20220124163142-aa4lq9x",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220124163142-aa4lq9x",
				"updated": "20220124163259"
			},
			"Children": [
				{
					"ID": "20220124163147-ure7b9p",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220124163147-ure7b9p",
						"updated": "20220124163259"
					},
					"Children": [
						{
							"ID": "20220124163147-ylf2441",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124163147-ylf2441",
								"updated": "20220124163259"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "(1)和(2)都会明确的显式的"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "调用构造函数"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " ；"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220124163142-kb98h0x",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220124163142-kb98h0x",
				"updated": "20220124163251"
			},
			"Children": [
				{
					"ID": "20220124163150-oerippu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220124163150-oerippu",
						"updated": "20220124163251"
					},
					"Children": [
						{
							"ID": "20220124163150-r65biei",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124163150-r65biei",
								"updated": "20220124163251"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "(3)是在内存上对已有对象的影印，所以"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "不会调用构造函数"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " ；"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220124163142-mdfzv69",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220124163142-mdfzv69",
				"updated": "20220124163256"
			},
			"Children": [
				{
					"ID": "20220124163153-j37zu1q",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220124163153-j37zu1q",
						"updated": "20220124163256"
					},
					"Children": [
						{
							"ID": "20220124163153-3f0ukg5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124163153-3f0ukg5",
								"updated": "20220124163256"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "(4)是从"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "文件中还原类的对象"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，也"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "不会调用构造函数"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220124163121-noomppi",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220124163121-noomppi",
				"updated": "20220124163131"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二、final 、finally、finalize区别"
				}
			]
		},
		{
			"ID": "20220124163156-r8kz1ws",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220124163156-r8kz1ws",
				"updated": "20220124163854"
			},
			"Children": [
				{
					"ID": "20220124163310-8syp1mj",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220124163310-8syp1mj",
						"updated": "20220124163854"
					},
					"Children": [
						{
							"ID": "20220124163310-lr5px3g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124163310-lr5px3g",
								"updated": "20220124163314"
							},
							"Children": [
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "final"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								}
							]
						},
						{
							"ID": "20220124163326-511lrsj",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20220124163326-511lrsj",
								"updated": "20220124163854"
							},
							"Children": [
								{
									"ID": "20220124163326-ea7gnk5",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20220124163326-ea7gnk5"
									},
									"Children": [
										{
											"ID": "20220124163326-f3sfz3b",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220124163326-f3sfz3b",
												"updated": "20220124163421"
											},
											"Children": [
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "修饰类时"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "：当用final修饰类的时，表明"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "该类不能被其他类所继承"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "。当我们需要让一个类永远不被继承，此时就可以用final修饰，但要注意：final类中所有的成员方法都会隐式的定义为final方法。"
												}
											]
										}
									]
								},
								{
									"ID": "20220124163327-nclb5p9",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20220124163327-nclb5p9"
									},
									"Children": [
										{
											"ID": "20220124163327-9uqulyc",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220124163327-9uqulyc",
												"updated": "20220124163423"
											},
											"Children": [
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "修饰方法时"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "：使用final方法的原因主要有两个： "
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "把方法锁定"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "，以"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "防止继承类对其进行更改"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "。"
												}
											]
										}
									]
								},
								{
									"ID": "20220124163415-8twsrre",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20220124163415-8twsrre",
										"updated": "20220124163854"
									},
									"Children": [
										{
											"ID": "20220124163415-2d4mkl3",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220124163415-2d4mkl3",
												"updated": "20220124163429"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "修饰变量时:"
												}
											]
										},
										{
											"ID": "20220124163440-hx3474j",
											"Type": "NodeList",
											"ListData": {
												"Typ": 1
											},
											"Properties": {
												"id": "20220124163440-hx3474j",
												"updated": "20220124163854"
											},
											"Children": [
												{
													"ID": "20220124163440-etine5s",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "MS4=",
														"Num": 1
													},
													"Properties": {
														"id": "20220124163440-etine5s"
													},
													"Children": [
														{
															"ID": "20220124163440-0l22p3q",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20220124163440-0l22p3q",
																"updated": "20220124163455"
															},
															"Children": [
																{
																	"Type": "NodeMark",
																	"Data": "mark",
																	"Children": [
																		{
																			"Type": "NodeMark2OpenMarker"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "final成员变量表示常量，只能被赋值一次，赋值后其值不再改变。类似于C++中的const。当final修饰一个基本数据类型时，表示该基本数据类型的值一旦在初始化后便不能发生变化；如果final修饰一个引用类型时，则在对其初始化之后便不能再让其指向其他对象了，但该引用所指向的对象的内容是可以发生变化的。本质上是一回事，因为引用的值是一个地址，final要求值，即地址的值不发生变化。"
																		},
																		{
																			"Type": "NodeMark2CloseMarker"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"ID": "20220124163441-tvq7von",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "Mi4=",
														"Num": 2
													},
													"Properties": {
														"id": "20220124163441-tvq7von",
														"updated": "20220124163854"
													},
													"Children": [
														{
															"ID": "20220124163441-3tik40l",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20220124163441-3tik40l",
																"updated": "20220124163511"
															},
															"Children": [
																{
																	"Type": "NodeStrong",
																	"Data": "strong",
																	"Children": [
																		{
																			"Type": "NodeStrongA6kOpenMarker",
																			"Data": "**"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "final修饰一个成员变量（属性），必须要显示初始化。"
																		},
																		{
																			"Type": "NodeStrongA6kCloseMarker",
																			"Data": "**"
																		}
																	]
																},
																{
																	"Type": "NodeText",
																	"Data": "这里有两种初始化方式，"
																}
															]
														},
														{
															"ID": "20220124163839-6mrunde",
															"Type": "NodeList",
															"ListData": {
																"Typ": 1
															},
															"Properties": {
																"id": "20220124163839-6mrunde",
																"updated": "20220124163854"
															},
															"Children": [
																{
																	"ID": "20220124163839-rrzv01a",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "MS4=",
																		"Num": 1
																	},
																	"Properties": {
																		"id": "20220124163839-rrzv01a"
																	},
																	"Children": [
																		{
																			"ID": "20220124163839-659igvo",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20220124163839-659igvo"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "一种是在变量声明的时候初始化；"
																				}
																			]
																		}
																	]
																},
																{
																	"ID": "20220124163844-vii1d7p",
																	"Type": "NodeListItem",
																	"ListData": {
																		"Typ": 1,
																		"Delimiter": 46,
																		"Marker": "Mi4=",
																		"Num": 2
																	},
																	"Properties": {
																		"id": "20220124163844-vii1d7p",
																		"updated": "20220124163854"
																	},
																	"Children": [
																		{
																			"ID": "20220124163844-3vd92v2",
																			"Type": "NodeParagraph",
																			"Properties": {
																				"id": "20220124163844-3vd92v2",
																				"updated": "20220124163854"
																			},
																			"Children": [
																				{
																					"Type": "NodeText",
																					"Data": "第二种方法是在声明变量的时候不赋初值，但是要在这个变量所在的类的所有的构造函数中对"
																				},
																				{
																					"Type": "NodeStrong",
																					"Data": "strong",
																					"Children": [
																						{
																							"Type": "NodeStrongA6kOpenMarker",
																							"Data": "**"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "这个变量赋初值"
																						},
																						{
																							"Type": "NodeStrongA6kCloseMarker",
																							"Data": "**"
																						}
																					]
																				},
																				{
																					"Type": "NodeText",
																					"Data": "。"
																				},
																				{
																					"Type": "NodeStrong",
																					"Data": "strong",
																					"Children": [
																						{
																							"Type": "NodeStrongA6kOpenMarker",
																							"Data": "**"
																						},
																						{
																							"Type": "NodeText",
																							"Data": "当函数的参数类型声明为final时，说明该参数是只读型的。即你可以读取使用该参数，但是无法改变该参数的值。"
																						},
																						{
																							"Type": "NodeStrongA6kCloseMarker",
																							"Data": "**"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220124163314-7bhqu0a",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220124163314-7bhqu0a",
				"updated": "20220124163629"
			},
			"Children": [
				{
					"ID": "20220124163515-gpmqt6q",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220124163515-gpmqt6q"
					},
					"Children": [
						{
							"ID": "20220124163515-k23sqsv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124163515-k23sqsv",
								"updated": "20220124163555"
							},
							"Children": [
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "finally"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								}
							]
						},
						{
							"ID": "20220124163523-lvn8a7w",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20220124163523-lvn8a7w"
							},
							"Children": [
								{
									"ID": "20220124163523-4svl8cu",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20220124163523-4svl8cu"
									},
									"Children": [
										{
											"ID": "20220124163523-81vsh5p",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220124163523-81vsh5p",
												"updated": "20220124163544"
											},
											"Children": [
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "finally作为异常处理的一部分，它只能用在try/catch语句中，并且附带一个语句块，表示这段语句最终一定会被执行（不管有没有抛出异常），经常被用在需要释放资源的情况下。"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20220124163545-9ojuoe4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20220124163545-9ojuoe4",
						"updated": "20220124163629"
					},
					"Children": [
						{
							"ID": "20220124163545-i0adkqk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124163545-i0adkqk",
								"updated": "20220124163557"
							},
							"Children": [
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "finalize"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								}
							]
						},
						{
							"ID": "20220124163558-t2gy8eg",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20220124163558-t2gy8eg",
								"updated": "20220124163629"
							},
							"Children": [
								{
									"ID": "20220124163557-b88008k",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20220124163557-b88008k",
										"updated": "20220124163629"
									},
									"Children": [
										{
											"ID": "20220124163612-0l1evka",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220124163612-0l1evka"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "finalize()是在java.lang.Object里定义的，也就是说每一个对象都有这么个方法。这个方法在gc启动，该对象被回收的时候被调用。其实gc可以回收大部分的对象（凡是new出来的对象，gc都能搞定，一般情况下我们又不会用new以外的方式去创建对象），所以一般是不需要程序员去实现finalize的。"
												}
											]
										},
										{
											"ID": "20220124163612-8b4mvrn",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220124163612-8b4mvrn",
												"updated": "20220124163629"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "特殊情况下，需要程序员实现finalize，当对象被回收的时候释放一些资源，比如：一个socket链接，在对象初始化时创建，整个生命周期内有效，那么就需要实现finalize，关闭这个链接。"
												}
											]
										},
										{
											"ID": "20220124163627-171rvxj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220124163627-171rvxj",
												"updated": "20220124163627"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使用finalize还需要注意一个事，调用super.finalize();"
												}
											]
										},
										{
											"ID": "20220124163627-26lkiur",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220124163627-26lkiur",
												"updated": "20220124163627"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "    一个对象的finalize()方法只会被调用一次，而且finalize()被调用不意味着gc会立即回收该对象，所以有可能调用finalize()后，该对象又不需要被回收了，然后到了真正要被回收的时候，因为前面调用过一次，所以不会调用finalize()，产生问题。 所以，推荐不要使用finalize()方法，它跟析构函数不一样"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220124163541-947ch1f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124163541-947ch1f",
				"updated": "20220124163541"
			}
		}
	]
}