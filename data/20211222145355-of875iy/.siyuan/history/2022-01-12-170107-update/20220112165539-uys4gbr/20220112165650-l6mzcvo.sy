{
	"ID": "20220112165650-l6mzcvo",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220112165650-l6mzcvo",
		"title": "Java之排序基本算法",
		"updated": "20220112165716"
	},
	"Children": [
		{
			"ID": "20220112165708-62nkq12",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112165708-62nkq12",
				"updated": "20220112165709"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、冒泡排序"
				}
			]
		},
		{
			"ID": "20220112165650-gw84g73",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220112165650-gw84g73",
				"updated": "20220112165714"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\nprivate int[] sort(int[] arr){\n    int n = arr.length;\n    for (int i = 0 ; i \u003c n ; i++){\n        for (int k = 1 ; k \u003c n - i ; k ++){\n            if (arr[k] \u003c arr[k - 1]) {//前面的数字大于后面的数字就交换\n            //交换a[j-1]和a[j]\n            int temp;\n            temp = arr[k];\n            arr[k] = arr[k - 1];\n            arr[k - 1] = temp;\n            }\n        }\n    }\nreturn arr;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220112165715-8q8pofd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112165715-8q8pofd",
				"updated": "20220112165716"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二、快速排序:https://juejin.im/post/5b55660ee51d4519202e2003"
				}
			]
		},
		{
			"ID": "20220112165716-wxzpvdz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220112165716-wxzpvdz",
				"updated": "20220112165716"
			}
		}
	]
}