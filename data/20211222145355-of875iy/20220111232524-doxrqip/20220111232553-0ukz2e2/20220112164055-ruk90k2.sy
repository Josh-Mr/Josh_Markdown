{
	"ID": "20220112164055-ruk90k2",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220112164055-ruk90k2",
		"title": "【OutputStreamWriter\u0026amp;InputStreamReader】例子",
		"updated": "20220112164104"
	},
	"Children": [
		{
			"ID": "20220112164055-j46nsqz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220112164055-j46nsqz",
				"updated": "20220112164057"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class CharTransferByteDemo {\n    public static void main(String[] args) {\n        try {\n            // 读取文件\n            InputStream inputStream = new BufferedInputStream(new FileInputStream(new File(\"file_url.properties\")));\n            InputStreamReader inputStreamReader = new InputStreamReader(inputStream, Charset.forName(\"UTF-8\"));\n            BufferedReader bufferedReader  = new BufferedReader(inputStreamReader);\n\n\n            // 写文件\n            OutputStream outputStream = new BufferedOutputStream(new FileOutputStream(\"transfer.properties\"));\n            OutputStreamWriter outputStreamWriter = new OutputStreamWriter(outputStream);\n            BufferedWriter bufferedWriter = new BufferedWriter(outputStreamWriter);\n\n\n            String len;\n            while ((len = bufferedReader.readLine()) != null){\n                bufferedWriter.write(len);\n                bufferedWriter.write(\"\\n\");\n            }\n            bufferedReader.close();\n            inputStreamReader.close();\n            bufferedWriter.close();\n            outputStream.close();\n\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}