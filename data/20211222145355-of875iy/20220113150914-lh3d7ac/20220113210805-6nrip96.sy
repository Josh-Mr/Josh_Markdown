{
	"ID": "20220113210805-6nrip96",
	"Type": "NodeDocument",
	"Properties": {
		"icon": "1f4dd",
		"id": "20220113210805-6nrip96",
		"title": "9、Java【String类源码】",
		"updated": "20220113214305"
	},
	"Children": [
		{
			"ID": "20220113210817-gyxl7jp",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220113210817-gyxl7jp",
				"updated": "20220113214245"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、相等性的比较（==）"
				}
			]
		},
		{
			"ID": "20220113210817-c6ffnht",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220113210817-c6ffnht",
				"updated": "20220113210817"
			},
			"Children": [
				{
					"ID": "20220113210817-j71xhux",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113210817-j71xhux"
					},
					"Children": [
						{
							"ID": "20220113210817-47m7v2e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113210817-47m7v2e"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于原生数据类型：比较左右两边的值是否相等。"
								}
							]
						}
					]
				},
				{
					"ID": "20220113210817-xytz5vi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113210817-xytz5vi"
					},
					"Children": [
						{
							"ID": "20220113210817-12y4imi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113210817-12y4imi"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于引用类型：左右两边的引用是否指向同一个对象，既是左右两边的引用（地址）是否相同。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113210817-w2ubipk",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220113210817-w2ubipk",
				"updated": "20220113214247"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二、equals 方法。"
				}
			]
		},
		{
			"ID": "20220113210817-mq5y6bu",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220113210817-mq5y6bu",
				"updated": "20220113210817"
			},
			"Children": [
				{
					"ID": "20220113210817-6jqrogz",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113210817-6jqrogz"
					},
					"Children": [
						{
							"ID": "20220113210817-4myvvvn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113210817-4myvvvn"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在object类时，equals()方法等价于“==”，判断两个引用是否指向同一个对象。"
								}
							]
						}
					]
				},
				{
					"ID": "20220113210817-3op8psg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113210817-3op8psg"
					},
					"Children": [
						{
							"ID": "20220113210817-9dnwzly",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113210817-9dnwzly"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在string类时，判断当前的字符串与传进来的字符串的内容是否一致。(String类重写了equals方法)"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113210817-saxnpwf",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220113210817-saxnpwf",
				"updated": "20220113214250"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "三、String s = \"aaa\";（采用字面值方式赋值）---什么是String Pool（字符串池）？jdk1.8字符串池已经放在堆中了"
				}
			]
		},
		{
			"ID": "20220113210817-8wxj1sm",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220113210817-8wxj1sm",
				"updated": "20220113210817"
			},
			"Children": [
				{
					"ID": "20220113210817-bifme7y",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113210817-bifme7y"
					},
					"Children": [
						{
							"ID": "20220113210817-2quzy5k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113210817-2quzy5k"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "查找String Pool中是否存在“aaa”这个对象，如果不存在，则在String Pool 中创建一个“aaa”"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113210817-x7zx50q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113210817-x7zx50q",
				"updated": "20220113210817"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "的对象，这样s会指向String Pool 中的这个“aaa”字符串对象。"
				}
			]
		},
		{
			"ID": "20220113210817-uchbfu6",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220113210817-uchbfu6",
				"updated": "20220113210817"
			},
			"Children": [
				{
					"ID": "20220113210817-o7xb6kl",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113210817-o7xb6kl"
					},
					"Children": [
						{
							"ID": "20220113210817-jrnizo8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113210817-jrnizo8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果存在，则不创建任何人对象，直接将String Pool 中的这个“aaa”对象的地址返回来，赋给s"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113210817-uydwwz0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113210817-uydwwz0",
				"updated": "20220113210817"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "引用。"
				}
			]
		},
		{
			"ID": "20220113210817-u7nwa6r",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220113210817-u7nwa6r",
				"updated": "20220113214254"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "四、String s = new String(\"aaa\");"
				}
			]
		},
		{
			"ID": "20220113210817-s0y94kx",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220113210817-s0y94kx",
				"updated": "20220113210817"
			},
			"Children": [
				{
					"ID": "20220113210817-q70slxi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113210817-q70slxi"
					},
					"Children": [
						{
							"ID": "20220113210817-ujjdxgo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113210817-ujjdxgo"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "首先在String Pool 中查找有没有“aaa”这个字符串对象？"
								}
							]
						},
						{
							"ID": "20220113210817-m3d3nhw",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20220113210817-m3d3nhw"
							},
							"Children": [
								{
									"ID": "20220113210817-nm0egh7",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20220113210817-nm0egh7"
									},
									"Children": [
										{
											"ID": "20220113210817-wuzjwi1",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220113210817-wuzjwi1"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果有，则不在String Pool 中再去创建“aaa”这个“aaa”对象了，直接在堆中（heap）中创建个“aaa”字符串对象，然后将堆中的这个“aaa”对象的之地返回来，赋给s引用，导致s指向了堆中创建的这个\"aaa\"字符串对象。"
												}
											]
										}
									]
								},
								{
									"ID": "20220113210817-j21l0j4",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20220113210817-j21l0j4"
									},
									"Children": [
										{
											"ID": "20220113210817-ralv2fm",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220113210817-ralv2fm"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果没有，则首先在String Pool 中创建一个“aaa”对象，然后再在堆中（heap）创建一个“aaa”对象，然后将堆中的这个“aaa”对象的地址返回来，赋给s引用，导致s指向堆中所创建的这个“aaa”对象。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113210817-e9sqqrg",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220113210817-e9sqqrg",
				"updated": "20220113214259"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "五、String 的intern();"
				}
			]
		},
		{
			"ID": "20220113210817-vcalxti",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220113210817-vcalxti",
				"updated": "20220113210817"
			},
			"Children": [
				{
					"ID": "20220113210817-wa3rlko",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113210817-wa3rlko"
					},
					"Children": [
						{
							"ID": "20220113210817-lucf3li",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113210817-lucf3li"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "作用是先到缓存中(也就是常量池中)查询当前对象是否存在?"
								}
							]
						},
						{
							"ID": "20220113210817-j9r6s3g",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20220113210817-j9r6s3g"
							},
							"Children": [
								{
									"ID": "20220113210817-d75m4ca",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20220113210817-d75m4ca"
									},
									"Children": [
										{
											"ID": "20220113210817-qmyv9ll",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220113210817-qmyv9ll"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "存在就返回常量池中地址。"
												}
											]
										}
									]
								},
								{
									"ID": "20220113210817-qqg07op",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20220113210817-qqg07op"
									},
									"Children": [
										{
											"ID": "20220113210817-y0rm4dc",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220113210817-y0rm4dc"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "不存在就加入常量池。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113210840-0ogdqhz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220113210840-0ogdqhz",
				"updated": "20220113214239"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "例子：\nstring s = \"a\";\nstring s1 = new Stirng (\"a\");\ns == s1 //fasle\nstring s2 = new string (\"a\").intern;\ns == s2 //true\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220113210817-kuf2b43",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220113210817-kuf2b43",
				"updated": "20220113214302"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "六、==与 equals 的区别"
				}
			]
		},
		{
			"ID": "20220113210817-oyups6r",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220113210817-oyups6r",
				"updated": "20220113210817"
			},
			"Children": [
				{
					"ID": "20220113210817-x80gmya",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113210817-x80gmya"
					},
					"Children": [
						{
							"ID": "20220113210817-zyhleg0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113210817-zyhleg0"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于基本类型来说，== 比较的是值是否相等；"
								}
							]
						}
					]
				},
				{
					"ID": "20220113210817-bgyz0jj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113210817-bgyz0jj"
					},
					"Children": [
						{
							"ID": "20220113210817-4vr20re",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113210817-4vr20re"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于引用类型来说，== 比较的是两个引用是否指向同一个对象地址（两者在内存中存放的地址（堆内存地址）是否指向同一个地方）；"
								}
							]
						}
					]
				},
				{
					"ID": "20220113210817-y2twp7g",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113210817-y2twp7g"
					},
					"Children": [
						{
							"ID": "20220113210817-ugzzrtx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113210817-ugzzrtx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于引用类型（包括包装类型）来说，equals 如果没有被重写，对比它们的地址是否相等；如果 equals()方法被重写（例如 String），则比较的是地址里的内容。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113210913-i0c4lvo",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20220113210913-i0c4lvo",
				"updated": "20220113214305"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "七、字符串常量池"
				}
			]
		},
		{
			"ID": "20220113210913-1pi66z0",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220113210913-1pi66z0",
				"updated": "20220113210913"
			},
			"Children": [
				{
					"ID": "20220113210913-82z5yme",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113210913-82z5yme"
					},
					"Children": [
						{
							"ID": "20220113210913-pqm781w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113210913-pqm781w"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1、字符串赋值的方式"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113210913-s1lkn5c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113210913-s1lkn5c",
				"updated": "20220113210924"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Image-20220113210924-as7zwy6.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220113210913-rwo01ci",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113210913-rwo01ci",
				"updated": "20220113210942"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Image-20220113210942-3xicaan.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220113210913-6wve64d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113210913-6wve64d",
				"updated": "20220113210913"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、new String() 新增对象的方式"
				}
			]
		},
		{
			"ID": "20220113210913-zjefeki",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20220113210913-zjefeki",
				"updated": "20220113210913"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第一种情况，字符串常量池之前已经存在相同字符串"
				}
			]
		},
		{
			"ID": "20220113210913-wtuub48",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220113210913-wtuub48",
				"updated": "20220113210913"
			},
			"Children": [
				{
					"ID": "20220113210913-w51f1ln",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220113210913-w51f1ln"
					},
					"Children": [
						{
							"ID": "20220113210913-99t6yoh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220113210913-99t6yoh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "比如在使用 new 之前，已经用字面量声明的方式声明了一个变量，此时字符串常量池中已经存在了相同内容的字符串常量。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220113210913-1eapg1h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113210913-1eapg1h",
				"updated": "20220113210913"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、首先会在堆中创建一个 s2 变量的对象引用；"
				}
			]
		},
		{
			"ID": "20220113210913-6j017ty",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113210913-6j017ty",
				"updated": "20220113210913"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、然后将这个对象引用指向字符串常量池中的已经存在的常量；"
				}
			]
		},
		{
			"ID": "20220113210913-l2njp9h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113210913-l2njp9h",
				"updated": "20220113211004"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Image-20220113211004-z9sxp1c.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220113210913-hip2z47",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20220113210913-hip2z47",
				"updated": "20220113210913"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第二种情况，字符串常量池中不存在相同内容的常量"
				}
			]
		},
		{
			"ID": "20220113210913-089hjqh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113210913-089hjqh",
				"updated": "20220113210913"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "之前没有任何地方用到了这个字符串，第一次声明这个字符串就用的是 new String() 的方式，这种情况下会直接在堆中创建一个字符串对象然后返回给变量"
				}
			]
		},
		{
			"ID": "20220113210913-1wmg2zb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113210913-1wmg2zb",
				"updated": "20220113211015"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Image-20220113211015-oxoti48.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220113210913-i3ppbkt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113210913-i3ppbkt",
				"updated": "20220113210913"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、intern() 池化"
				}
			]
		},
		{
			"ID": "20220113210913-hxr9a1j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113210913-hxr9a1j",
				"updated": "20220113211023"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Image-20220113211023-1ot6pp8.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220113210913-ks4afs4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113210913-ks4afs4",
				"updated": "20220113211029"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Image-20220113211029-oay0ckl.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220113210913-xifm4qk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220113210913-xifm4qk",
				"updated": "20220113211036"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Image-20220113211036-mvj88xt.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		}
	]
}