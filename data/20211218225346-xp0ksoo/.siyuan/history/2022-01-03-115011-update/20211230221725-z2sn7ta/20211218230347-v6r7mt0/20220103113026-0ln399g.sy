{
	"ID": "20220103113026-0ln399g",
	"Type": "NodeDocument",
	"Properties": {
		"icon": "1f4dd",
		"id": "20220103113026-0ln399g",
		"title": "Jedis详解",
		"updated": "20220103114838"
	},
	"Children": [
		{
			"ID": "20220103113026-ci0hdve",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20220103113026-ci0hdve",
				"updated": "20220103113132"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、简介"
				}
			]
		},
		{
			"ID": "20220103113133-ampxq0l",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220103113133-ampxq0l",
				"updated": "20220103113906"
			},
			"Children": [
				{
					"ID": "20220103113134-3u35yt0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220103113134-3u35yt0"
					},
					"Children": [
						{
							"ID": "20220103113134-y0yl7bs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220103113134-y0yl7bs",
								"updated": "20220103113202"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Jedis是redis官方推荐的redis连接开发工具。"
								}
							]
						}
					]
				},
				{
					"ID": "20220103113206-lsvht8g",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220103113206-lsvht8g",
						"updated": "20220103113906"
					},
					"Children": [
						{
							"ID": "20220103113206-0w0ppj6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220103113206-0w0ppj6",
								"updated": "20220103113247"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "与Springboot集成的lettuce相比："
								}
							]
						},
						{
							"ID": "20220103113243-5f77j4t",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20220103113243-5f77j4t",
								"updated": "20220103113906"
							},
							"Children": [
								{
									"ID": "20220103113243-2z1us2e",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20220103113243-2z1us2e"
									},
									"Children": [
										{
											"ID": "20220103113243-1sizmop",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220103113243-1sizmop",
												"updated": "20220103113808"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Jedis："
												}
											]
										},
										{
											"ID": "20220103113811-7gq0szc",
											"Type": "NodeList",
											"ListData": {
												"Typ": 1
											},
											"Properties": {
												"id": "20220103113811-7gq0szc",
												"updated": "20220103113819"
											},
											"Children": [
												{
													"ID": "20220103113819-pyuw7om",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "MS4=",
														"Num": 1
													},
													"Properties": {
														"id": "20220103113819-pyuw7om"
													},
													"Children": [
														{
															"ID": "20220103113819-4jnsj2r",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20220103113819-4jnsj2r",
																"updated": "20220103113846"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "当多线程使用同一个连接时，是"
																},
																{
																	"Type": "NodeStrong",
																	"Data": "strong",
																	"Children": [
																		{
																			"Type": "NodeStrongA6kOpenMarker",
																			"Data": "**"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "线程不安全的"
																		},
																		{
																			"Type": "NodeStrongA6kCloseMarker",
																			"Data": "**"
																		}
																	]
																},
																{
																	"Type": "NodeText",
																	"Data": "。所以要使用连接池，为每个jedis实例分配一个连接。"
																}
															]
														}
													]
												}
											]
										},
										{
											"ID": "20220103113824-z4c7u4n",
											"Type": "NodeList",
											"ListData": {
												"Typ": 1
											},
											"Properties": {
												"id": "20220103113824-z4c7u4n",
												"updated": "20220103113835"
											},
											"Children": [
												{
													"ID": "20220103113835-n4bs314",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "Mi4=",
														"Num": 2
													},
													"Properties": {
														"id": "20220103113835-n4bs314"
													},
													"Children": [
														{
															"ID": "20220103113835-f886ay5",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20220103113835-f886ay5"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "客户端连接方式是基于tcp的阻塞式连接方式。"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"ID": "20220103113641-hf6b1ul",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20220103113641-hf6b1ul",
										"updated": "20220103113906"
									},
									"Children": [
										{
											"ID": "20220103113641-do6sdb3",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220103113641-do6sdb3",
												"updated": "20220103113704"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "lettuce："
												}
											]
										},
										{
											"ID": "20220103113850-4tklhpz",
											"Type": "NodeList",
											"ListData": {
												"Typ": 1
											},
											"Properties": {
												"id": "20220103113850-4tklhpz",
												"updated": "20220103113906"
											},
											"Children": [
												{
													"ID": "20220103113854-92uqvxl",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "MS4=",
														"Num": 1
													},
													"Properties": {
														"id": "20220103113854-92uqvxl"
													},
													"Children": [
														{
															"ID": "20220103113854-ala717b",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20220103113854-ala717b"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "客户端连接方式是基于"
																},
																{
																	"Type": "NodeStrong",
																	"Data": "strong",
																	"Children": [
																		{
																			"Type": "NodeStrongA6kOpenMarker",
																			"Data": "**"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "netty"
																		},
																		{
																			"Type": "NodeStrongA6kCloseMarker",
																			"Data": "**"
																		}
																	]
																},
																{
																	"Type": "NodeText",
																	"Data": "的多路复用异步非阻塞的连接方案。（目前业界解决高并发大数据的问题的思路）"
																}
															]
														}
													]
												},
												{
													"ID": "20220103113856-0ogehte",
													"Type": "NodeListItem",
													"ListData": {
														"Typ": 1,
														"Delimiter": 46,
														"Marker": "Mi4=",
														"Num": 2
													},
													"Properties": {
														"id": "20220103113856-0ogehte",
														"updated": "20220103113906"
													},
													"Children": [
														{
															"ID": "20220103113856-yjey4lx",
															"Type": "NodeParagraph",
															"Properties": {
																"id": "20220103113856-yjey4lx",
																"updated": "20220103113906"
															},
															"Children": [
																{
																	"Type": "NodeText",
																	"Data": "当多线程使用同一连接实例时，是"
																},
																{
																	"Type": "NodeStrong",
																	"Data": "strong",
																	"Children": [
																		{
																			"Type": "NodeStrongA6kOpenMarker",
																			"Data": "**"
																		},
																		{
																			"Type": "NodeText",
																			"Data": "线程安全"
																		},
																		{
																			"Type": "NodeStrongA6kCloseMarker",
																			"Data": "**"
																		}
																	]
																},
																{
																	"Type": "NodeText",
																	"Data": "的。"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220103113439-1glgsxg",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20220103113439-1glgsxg",
				"updated": "20220103113947"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二、基本使用"
				}
			]
		},
		{
			"ID": "20220103113947-s5xhuf5",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220103113947-s5xhuf5",
				"updated": "20220103114652"
			},
			"Children": [
				{
					"ID": "20220103113951-vd9urcf",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220103113951-vd9urcf",
						"updated": "20220103114652"
					},
					"Children": [
						{
							"ID": "20220103113951-3a6hz0u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220103113951-3a6hz0u",
								"updated": "20220103114652"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "Maven导入"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220103114005-ks7muoz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220103114005-ks7muoz",
				"updated": "20220103114025"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cdependency\u003e\n\t\u003cgroupId\u003eredis.clients\u003c/groupId\u003e\n\t\u003cartifactId\u003ejedis\u003c/artifactId\u003e\n\t\u003cversion\u003e3.2.0\u003c/version\u003e\n\u003c/dependency\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220103114032-4np99om",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220103114032-4np99om",
				"updated": "20220103114650"
			},
			"Children": [
				{
					"ID": "20220103114042-b2q43z4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220103114042-b2q43z4",
						"updated": "20220103114650"
					},
					"Children": [
						{
							"ID": "20220103114042-boe7nge",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220103114042-boe7nge",
								"updated": "20220103114650"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "Key基本操作命令"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220103114100-ams2t9t",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220103114100-ams2t9t",
				"updated": "20220103114628"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Test\n    void contextLoads() {\n\tJedis jedis = new Jedis(\"127.0.0.1\", 6379);\n        jedis.auth(\"root\"); // redis 密码\n        jedis.connect(); // 连接\n        jedis.disconnect(); // 断开\n        System.out.println(\"清空数据：\" + jedis.flushDB());\n        System.out.println(\"判断某个键是否存在：\" + jedis.exists(\"username\"));\n        System.out.println(\"新增\u003c'username','kuangshen'\u003e的键值 对：\" + jedis.set(\"username\", \"kuangshen\"));\n        System.out.println(\"新增\u003c'password','password'\u003e的键值 对：\" + jedis.set(\"password\", \"password\"));\n        System.out.print(\"系统中所有的键如下：\");\n        Set\u003cString\u003e keys = jedis.keys(\"*\");\n        System.out.println(keys);\n        System.out.println(\"删除键password:\" + jedis.del(\"password\"));\n        System.out.println(\"判断键password是否存 在：\" + jedis.exists(\"password\"));\n        System.out.println(\"查看键username所存储的值的类型：\" + jedis.type(\"username\"));\n        System.out.println(\"随机返回key空间的一个：\" + jedis.randomKey());\n        System.out.println(\"重命名key：\" + jedis.rename(\"username\", \"name\"));\n        System.out.println(\"取出改后的name：\" + jedis.get(\"name\"));\n        System.out.println(\"按索引查询：\" + jedis.select(0));\n        System.out.println(\"删除当前选择数据库中的所有key：\" + jedis.flushDB());\n        System.out.println(\"返回当前数据库中key的数目：\" + jedis.dbSize());\n        System.out.println(\"删除所有数据库中的所有key：\" + jedis.flushAll());\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220103114547-icg54f1",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220103114547-icg54f1",
				"updated": "20220103114644"
			},
			"Children": [
				{
					"ID": "20220103114549-9bu9u7x",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220103114549-9bu9u7x",
						"updated": "20220103114644"
					},
					"Children": [
						{
							"ID": "20220103114549-a0xl0yu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220103114549-a0xl0yu",
								"updated": "20220103114644"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "String操作"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220103114602-tjacymv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220103114602-tjacymv",
				"updated": "20220103114636"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Test\n    void contextLoads() {\n        Jedis jedis = new Jedis(\"127.0.0.1\", 6379);\n        jedis.auth(\"root\"); // redis 密码\n        jedis.flushDB();\n        System.out.println(\"===========增加数据===========\");\n        System.out.println(jedis.set(\"key1\",\"value1\"));\n        System.out.println(jedis.set(\"key2\",\"value2\"));\n        System.out.println(jedis.set(\"key3\", \"value3\"));\n        System.out.println(\"删除键key2:\"+jedis.del(\"key2\"));\n        System.out.println(\"获取键key2:\"+jedis.get(\"key2\"));\n        System.out.println(\"修改key1:\"+jedis.set(\"key1\", \"value1Changed\"));\n        System.out.println(\"获取key1的值：\"+jedis.get(\"key1\"));\n        System.out.println(\"在key3后面加入值：\"+jedis.append(\"key3\", \"End\"));\n        System.out.println(\"key3的值：\"+jedis.get(\"key3\"));\n        System.out.println(\"增加多个键值对：\"+jedis.mset(\"key01\",\"value01\",\"key02\",\"value02\",\"key03\",\"value03\"));\n        System.out.println(\"获取多个键值 对：\"+jedis.mget(\"key01\",\"key02\",\"key03\"));\n        System.out.println(\"获取多个键值对：\"+jedis.mget(\"key01\",\"key02\",\"key03\",\"key04\"));\n        System.out.println(\"删除多个键值对：\"+jedis.del(\"key01\",\"key02\"));\n        System.out.println(\"获取多个键值 对：\"+jedis.mget(\"key01\",\"key02\",\"key03\"));\n        jedis.flushDB();\n        System.out.println(\"===========新增键值对防止覆盖原先值==============\");\n        System.out.println(jedis.setnx(\"key1\", \"value1\"));\n        System.out.println(jedis.setnx(\"key2\", \"value2\"));\n        System.out.println(jedis.setnx(\"key2\", \"value2-new\"));\n        System.out.println(jedis.get(\"key1\"));\n        System.out.println(jedis.get(\"key2\"));\n        System.out.println(\"===========新增键值对并设置有效时间=============\");\n        System.out.println(jedis.setex(\"key3\", 2, \"value3\"));\n        System.out.println(jedis.get(\"key3\"));\n        try {\n            TimeUnit.SECONDS.sleep(3);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        System.out.println(jedis.get(\"key3\"));\n        System.out.println(\"===========获取原值，更新为新值==========\");\n        System.out.println(jedis.getSet(\"key2\", \"key2GetSet\"));\n        System.out.println(jedis.get(\"key2\"));\n        System.out.println(\"获得key2的值的字串：\"+jedis.getrange(\"key2\", 2, 4));\n    }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220103114837-csifddg",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220103114837-csifddg",
				"updated": "20220103114838"
			},
			"Children": [
				{
					"ID": "20220103114838-fsgokf3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220103114838-fsgokf3"
					},
					"Children": [
						{
							"ID": "20220103114838-36lbmzq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220103114838-36lbmzq"
							}
						}
					]
				}
			]
		}
	]
}