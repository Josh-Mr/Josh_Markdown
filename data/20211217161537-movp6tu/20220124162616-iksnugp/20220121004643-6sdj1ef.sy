{
	"ID": "20220121004643-6sdj1ef",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220121004643-6sdj1ef",
		"title": "spring_未整理",
		"updated": "20220124223238"
	},
	"Children": [
		{
			"ID": "20220121004643-b4kqgll",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121004643-b4kqgll",
				"updated": "20220121004710"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "异常处理 "
				},
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "https://juejin.im/post/5dd5f7f8e51d4536a36a1d7d"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://juejin.im/post/5dd5f7f8e51d4536a36a1d7d"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220121004750-9nr6o7m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121004750-9nr6o7m",
				"updated": "20220121004750"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、AOP"
				}
			]
		},
		{
			"ID": "20220121004750-f0h5wis",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121004750-f0h5wis",
				"updated": "20220121004750"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    1、什么是AOP ？"
				}
			]
		},
		{
			"ID": "20220121004750-va9ojd4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121004750-va9ojd4",
				"updated": "20220121004750"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        核心业务：增删改查操作都叫核心业务，"
				}
			]
		},
		{
			"ID": "20220121004750-li8pfzm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121004750-li8pfzm",
				"updated": "20220121004750"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        切面（周围）业务：性能统计，日志，事务管理等"
				}
			]
		},
		{
			"ID": "20220121004750-odzdu4l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121004750-odzdu4l",
				"updated": "20220121004750"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        在面向切面的编程思想里面，核心业务功能和切面功能分别独立开发，然后把核心业务功能和切面功能“编织”在一起！"
				}
			]
		},
		{
			"ID": "20220121004750-2rs7zkf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121004750-2rs7zkf",
				"updated": "20220121004750"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "    2、目的？"
				}
			]
		},
		{
			"ID": "20220121004750-o5bqert",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121004750-o5bqert",
				"updated": "20220121004750"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "        AOP是将那些和业务无关的，并将那些被业务共同调用和处理逻辑（权限控制，日志处理，事务处理）封装起来，减少代码的重复性，降低业务模块之间的耦合度，有利于系统的可可扩展性和可维护性。"
				}
			]
		},
		{
			"ID": "20220121004750-aujbpon",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121004750-aujbpon",
				"updated": "20220121004750"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Filter是过滤器，interceptor是拦截器。前者基于回调函数实现，必须依靠容器支持。因为需要容器装配好整条FilterChain并逐个调用。后者基于代理实现，属于AOP的范畴"
				}
			]
		},
		{
			"ID": "20220121004711-awec2su",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121004711-awec2su",
				"updated": "20220121004711"
			}
		},
		{
			"ID": "20220121005547-smb1s9k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005547-smb1s9k",
				"updated": "20220121005547"
			}
		},
		{
			"ID": "20220121005547-ls9vvkz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005547-ls9vvkz",
				"updated": "20220121005547"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、程序耦合的理解\t"
				}
			]
		},
		{
			"ID": "20220121005547-1cr64fy",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220121005547-1cr64fy",
				"updated": "20220121005547"
			},
			"Children": [
				{
					"ID": "20220121005547-e834qik",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220121005547-e834qik"
					},
					"Children": [
						{
							"ID": "20220121005547-fbl5egv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220121005547-fbl5egv"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "什么是耦合：程序之间的依赖关系？"
								}
							]
						},
						{
							"ID": "20220121005547-o54bquo",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20220121005547-o54bquo"
							},
							"Children": [
								{
									"ID": "20220121005547-lk9uvf0",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20220121005547-lk9uvf0"
									},
									"Children": [
										{
											"ID": "20220121005547-mdiq19f",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220121005547-mdiq19f"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "类之间的依赖"
												}
											]
										}
									]
								},
								{
									"ID": "20220121005547-1yssacs",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20220121005547-1yssacs"
									},
									"Children": [
										{
											"ID": "20220121005547-05d10tg",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220121005547-05d10tg"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "方法之间的依赖"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20220121005547-3z1wffx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220121005547-3z1wffx"
					},
					"Children": [
						{
							"ID": "20220121005547-2y7zfr9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220121005547-2y7zfr9"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "怎么解耦？"
								}
							]
						}
					]
				},
				{
					"ID": "20220121005547-6qh8fru",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220121005547-6qh8fru"
					},
					"Children": [
						{
							"ID": "20220121005547-z2yli2j",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220121005547-z2yli2j"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "开发中:编译器不依赖，运行时再依赖。"
								}
							]
						}
					]
				},
				{
					"ID": "20220121005547-e9x8c2n",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220121005547-e9x8c2n"
					},
					"Children": [
						{
							"ID": "20220121005547-9bbuf0m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220121005547-9bbuf0m"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用反射："
								}
							]
						}
					]
				},
				{
					"ID": "20220121005547-g2uyb8h",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220121005547-g2uyb8h"
					},
					"Children": [
						{
							"ID": "20220121005547-389tksh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220121005547-389tksh"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用反射来创建对象，避免用new关键字。"
								}
							]
						}
					]
				},
				{
					"ID": "20220121005547-fcceewi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220121005547-fcceewi"
					},
					"Children": [
						{
							"ID": "20220121005547-vqnw2ts",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220121005547-vqnw2ts"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过读配置文件加载类的全限定类名。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220121005603-mpg2p36",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005603-mpg2p36",
				"updated": "20220121005603"
			}
		},
		{
			"ID": "20220121005604-oiwbgdm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-oiwbgdm",
				"updated": "20220121005604"
			}
		},
		{
			"ID": "20220121005604-f3uymvp",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220121005604-f3uymvp",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "java中File类的getPath(),getAbsolutePath(),getCanonicalPath()区别"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://www.cnblogs.com/newcaoguo/p/6224071.html"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220121005604-xsdqrs8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-xsdqrs8",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "File file = new File(\"."
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBackslashContent",
							"Data": "\\"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "test.txt\");"
				}
			]
		},
		{
			"ID": "20220121005604-doaaxlm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-doaaxlm",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "System.out.println(file.getPath());"
				}
			]
		},
		{
			"ID": "20220121005604-crexo1o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-crexo1o",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "System.out.println(file.getAbsolutePath());"
				}
			]
		},
		{
			"ID": "20220121005604-z2ovr64",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-z2ovr64",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "System.out.println(file.getCanonicalPath());"
				}
			]
		},
		{
			"ID": "20220121005604-ut4n142",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-ut4n142",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出实例："
				}
			]
		},
		{
			"ID": "20220121005604-028h04d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-028h04d",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": ".\\test.txt"
				}
			]
		},
		{
			"ID": "20220121005604-oic8y6p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-oic8y6p",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "E:\\workspace\\Test"
				},
				{
					"Type": "NodeBackslash",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBackslashContent",
							"Data": "."
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\\test.txt"
				}
			]
		},
		{
			"ID": "20220121005604-v3dpxut",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-v3dpxut",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "E:\\workspace\\Test\\test.txt"
				}
			]
		},
		{
			"ID": "20220121005604-k28g6sd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-k28g6sd",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "getPath():"
				}
			]
		},
		{
			"ID": "20220121005604-y7rqq4r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-y7rqq4r",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "返回的是定义时的路径，可能是相对路径，也可能是绝对路径，这个取决于定义时用的是相对路径还是绝对路径。如果定义时用的是绝对路径，那么使用getPath()返回的结果跟用getAbsolutePath()返回的结果一样"
				}
			]
		},
		{
			"ID": "20220121005604-gixxr5z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-gixxr5z",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "getAbsolutePath():"
				}
			]
		},
		{
			"ID": "20220121005604-lrphw1u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-lrphw1u",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "返回的是定义时的路径对应的相对路径，但不会处理“.”和“..”的情况"
				}
			]
		},
		{
			"ID": "20220121005604-v7zw1el",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-v7zw1el",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "getCanonicalPath():"
				}
			]
		},
		{
			"ID": "20220121005604-dy5dede",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220121005604-dy5dede",
				"updated": "20220121005604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "返回的是规范化的绝对路径，相当于将getAbsolutePath()中的“.”和“..”解析成对应的正确的路径"
				}
			]
		}
	]
}