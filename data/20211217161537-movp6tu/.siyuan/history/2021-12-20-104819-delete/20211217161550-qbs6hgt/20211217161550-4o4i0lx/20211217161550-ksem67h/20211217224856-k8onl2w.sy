{
	"ID": "20211217224856-k8onl2w",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20211217224856-k8onl2w",
		"title": "# 新文档",
		"updated": "20211217231130"
	},
	"Children": [
		{
			"ID": "20211217225121-u47lq9e",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20211217225121-u47lq9e",
				"updated": "20211217225121"
			},
			"Children": [
				{
					"ID": "20211217225121-bcv8u4a",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20211217225121-bcv8u4a",
						"updated": "20211217225121"
					},
					"Children": [
						{
							"ID": "20211217225031-3gdnni5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211217225031-3gdnni5",
								"updated": "20211217225032"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "时间上"
								}
							]
						}
					]
				},
				{
					"ID": "20211217225121-2bnkulq",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20211217225121-2bnkulq",
						"updated": "20211217225121"
					},
					"Children": [
						{
							"ID": "20211217224856-8spwi0t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211217224856-8spwi0t",
								"updated": "20211217225633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "技术加上d"
								}
							]
						}
					]
				},
				{
					"ID": "20211217225121-sh1lipq",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20211217225121-sh1lipq",
						"updated": "20211217225121"
					},
					"Children": [
						{
							"ID": "20211217225041-lyobuec",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20211217225041-lyobuec",
								"updated": "20211217225045"
							},
							"Children": [
								{
									"ID": "20211217225125-p31f3pt",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20211217225125-p31f3pt"
									},
									"Children": [
										{
											"ID": "20211217225125-bl7yqq4",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211217225125-bl7yqq4",
												"updated": "20211217225134"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "阿道夫"
												}
											]
										}
									]
								},
								{
									"ID": "20211217225045-pi03wl2",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20211217225045-pi03wl2"
									},
									"Children": [
										{
											"ID": "20211217225045-dy65dtb",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211217225045-dy65dtb",
												"updated": "20211217225047"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "jiasdf"
												}
											]
										}
									]
								},
								{
									"ID": "20211217225048-f1odprs",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "My4=",
										"Num": 3
									},
									"Properties": {
										"id": "20211217225048-f1odprs"
									},
									"Children": [
										{
											"ID": "20211217225048-s8exaqe",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211217225048-s8exaqe",
												"updated": "20211217225049"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "jsifa "
												}
											]
										}
									]
								},
								{
									"ID": "20211217225050-4g85mb8",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "NC4=",
										"Num": 4
									},
									"Properties": {
										"id": "20211217225050-4g85mb8"
									},
									"Children": [
										{
											"ID": "20211217225050-x19jknd",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20211217225050-x19jknd",
												"updated": "20211217225051"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "sdfjas "
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20211217225121-atlhc20",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20211217225121-atlhc20",
						"updated": "20211217225121"
					},
					"Children": [
						{
							"ID": "20211217225104-560b3q4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211217225104-560b3q4"
							}
						}
					]
				}
			]
		},
		{
			"ID": "20211217230450-llm4rs2",
			"Type": "NodeSuperBlock",
			"Properties": {
				"id": "20211217230450-llm4rs2",
				"updated": "20211217230450"
			},
			"Children": [
				{
					"Type": "NodeSuperBlockOpenMarker"
				},
				{
					"Type": "NodeSuperBlockLayoutMarker",
					"Data": "col"
				},
				{
					"ID": "20211217225122-4fokweq",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20211217225122-4fokweq",
						"updated": "20211217230413"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "这是一个快\n这是和上面一样的快\n\n"
						}
					]
				},
				{
					"ID": "20211217230416-qew9gvc",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20211217230416-qew9gvc",
						"updated": "20211217230416"
					}
				},
				{
					"Type": "NodeSuperBlockCloseMarker"
				}
			]
		},
		{
			"ID": "20211217230612-0tujrxs",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20211217230612-0tujrxs",
				"updated": "20211217231130"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "package com.redxun.bill.deal.service;\n\nimport com.alibaba.fastjson.JSONArray;\nimport com.alibaba.fastjson.JSONObject;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.redxun.base.IDataSafeDelValidator;\nimport com.redxun.base.ICommonDataProvider;\nimport com.redxun.bill.DataSafeDelValidator;\nimport com.redxun.bill.CommonDataProvider;\nimport com.google.common.collect.Maps;\nimport com.redxun.bill.asc.service.PsSmTradeServiceImpl;\nimport com.redxun.bill.deal.entity.affirm.DueVersionParamsVO;\nimport com.redxun.bill.deal.entity.affirm.FinanceAffirmVO;\nimport com.redxun.bill.deal.entity.sign.*;\nimport com.redxun.bill.deal.entity.sign.warrant.PsWarrantSoSign;\nimport com.redxun.bill.deal.mapper.PsSoSubscMapper;\nimport com.redxun.bill.deal.mapper.sign.warrant.PsWarrantSoSignMapper;\nimport com.redxun.bill.deal.service.affirm.*;\nimport com.redxun.bill.deal.service.affirm.constants.AffirmInterfaceConstants;\nimport com.redxun.bill.deal.service.affirm.constants.DealConfirmConstants;\nimport com.redxun.common.base.db.BaseDao;\nimport com.redxun.common.base.entity.JsonResult;\nimport com.redxun.common.utils.SpringUtil;\nimport com.redxun.common.model.CommonDataModel;\nimport com.redxun.bill.deal.entity.sign.PsSoSign;\nimport com.redxun.bill.deal.mapper.sign.PsSoSignMapper;\nimport com.redxun.common.service.BillService;\nimport com.redxun.common.utils.SysUserUtil;\nimport com.redxun.platform.service.PsWarrantBacklogServiceImpl;\nimport org.apache.commons.collections.CollectionUtils;\nimport org.apache.commons.collections.MapUtils;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.stereotype.Service;\nimport lombok.SneakyThrows;\n\nimport javax.annotation.Resource;\nimport java.util.*;\n\n/**\n * @description: 签约服务类\n * @author: hcc \u003chcc@hanzhisoft.com\u003e\n * @createDate: 2021-08-17 10:13:19\n * @copyright: 翰智软件\n */\n@Service\npublic class PsSoSignServiceImpl extends BillService\u003cPsSoSignMapper, PsSoSign\u003e implements ICommonDealConfirm\u003cPsSoSign\u003e {\n\n    @Resource\n    private PsSoSignMapper psSoSignMapper;\n  \n    @Resource\n    private PsSoSignCusServiceImpl psSoSignCusService;\n  \n    @Resource\n    private PsSellorSignServiceImpl psSellorSignService;\n  \n    @Resource\n    private PsSignFundflowServiceImpl psSignFundflowService;\n  \n    @Resource\n    private PsSignDiscountServiceImpl psSignDiscountService;\n  \n    @Resource\n    private PsSignBusiflowServiceImpl psSignBusiflowService;\n  \n    @Resource\n    private PsSignAppendhouseServiceImpl psSignAppendhouseService;\n  \n    @Resource\n    private PsSignStifeeServiceImpl psSignStifeeService;\n\n    @Resource\n    private PsDueVersionServiceImpl psDueVersionService;\n\n    @Resource\n    private PsSoDealAffirmHistoryServiceImpl psSoDealAffirmHistoryService;\n\n    @Resource\n    private DealCommonCheckService dealCommonCheckService;\n\n    @Resource\n    private FinanceAffirmServiceImpl financeAffirmService;\n\n    @Resource\n    private PsWarrantBacklogServiceImpl psWarrantBacklogService;\n\n    @Resource\n    private PsSoSubscMapper psSoSubscMapper;\n\n    @Resource\n    private PsWarrantSoSignMapper psWarrantSoSignMapper;\n\n    @Resource\n    private PsSmTradeServiceImpl psSmTradeService;\n\n    @Resource\n    private PsWarrantSoSignServiceImpl psWarrantSoSignService;\n\n    @Override\n    public BaseDao\u003cPsSoSign\u003e getRepository() {\n        return psSoSignMapper;\n    }\n\n    @Override\n    public com.redxun.base.IBillCodeBuilder\u003cPsSoSign\u003e getBillCodeBuilder() {\n        return SpringUtil.getBean(com.redxun.bill.BillCodeBuilder.class);\n    }\n\n    @Override\n    public IDataSafeDelValidator\u003cPsSoSign\u003e getDataSafeDelValidator() {\n        return SpringUtil.getBean(DataSafeDelValidator.class);\n    }\n\n    @Override\n    public ICommonDataProvider\u003cCommonDataModel\u003e getCommonDataProvider() {\n        return SpringUtil.getBean(CommonDataProvider.class);\n    }\n\n    @Override\n    public String _getBillTypeCode() {\n        return \"RFQY\";\n    }\n\n    @Override\n    public PsSoSign afterGet(PsSoSign entity) {\n        return super.afterGet(entity);\n    }\n\n    @Override\n    public List\u003cPsSoSign\u003e afterQueryList(List\u003cPsSoSign\u003e entityList) {\n        return super.afterQueryList(entityList);\n    }\n\n    @Override\n    public IPage\u003cPsSoSign\u003e afterQueryPage(IPage\u003cPsSoSign\u003e page) {\n        return super.afterQueryPage(page);\n    }\n\n    /**\n     * 批量保存子实体\n     * @param entity\n     * @return\n     */\n    @SneakyThrows\n    @Override\n    public boolean save(PsSoSign entity) {\n        boolean status = super.save(entity);\n        if (status \u0026\u0026 entity.getPsSoSignCusList() != null) {\n            for (PsSoSignCus item : entity.getPsSoSignCusList()) {\n                item.setPk_sign(new PsSoSign(entity.getPkId()));\n            }\n            status = psSoSignCusService.batchSave(entity.getPsSoSignCusList());\n        }\n        if (status \u0026\u0026 entity.getPsSellorSignList() != null) {\n            for (PsSellorSign item : entity.getPsSellorSignList()) {\n                item.setPk_sign(new PsSoSign(entity.getPkId()));\n            }\n            status = psSellorSignService.batchSave(entity.getPsSellorSignList());\n        }\n        if (status \u0026\u0026 entity.getPsSignFundflowList() != null) {\n            for (PsSignFundflow item : entity.getPsSignFundflowList()) {\n                item.setPk_sign(new PsSoSign(entity.getPkId()));\n            }\n            status = psSignFundflowService.batchSave(entity.getPsSignFundflowList());\n        }\n        if (status \u0026\u0026 entity.getPsSignDiscountList() != null) {\n            for (PsSignDiscount item : entity.getPsSignDiscountList()) {\n                item.setPk_sign(new PsSoSign(entity.getPkId()));\n            }\n            status = psSignDiscountService.batchSave(entity.getPsSignDiscountList());\n        }\n        if (status \u0026\u0026 entity.getPsSignBusiflowList() != null) {\n            for (PsSignBusiflow item : entity.getPsSignBusiflowList()) {\n                item.setPk_sign(new PsSoSign(entity.getPkId()));\n            }\n            status = psSignBusiflowService.batchSave(entity.getPsSignBusiflowList());\n        }\n        if (status \u0026\u0026 entity.getPsSignAppendhouseList() != null) {\n            for (PsSignAppendhouse item : entity.getPsSignAppendhouseList()) {\n                item.setPk_sign(new PsSoSign(entity.getPkId()));\n            }\n            status = psSignAppendhouseService.batchSave(entity.getPsSignAppendhouseList());\n        }\n        if (status \u0026\u0026 entity.getPsSignStifeeList() != null) {\n            for (PsSignStifee item : entity.getPsSignStifeeList()) {\n                item.setPk_sign(new PsSoSign(entity.getPkId()));\n            }\n            status = psSignStifeeService.batchSave(entity.getPsSignStifeeList());\n        }\n        return status;\n    }\n\n    /**\n     * 批量删除子实体\n     * @param entity\n     * @return\n     */\n    @Override\n    public boolean delete(PsSoSign entity) {\n        boolean status = super.delete(entity);\n        if (status) {\n            Map conditionMap = Maps.newHashMap();\n            conditionMap.put(\"PK_SIGN\", entity.getPkId());\n            psSoSignCusService.delete(conditionMap);\n            conditionMap = Maps.newHashMap();\n            conditionMap.put(\"PK_SIGN\", entity.getPkId());\n            psSellorSignService.delete(conditionMap);\n            conditionMap = Maps.newHashMap();\n            conditionMap.put(\"PK_SIGN\", entity.getPkId());\n            psSignFundflowService.delete(conditionMap);\n            conditionMap = Maps.newHashMap();\n            conditionMap.put(\"PK_SIGN\", entity.getPkId());\n            psSignDiscountService.delete(conditionMap);\n            conditionMap = Maps.newHashMap();\n            conditionMap.put(\"PK_SIGN\", entity.getPkId());\n            psSignBusiflowService.delete(conditionMap);\n            conditionMap = Maps.newHashMap();\n            conditionMap.put(\"PK_SIGN\", entity.getPkId());\n            psSignAppendhouseService.delete(conditionMap);\n            conditionMap = Maps.newHashMap();\n            conditionMap.put(\"PK_SIGN\", entity.getPkId());\n            psSignStifeeService.delete(conditionMap);\n        \n        }\n        return status;\n    }\n\n    /**\n     * 草签确认\n     * @param vo\n     * @return\n     */\n    @Override\n    public JsonResult confirmAction(PsSoSign vo) {\n        if (this.hasSignConfirmed(vo.getId()))\n            return JsonResult.Fail(\"单据已经网签确认，不允许草签确认！\");\n        if (!\"End\".equals(vo.getVbillstatus()))\n            return JsonResult.Fail(\"签约未提交单据,不可确认！\");\n        if (!this.isCurrentBillSubConfirmStatus(vo.getPk_house()))\n            return JsonResult.Fail(\"该房产[认购单]未确认，请先确认！\");\n        // 检查房产是否已经确认\n        JsonResult confirmedStatus = dealCommonCheckService.checkHouseIsConfirmed(vo.getPk_house());\n        if (!confirmedStatus.isSuccess())\n            return confirmedStatus;\n        // 结账\u0026关账校验\n        JsonResult closeResult = dealCommonCheckService.checkBillDailyAndClose(vo.getPk_project(), vo.getDcollectdate());\n        if (!closeResult.isSuccess())\n            return closeResult;\n        // 是否特批房\n        if (!psSmTradeService.getSpecialHousingState(vo.getPk_trade())){\n            // 楼栋单方成本校验\n            JsonResult buildingResult = dealCommonCheckService.commonCheckFinanceNnitbuldingcost(null, vo.getPk_house(), vo.getPk_trade(), \"SIGN\");\n            if (!buildingResult.isSuccess())\n                return buildingResult;\n        }\n        // 检查关联交易单据是否存在未确认\n        JsonResult checkBillNotConfirmResult = this.checkBillNotConfirm(vo.getPk_house());\n        if (!checkBillNotConfirmResult.isSuccess())\n            return checkBillNotConfirmResult;\n        // 更新状态\n        int updateRow = psSoSignMapper.confirmAction(updateCurrentOperation(vo));\n        if (updateRow \u003c= 0)\n            return JsonResult.getFailResult(\"更新状态失败\");\n        // 更新草签版本化表 ps_warrant_sign\n        PsWarrantSoSign psWarrantSoSign = JSONObject.parseObject(JSONObject.toJSONString(vo), PsWarrantSoSign.class);\n        psWarrantSoSignMapper.confirmAction(psWarrantSoSign);\n        // 更新待办表确认状态\n        psWarrantBacklogService.commonDealConfirmUpdateStatus(vo.getDcollectdate(),vo.getBiscollect(),vo.getId(),\"DM12\");\n        // 调用富销云\n        this.pullFuXiaoYun(vo,AffirmInterfaceConstants.sign,AffirmInterfaceConstants.confirm,DealConfirmConstants.SIGNAFFIRM);\n        // 应收版本化\n        this.commonSaveVersion(vo,AffirmInterfaceConstants.sign);\n        // 记录保存\n        this.saveAffirmHistory(vo);\n        return JsonResult.Success();\n    }\n\n    /**\n     * 草签取消确认\n     * @param vo\n     * @return\n     */\n    @Override\n    public JsonResult cancelConfirmAction(PsSoSign vo) {\n        // 结账\u0026关账校验\n        JsonResult result = dealCommonCheckService.checkBillDailyAndClose(vo.getPk_project(), vo.getDcollectdate());\n        if (!result.isSuccess())\n            return result;\n        // 更新状态\n        int updateRow = psSoSignMapper.cancelConfirmAction(updateCurrentOperation(vo));\n        if (updateRow \u003c= 0)\n            return JsonResult.getFailResult(\"更新状态失败\");\n        // 更新草签版本化表 ps_warrant_sign\n        PsWarrantSoSign psWarrantSoSign = JSONObject.parseObject(JSONObject.toJSONString(vo), PsWarrantSoSign.class);\n        psWarrantSoSignMapper.cancelConfirmAction(psWarrantSoSign);\n        // 更新待办表确认状态\n        psWarrantBacklogService.commonDealConfirmUpdateStatus(vo.getDcollectdate(),vo.getBiscollect(),vo.getId(),\"DM12\");\n        // 调用富销云\n        this.pullFuXiaoYun(vo,AffirmInterfaceConstants.sign,AffirmInterfaceConstants.cancelConfirm,DealConfirmConstants.UNSIGNAFFIRM);\n        //取消应收版本化\n        this.commonCancelVersion(vo);\n        //记录保存\n        this.saveAffirmHistory(vo);\n        return JsonResult.Success();\n    }\n\n    /**\n     * 草签驳回\n     * @param vo\n     * @return\n     */\n    @Override\n    public JsonResult rejectAction(PsSoSign vo) {\n        // 更新状态\n        int updateRow = psSoSignMapper.confirmAction(updateCurrentOperation(vo));\n        if (updateRow \u003c= 0)\n            return JsonResult.getFailResult(\"更新状态失败\");\n        // 更新草签版本化表 ps_warrant_sign\n        PsWarrantSoSign psWarrantSoSign = JSONObject.parseObject(JSONObject.toJSONString(vo), PsWarrantSoSign.class);\n        psWarrantSoSignMapper.rejectAction(psWarrantSoSign);\n        // 更新待办表确认状态\n        psWarrantBacklogService.commonDealConfirmUpdateStatus(vo.getDcollectdate(),vo.getBiscollect(),vo.getId(),\"DM12\");\n        // 调用富销云\n        this.pullFuXiaoYun(vo,AffirmInterfaceConstants.sign,AffirmInterfaceConstants.reject,DealConfirmConstants.REJECTSIGN);\n        //记录保存\n        this.saveAffirmHistory(vo);\n        return JsonResult.Success();\n    }\n    /**\n     * 网签确认\n     * @param vo\n     * @return\n     */\n    public JsonResult netConfirmAction(PsSoSign vo) {\n        if (!\"End\".equals(vo.getVbillstatus()))\n            return JsonResult.Fail(\"签约未提交单据,不可确认！\");\n        if (psWarrantSoSignService.hasInitialNotConfirm(vo.getId()))\n            return JsonResult.Fail(\"存在未确认的草签单,不可签约确认！\");\n        if (!this.isCurrentBillSubConfirmStatus(vo.getPk_house()))\n            return JsonResult.Fail(\"该房产[认购单]未确认，请先确认！\");\n        // 检查关联交易单据是否存在未确认\n        JsonResult checkBillNotConfirmResult = this.checkBillNotConfirm(vo.getPk_house());\n        if (!checkBillNotConfirmResult.isSuccess())\n            return checkBillNotConfirmResult;\n        // 检查房产是否已经确认\n        JsonResult confirmedStatus = dealCommonCheckService.checkHouseIsConfirmed(vo.getPk_house());\n        if (!confirmedStatus.isSuccess())\n            return confirmedStatus;\n        // 结账\u0026关账校验\n        JsonResult closeResult = dealCommonCheckService.checkBillDailyAndClose(vo.getPk_project(), vo.getDcollectdate());\n        if (!closeResult.isSuccess())\n            return closeResult;\n        // 是否特批房\n        if (!psSmTradeService.getSpecialHousingState(vo.getPk_trade())){\n            // 楼栋单方成本校验\n            JsonResult buildingResult = dealCommonCheckService.commonCheckFinanceNnitbuldingcost(null, vo.getPk_house(), vo.getPk_trade(), \"SIGN\");\n            if (!buildingResult.isSuccess())\n                return buildingResult;\n        }\n        // 更新状态\n        int updateRow = psSoSignMapper.confirmAction(updateCurrentOperation(vo));\n        if (updateRow \u003c= 0)\n            return JsonResult.getFailResult(\"更新状态失败\");\n        // 更新待办表确认状态\n        psWarrantBacklogService.commonDealConfirmUpdateStatus(vo.getDcollectdate(),vo.getBiscollect(),vo.getId(),\"RFQY\");\n        // 调用富销云\n        this.pullFuXiaoYun(vo,AffirmInterfaceConstants.sign,AffirmInterfaceConstants.confirm,DealConfirmConstants.SIGNAFFIRM);\n        // 应收版本化\n        this.commonSaveVersion(vo,AffirmInterfaceConstants.sign);\n        // 记录保存\n        this.saveAffirmHistory(vo);\n        return JsonResult.Success();\n    }\n\n    /**\n     * 网签取消确认\n     * @param vo\n     * @return\n     */\n    public JsonResult netCancelConfirmAction(PsSoSign vo) {\n        // 结账\u0026关账校验\n        JsonResult result = dealCommonCheckService.checkBillDailyAndClose(vo.getPk_project(), vo.getDcollectdate());\n        if (!result.isSuccess())\n            return result;\n        // 更新状态\n        int updateRow = psSoSignMapper.cancelConfirmAction(updateCurrentOperation(vo));\n        if (updateRow \u003c= 0)\n            return JsonResult.getFailResult(\"更新状态失败\");\n        // 更新待办表确认状态\n        psWarrantBacklogService.commonDealConfirmUpdateStatus(vo.getDcollectdate(),vo.getBiscollect(),vo.getId(),\"RFQY\");\n        // 调用富销云\n        this.pullFuXiaoYun(vo,AffirmInterfaceConstants.sign,AffirmInterfaceConstants.cancelConfirm,DealConfirmConstants.UNSIGNAFFIRM);\n        //取消应收版本化\n        this.commonCancelVersion(vo);\n        //记录保存\n        this.saveAffirmHistory(vo);\n        return JsonResult.Success();\n    }\n\n    /**\n     * 网签驳回\n     * @param vo\n     * @return\n     */\n    public JsonResult netRejectAction(PsSoSign vo) {\n        // 更新状态\n        int updateRow = psSoSignMapper.rejectAction(updateCurrentOperation(vo));\n        if (updateRow \u003c= 0)\n            return JsonResult.getFailResult(\"更新状态失败\");\n        // 更新待办表确认状态\n        psWarrantBacklogService.commonDealConfirmUpdateStatus(vo.getDcollectdate(),vo.getBiscollect(),vo.getId(),\"RFQY\");\n        // 调用富销云\n        this.pullFuXiaoYun(vo,AffirmInterfaceConstants.sign,AffirmInterfaceConstants.reject,DealConfirmConstants.REJECTSIGN);\n        //记录保存\n        this.saveAffirmHistory(vo);\n        return JsonResult.Success();\n    }\n\n    @Override\n    public void saveAffirmHistory(PsSoSign vo){\n        String biscollect = vo.getBiscollect();\n        if (\"R\".equals(biscollect)){\n            String reMemo = \"\";\n            if (StringUtils.isNotEmpty(vo.getReason())){\n                reMemo += \"选择原因：\"+vo.getReason()+\";\";\n            }\n            if (StringUtils.isNotEmpty(vo.getMemo())){\n                reMemo += \"备注：\"+ vo.getMemo()+\";\";\n            }\n            vo.setMemo(reMemo);\n        }else{\n            vo.setMemo(null);\n        }\n        psSoDealAffirmHistoryService.saveAffirmHistory(\n                vo.getPk_trade(),\n                vo.getId(),\n                vo.getDcollectdate(),\n                vo.getVcollectuser(),\n                vo.getBiscollect(),\n                vo.getMemo(),\n                String.valueOf(AffirmInterfaceConstants.sign));\n\n    }\n\n    @Override\n    public void pullFuXiaoYun(PsSoSign vo, Integer tradeType, Integer bisAffirm, String actionType) {\n        JSONArray paraArr = new JSONArray();\n        FinanceAffirmVO financeAffirmVO = new FinanceAffirmVO();\n        financeAffirmVO.setTradeOuterId(vo.getPk_trade());\n        financeAffirmVO.setTradeType(tradeType);\n        financeAffirmVO.setBizOuterId(vo.getId());\n        financeAffirmVO.setBisAffirm(bisAffirm);\n        financeAffirmVO.setOperatorId(vo.getVcollectuser());\n        financeAffirmVO.setAffirmDate(vo.getDcollectdate());\n        paraArr.add(financeAffirmVO);\n        financeAffirmService.sendReq(paraArr.toJSONString(), actionType,vo.getId());\n    }\n\n    @Override\n    public void commonSaveVersion(PsSoSign vo, Integer tradeType) {\n        psDueVersionService.updateTradeConfirmState(vo.getPk_trade(),vo.getId(),vo.getDcollectdate()); //更新版本化确认状态\n    }\n\n    @Override\n    public void commonCancelVersion(PsSoSign vo) {\n        psDueVersionService.updateTradeCancelConfirmState(vo.getId()); //清除版本化确认状态\n    }\n\n    @Override\n    public JsonResult commonParamsVerify(PsSoSign vo, String actionType) {\n        if (StringUtils.isEmpty(vo.getId())\n                \u0026\u0026 StringUtils.isEmpty(vo.getBiscollect())\n                \u0026\u0026 StringUtils.isEmpty(vo.getVcollectuser())\n                \u0026\u0026 StringUtils.isEmpty(vo.getDcollectdate())\n                \u0026\u0026 StringUtils.isEmpty(vo.getIsStatus()))\n            return JsonResult.Fail(\"存在参数为空！\");\n        // 草签\n        if (\"initial\".equals(vo.getIsStatus())){\n            // 获取草签确认状态\n            Map param = Maps.newHashMap();\n            param.put(\"id_\",vo.getId());\n            Map map = this.queryCols(param, \"BISINITIALSIGN\",\"id_\",\"BISNETSIGN\");\n            if (actionType.equals(map.get(\"BISINITIALSIGN\"))\n                    || vo.getBisinitialsign().equals(map.get(\"BISINITIALSIGN\"))){\n                return JsonResult.Fail(\"数据已被修改，请刷新！\");\n            }\n            if (\"Y\".equals(map.get(\"BISNETSIGN\")))\n                return JsonResult.Fail(\"单据已经网签确认，不允许草签反确认！\");\n        }else{\n            // 获取网签确认状态\n            Map param = Maps.newHashMap();\n            param.put(\"id_\",vo.getId());\n            Map map = this.queryCols(param, \"BISCOLLECT\",\"id_\");\n            if (actionType.equals(map.get(\"BISCOLLECT\"))){\n                return JsonResult.Fail(\"数据已被修改，请刷新！\");\n            }\n        }\n        return JsonResult.Success();\n    }\n\n    @SneakyThrows\n    @Override\n    public PsSoSign updateCurrentOperation(PsSoSign vo) {\n        vo.setUpdateBy(SysUserUtil.getLoginUser().getUserId());\n        vo.setUpdateTime(new Date());\n        return vo;\n    }\n\n    /**\n     * 判断当前认购单是否确认\n     * @param pk_house\n     * @return\n     */\n    public Boolean isCurrentBillSubConfirmStatus(String pk_house){\n        Map map = baseMapper.querySubscBiscollectByPkHouse(pk_house);\n        if (MapUtils.isNotEmpty(map)){\n            if (\"Y\".equals(map.get(\"BISCOLLECT\")))\n                return true;\n        }\n        return false;\n\n    }\n\n    /**\n     * 检查关联交易单据是否存在未确认\n     * @param pk_house\n     * @return\n     */\n    private JsonResult checkBillNotConfirm(String pk_house){\n        if (StringUtils.isBlank(pk_house))\n            return JsonResult.Fail(\"房产主键不存在！\");\n        List unSubList = psSoSubscMapper.checkUnsubscribeConfirm(pk_house);\n        if (CollectionUtils.isNotEmpty(unSubList))\n            return JsonResult.Fail(\"选择单据存在未确认的退房数据,请先确认退房数据!\");\n        List changeHouseList = psSoSubscMapper.checkChangeHouseConfirm(pk_house);\n        if (CollectionUtils.isNotEmpty(changeHouseList))\n            return JsonResult.Fail(\"选择单据存在未确认的换房数据,请先确认换房数据!\");\n        List changeNameList = psSoSubscMapper.checkChangeNameConfirm(pk_house);\n        if (CollectionUtils.isNotEmpty(changeNameList))\n            return JsonResult.Fail(\"选择单据存在未确认的更名数据,请先确认更名数据!\");\n        List changeFundFlowList = psSoSubscMapper.checkChangeFundFlowConfirm(pk_house);\n        if (CollectionUtils.isNotEmpty(changeFundFlowList))\n            return JsonResult.Fail(\"选择单据存在未确认的变更付款流程数据,请先确认变更付款流程数据!\");\n        List changeConstractList = psSoSubscMapper.checkChangeContrConfirm(pk_house);\n        if (CollectionUtils.isNotEmpty(changeConstractList))\n            return JsonResult.Fail(\"选择单据存在未确认的变更合同数据,请先确认变更合同数据!\");\n        return JsonResult.Success();\n    }\n\n    /**\n     * 是否已经签约\n     * @param pk_trade\n     * @return\n     */\n    public boolean getSignConfirmState(String pk_trade){\n        if (StringUtils.isBlank(pk_trade))\n            return false;\n        // 获取确认状态\n        Map param = Maps.newHashMap();\n        param.put(\"pk_trade\",pk_trade);\n        param.put(\"del_flag_\",0);\n        Map map = this.queryCols(param, \"BISCOLLECT\",\"ID_\");\n        if (org.springframework.util.CollectionUtils.isEmpty(map))\n            return false;\n        if (\"Y\".equals( map.get(\"BISCOLLECT\")))\n            return true;\n        return false;\n    }\n\n    /**\n     * 检查是否存在已经确认的网签单\n     * @return\n     */\n    public boolean hasSignConfirmed(String pk_sign){\n        // 获取确认状态\n        Map param = Maps.newHashMap();\n        param.put(\"id_\",pk_sign);\n        param.put(\"del_flag_\",0);\n        param.put(\"bisnetsign\",\"Y\");// Y为已经确认\n        param.put(\"bisnetsigncontract\",\"Y\");//Y 为签约单\n        Map map = this.queryCols(param, \"BISCOLLECT\",\"ID_\");\n        if (org.springframework.util.CollectionUtils.isEmpty(map))\n            return false;\n        return true;\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20211217230640-6c6xbdf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211217230640-6c6xbdf",
				"updated": "20211217230640"
			}
		}
	]
}