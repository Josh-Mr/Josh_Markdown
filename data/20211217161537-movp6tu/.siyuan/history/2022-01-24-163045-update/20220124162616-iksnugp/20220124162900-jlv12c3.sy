{
	"ID": "20220124162900-jlv12c3",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220124162900-jlv12c3",
		"title": "面试题2",
		"updated": "20220124162906"
	},
	"Children": [
		{
			"ID": "20220124162906-v4whlgf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-v4whlgf",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、Java基础"
				}
			]
		},
		{
			"ID": "20220124162906-v3v84qm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-v3v84qm",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、Java基本数据类型"
				}
			]
		},
		{
			"ID": "20220124162906-r5nep44",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-r5nep44",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "int double float string char boolean long byte"
				}
			]
		},
		{
			"ID": "20220124162906-htga2r0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-htga2r0",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、原始数据类型和封装类的区别"
				}
			]
		},
		{
			"ID": "20220124162906-gfg4wzi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-gfg4wzi",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "原始类型是：传值   封装类型：传引用"
				}
			]
		},
		{
			"ID": "20220124162906-7gc6m5u",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220124162906-7gc6m5u",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"ID": "20220124162906-63hrdiz",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220124162906-63hrdiz"
					},
					"Children": [
						{
							"ID": "20220124162906-xy356cz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124162906-xy356cz"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "初始化方式不同"
								}
							]
						}
					]
				},
				{
					"ID": "20220124162906-on7kyuw",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220124162906-on7kyuw"
					},
					"Children": [
						{
							"ID": "20220124162906-5e94l5c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124162906-5e94l5c"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "原始类型是类，封装类型是引用"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220124162906-5a40ymp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-5a40ymp",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、String、StringBuffer、StringBuilder区别"
				}
			]
		},
		{
			"ID": "20220124162906-6jnw3fk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-6jnw3fk",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "string : 字符串常量、为什么不可变（char[] 用final修饰）"
				}
			]
		},
		{
			"ID": "20220124162906-5chgkhs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-5chgkhs",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "stringbuffer ：字符串变量、为什么线程安全（append方法加了 synchronized）"
				}
			]
		},
		{
			"ID": "20220124162906-0raiwie",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-0raiwie",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "stringbuilder：字符串变量、线程不安全、"
				}
			]
		},
		{
			"ID": "20220124162906-utdym55",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-utdym55",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为什么设计不可变呢？（ 设计考虑,效率优化问题,以及安全性）"
				}
			]
		},
		{
			"ID": "20220124162906-v463sh2",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220124162906-v463sh2",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"ID": "20220124162906-hta30mo",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220124162906-hta30mo"
					},
					"Children": [
						{
							"ID": "20220124162906-z5kfkee",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124162906-z5kfkee"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符串常量池需要（ 只有当字符串是不可变的，字符串池才有可能实现。）"
								}
							]
						}
					]
				},
				{
					"ID": "20220124162906-wjlfvyo",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220124162906-wjlfvyo"
					},
					"Children": [
						{
							"ID": "20220124162906-0fy4hcx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124162906-0fy4hcx"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "允许string对象缓存HashCode（ 创建的时候hashcode就被缓存了，不需要重新计算）"
								}
							]
						}
					]
				},
				{
					"ID": "20220124162906-nb71fuu",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20220124162906-nb71fuu"
					},
					"Children": [
						{
							"ID": "20220124162906-ckp6t51",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124162906-ckp6t51"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "安全性（防止 改变字符串指向的对象的值，造成安全漏洞。）"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220124162906-c4t29a0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-c4t29a0",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4、运行时异常和非运行时异常区别"
				}
			]
		},
		{
			"ID": "20220124162906-252g4yk",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220124162906-252g4yk",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"ID": "20220124162906-7eaktbo",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220124162906-7eaktbo"
					},
					"Children": [
						{
							"ID": "20220124162906-q2bqxc3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124162906-q2bqxc3"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "运行时异常：RuntimeException类以及子类，一般由程序错误引起。"
								}
							]
						}
					]
				},
				{
					"ID": "20220124162906-l6eb2he",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220124162906-l6eb2he"
					},
					"Children": [
						{
							"ID": "20220124162906-wwc6kt2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124162906-wwc6kt2"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "非运行时异常：除了RuntimeException以外，必须处理异常，否则编译不通过。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220124162906-r1x6dj5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-r1x6dj5",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5、简述一下面向对象的特征，并举例说明你对面向对象的理解"
				}
			]
		},
		{
			"ID": "20220124162906-o6kkxj9",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220124162906-o6kkxj9",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"ID": "20220124162906-dpk5t1n",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220124162906-dpk5t1n"
					},
					"Children": [
						{
							"ID": "20220124162906-3b5hjiq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124162906-3b5hjiq"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "继承：通过继承父类属性和行为、提高子类扩展性、复用性、"
								}
							]
						}
					]
				},
				{
					"ID": "20220124162906-cog7bry",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220124162906-cog7bry"
					},
					"Children": [
						{
							"ID": "20220124162906-0dij2s8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124162906-0dij2s8"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "封装: 隐藏对象的细节、控制访问、提高安全性、"
								}
							]
						}
					]
				},
				{
					"ID": "20220124162906-iim5img",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20220124162906-iim5img"
					},
					"Children": [
						{
							"ID": "20220124162906-x057p7i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220124162906-x057p7i"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "多态：允许类的不同对象对同一消息做出不同的响应。（解耦）"
								}
							]
						},
						{
							"ID": "20220124162906-tv7mlwg",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20220124162906-tv7mlwg"
							},
							"Children": [
								{
									"ID": "20220124162906-4l4kmyb",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20220124162906-4l4kmyb"
									},
									"Children": [
										{
											"ID": "20220124162906-wflm911",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20220124162906-wflm911"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "满足多态的三个必要条件：继承或者实现接口、重写Override、父类的引用指向子类的对象、"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220124162906-97hesew",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-97hesew",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7、Java 语言如何进行异常处理，关键字：throws、throw、try、catch、finally分别代表什么意义？finally代码是在return之后还是之前执行？"
				}
			]
		},
		{
			"ID": "20220124162906-0i8h4df",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-0i8h4df",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "try：指定一块预防所有“异常”的程序。"
				}
			]
		},
		{
			"ID": "20220124162906-p2lbga0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-p2lbga0",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "catch：紧跟在try程序后面，应包含一个catch子句来指定你想要捕捉的“异常”的类型。"
				}
			]
		},
		{
			"ID": "20220124162906-vjubt36",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-vjubt36",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "throw：用来明确地抛出一个“异常”。"
				}
			]
		},
		{
			"ID": "20220124162906-8ftbivc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-8ftbivc",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "throws：标明一个成员函数可能抛出的各种“异常”。"
				}
			]
		},
		{
			"ID": "20220124162906-pp5b86f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-pp5b86f",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Finally：不管发生什么“异常”都被执行一段代码。"
				}
			]
		},
		{
			"ID": "20220124162906-76avjwu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-76avjwu",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "finally语句总是会执行（除了某些特殊情况），但是是在return语句执行后、真正返回前执行的。"
				}
			]
		},
		{
			"ID": "20220124162906-tjwpgv4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-tjwpgv4",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8、abstract class和interface有什么区别?接口可以继承接口吗？接口可以继承抽象类吗，为什么？"
				}
			]
		},
		{
			"ID": "20220124162906-usununo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-usununo",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "https://blog.csdn.net/b271737818/article/details/3950245"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://blog.csdn.net/b271737818/article/details/3950245"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220124162906-e7sxneq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-e7sxneq",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "9、构造器（constructor）是否可被重写（override）？"
				}
			]
		},
		{
			"ID": "20220124162906-srskgaa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-srskgaa",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不能继承，不能重写、可以重载"
				}
			]
		},
		{
			"ID": "20220124162906-g5m5ook",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-g5m5ook",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "10、是否可以继承String类？"
				}
			]
		},
		{
			"ID": "20220124162906-5sdhygh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-5sdhygh",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不可以、因为被final修饰不允许继承"
				}
			]
		},
		{
			"ID": "20220124162906-s7g088y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-s7g088y",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "11、Java 中的final关键字有哪些用法？"
				}
			]
		},
		{
			"ID": "20220124162906-xd9tyb9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-xd9tyb9",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "12、try{}里有一个return语句，那么紧跟在这个try后的finally{}里的代码会不会被执行，什么时候被执行，在return前还是后?"
				}
			]
		},
		{
			"ID": "20220124162906-4f3u835",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-4f3u835",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "13、阐述final、finally、finalize的区别。"
				}
			]
		},
		{
			"ID": "20220124162906-755mlpc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-755mlpc",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "14、如何通过反射创建对象？"
				}
			]
		},
		{
			"ID": "20220124162906-jcdbk5m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-jcdbk5m",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "15、Java 8的新特性"
				}
			]
		},
		{
			"ID": "20220124162906-bf9ubnm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-bf9ubnm",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "16、Java数组和链表的两种结构的操作效率"
				}
			]
		},
		{
			"ID": "20220124162906-2a9kd25",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220124162906-2a9kd25",
				"updated": "20220124162906"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "17、Java的引用类型有哪几种"
				}
			]
		}
	]
}