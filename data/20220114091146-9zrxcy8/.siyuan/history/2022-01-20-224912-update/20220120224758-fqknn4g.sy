{
	"ID": "20220120224758-fqknn4g",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220120224758-fqknn4g",
		"title": "20220120224758",
		"updated": "20220120224832"
	},
	"Children": [
		{
			"ID": "20220120224829-2m6flkz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220120224829-2m6flkz",
				"updated": "20220120224832"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "JSP Lesson 06\n一、用Servlet验证用户信息是否成功？ Success.jsp : error.jsp;\n1、userLogin.jsp\n\u003c%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%\u003e\n\u003chtml\u003e\n  \u003chead\u003e\n    \u003ctitle\u003eMy JSP 'userLogin.jsp' starting page\u003c/title\u003e\n  \u003c/head\u003e\n \u003cbody\u003e\n    \u003cform action = \"UserLoginServlet\"\u003e\n用户名：\u003cinput type = \"text\" name = \"username\"\u003e\u003cbr\u003e\n密码：\u003cinput type = \"password\" name = \"password\"\u003e\u003cbr\u003e\n性别：男\u003cinput type = \"radio\" name = \"gender\" value = \"男\"\u003e\u0026nbsp;\u0026nbsp;\n女\u003cinput type = \"radio\" name = \"gender\" value = \"女\"\u003e\u003cbr\u003e\n兴趣：足球\u003cinput type = \"checkbox\" name = \"xq\" value = \"足球\"\u003e\u0026nbsp;\u0026nbsp;\n篮球\u003cinput type = \"checkbox\" name = \"xq\" value = \"篮球\"\u003e\u0026nbsp;\u0026nbsp;\n排球\u003cinput type = \"checkbox\" name = \"xq\" value = \"排球\"\u003e\u0026nbsp;\u0026nbsp;\n羽毛球\u003cinput type = \"checkbox\" name = \"xq\" value = \"羽毛球\"\u003e\u003cbr\u003e\n地址：\u003cselect name = \"select\"\u003e\n    \u003coption value = \"茂名\"\u003e茂名\u003c/option\u003e\n    \u003coption value = \"广州\"\u003e广州\u003c/option\u003e\n    \u003coption value = \"深圳\"\u003e深圳\u003c/option\u003e\n\u003c/select\u003e\u003cbr\u003e\n说明：\n\u003ctextarea name = \"text\" rows=\"15\" cols=\"20\"\u003e\u003c/textarea\u003e     \u003cbr\u003e\n\u003cinput type = \"submit\" value = \"提交\"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003cinput type = \"reset\" value = \"重置\"\u003e\n    \u003c/form\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n2、UserLoginServlet.java\npackage com;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport javax.servlet.ServletConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\npublic class UserLoginServlet extends HttpServlet{\n  \n  \n    @Override\n    public void init(ServletConfig config) throws ServletException {\n       // TODO Auto-generated method stub\n       super.init(config);\n       System.out.println(\"init......\");\n    }\n  \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n           throws ServletException, IOException {\n       req.setCharacterEncoding(\"utf-8\");\n       resp.setCharacterEncoding(\"utf-8\");\n   \n       String username = req.getParameter(\"username\");\n       String password = req.getParameter(\"password\");\n       String gender = req.getParameter(\"gender\");\n       String[] xingqu = req.getParameterValues(\"xq\");\n       String text = req.getParameter(\"text\");\n   \n       List\u003cString\u003e list = new ArrayList\u003cString\u003e();\n   \n   \n   \n       if(username == null || \"\".equals(username)){\n           list.add(\"用户名不能为空！\");\n       }else if(username.length()\u003c4 || username.length()\u003e6){\n           list.add(\"用户名的长的为4-6之间！\");\n       }\n       if(password == null || \"\".equals(password)){\n           list.add(\"密码不能为空！\");\n       }else if(password.length()\u003c4 || password.length()\u003e6){\n           list.add(\"密码的长的为4-6之间！\");\n       }\n       if(gender==null){\n           list.add(\"性别必须选一个！\");\n       \n       }\n       if(xingqu == null || xingqu.length == 4){\n           list.add(\"兴趣选1-3个之间！\");\n       }\n       req.setAttribute(\"list\", list);\n       if(list.isEmpty()){\n           req.getRequestDispatcher(\"success.jsp\").forward(req, resp);\n       }else{\n           req.getRequestDispatcher(\"error.jsp\").forward(req, resp);\n       }\n   \n   \n    }\n  \n  \n}\n3、successjsp\n\u003cbody\u003e\n    \u003c%\n    request.setCharacterEncoding(\"utf-8\");\n    response.setCharacterEncoding(\"utf-8\");\n   \n       String username = request.getParameter(\"username\");\n       String password = request.getParameter(\"password\");\n       String gender = request.getParameter(\"gender\");\n       String[] xingqu = request.getParameterValues(\"xq\");\n       String text = request.getParameter(\"text\");\n    %\u003e\n    \u003c%=username %\u003e\u003cbr\u003e\n    \u003c%=password %\u003e\u003cbr\u003e\n    \u003c%=gender %\u003e\u003cbr\u003e\n    \u003c%  \n       for(String str : xingqu){\n    %\u003e\n    \u003c%=str %\u003e\u003cbr\u003e\n    \u003c%\n       }\n    %\u003e\n    \u003c%=text %\u003e\n\u003c/body\u003e\n4、error.jsp\nbody\u003e\n \u003c%\n       List\u003cString\u003e list = (List\u003cString\u003e)request.getAttribute(\"list\");\n       for(String str : list){\n           %\u003e\n       \u003c%=str%\u003e\u003cbr\u003e  \n    \u003c%\n       }\n    %\u003e\n  \u003c/body\u003e\nJSP Lesson 06\n一、计数器\n\t1. \nCounterServlet.jsp\n\n\npackage com;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport javax.servlet.ServletContext;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\npublic class CounterServlet extends HttpServlet {\n    public void doGet(HttpServletRequest request, HttpServletResponse response)\n           throws ServletException, IOException {\n//在request中获取到Session在获取到ServletContext（application）\n       ServletContext con = request.getSession().getServletContext();\n       if(null == con.getAttribute(\"counter\")){\n           con.setAttribute(\"counter\", 1);\n       \n       }else{\n           Integer counter = (Integer)con.getAttribute(\"counter\");\n           con.setAttribute(\"counter\", counter + 1);\n       }\n       //请求转发到counter.jsp\n       request.getRequestDispatcher(\"counter.jsp\").forward(request, response);\n    }\n}\n\t1. \ncounter.jsp(显示1的累加。。。)\n\n\n\u003cbody\u003e\n  \u003c%= application.getAttribute(\"counter\") %\u003e\n  \u003c/body\u003e\n二、CookieServlet.jsp\npackage com;\nimport java.io.IOException;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.Cookie;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\npublic class CookieServlet extends HttpServlet {\n    //成员变量用于累加\n    private int con1;\n    private int con2;\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n           throws ServletException, IOException {\n    //new Cookie 累加\n       Cookie cookie = new Cookie(\"UserName\"+con1++,\"value\"+con2++);\n    //把Cookie添加到响应对象上\n       resp.addCookie(cookie);\n    //设置cookie的最大存活时间\n       cookie.setMaxAge(14);\n    //获得cookie[]\n       Cookie[] RequestCookie = req.getCookies();\n   \n       if(RequestCookie == null){\n           return;\n       }\n       for(Cookie c : RequestCookie){\n           System.out.print(c.getName());\n           System.out.println(c.getValue());\n三 、session.jsp\n\u003cbody\u003e\n  \u003c!-- 最多session存活5秒钟 --\u003e\n\u003c%--  \u003c% session.setMaxInactiveInterval(5); %\u003e  --%\u003e\n\u003c!-- 最多session立即destroy --\u003e\n     \u003c% session.invalidate(); %\u003e\n     \u003c!-- 获取ID --\u003e\n      \u003c%= session.getId() %\u003e\n  \u003c/body\u003e\n四、当客户端同时访问Sleeplogin.jsp时的问题\n1、SleepLogin.jsp\n\u003cbody\u003e\n   \u003cform action=\"SleepServlet\"\u003e\n   username : \u003cinput type = \"text\" name = \"username\"\u003e\u003cbr\u003e\n   \u003cinput type = \"submit\" value = \"提交\"\u003e\n   \u003c/form\u003e\n\u003c/body\u003e\n\t1. \nSleepServlet.java\n\t2. \n/*\n\t3. \n    * 1、\n\t4. \n    * 多个人访问时的线程问题（多个浏览器访问）\n\t5. \n    * 因为Servlet是单实例的，当创建实时而username是成员变量，当第一次赋值时休眠，另外一个在赋值，就改变的原来的值了\n\t6. \n    * 2、\n\t7. \n    * 可以通过getparameter获取自己的值，因为客户端发出了两个不同的request。\n\t8. \n    */\n\t9. \n   private String username;\n\t10. \n   \n\t11. \n   @Override\n\t12. \n   protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n\t13. \n          throws ServletException, IOException {\n\t14. \n   \n\t15. \n       this.username = req.getParameter(\"username\");\n\t16. \n   \n\t17. \n   \n\t18. \n       try{\n\t19. \n          Thread.sleep(10000);\n\t20. \n       }catch(Exception ex){\n\t21. \n          ex.printStackTrace();\n\t22. \n       }\n\t23. \n       req.setAttribute(\"username\", username);\n\t24. \n       req.getRequestDispatcher(\"SleepResult.jsp\").forward(req, resp);\n\t25. \n   }\n\t26. \n}\n\n\n3、SleepResult.jsp\n\u003cbody\u003e\n  \u003c%= request.getAttribute(\"username\") %\u003e\n  \u003c/body\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}